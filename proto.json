
{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API",
    "version": "2000-01-01",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "TO BE POPULATED",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "paths": {
    "/api/events/": {
      "post": {
        "operationId": "create_event",
        "summary": "Create Event",
        "description": "Create an event. Events are created asynchronously.\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2000-01-01"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "TO BE POPULATED"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "events:write"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQuery"
              }
            }
          },
          "description": "Event to create."
        }
      }
    }
  },
  "components": {
    "schemas": {
      "_MetricCreateQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Viewed Product",
            "description": "Name of the event. Must be less than 128 characters."
          },
          "service": {
            "type": "string",
            "description": "This is for advanced usage. For api requests, this should use the default, which is set to api."
          }
        },
        "required": [
          "name"
        ]
      },
      "EventCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "example": {
                  "$email": "matt.kemp@klaviyo-demo.com"
                },
                "description": "\nProperties of the profile that triggered this event. The profile must contain an\nidentifier. The $email and/or $phone_number can be used as the identify the profile.\nOther key value pairs can be used to create segments. For example, to create a list of\npeople on trial plans, include a profile's plan type in the profile. The profile\nsupports special fields. The fields include: $email (string), $first_name (string),\n$last_name (string), $phone_number (string), $city (string), $region (string; state or\nother region), $country (string), $zip (string), $image (string; url to a photo of a\nperson), and $consent (list of strings; eg: ['sms', 'email', 'web', 'directmail',\n'mobile']).\n"
              },
              "metric": {
                "$ref": "#/components/schemas/_MetricCreateQuery",
                "example": {
                  "name": "Viewed Product"
                },
                "description": "The associated metric for the event. An account can have up to 200 unique metrics."
              },
              "properties": {
                "type": "string",
                "format": "blob",
                "example": "{
                  \"Brand\": \"Kids Book\",
                  \"Categories\": [
                    \"Fiction\",
                    \"Children\"
                  ],
                  \"ProductID\": 1111,
                  \"ProductName\": \"Winnie the Pooh\",
                  \"$extra\": {
                    \"URL\": \"http://www.example.com/path/to/product\",
                    \"ImageURL\": \"http://www.example.com/path/to/product/image.png\"
                  }"
                },
                "description": "\n Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.\n"
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "\nWhen this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.\n"
              },
              "value": {
                "type": "number",
                "example": 9.99,
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase."
              },
              "unique_id": {
                "type": "string",
                "description": "\nA unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.\n"
              }
            },
            "required": [
              "profile",
              "metric",
              "properties"
            ]
          }
        }
      },
      "EventCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryResourceObject"
          }
        }
      },
      "EventEnum": {
        "type": "string",
        "enum": [
          "event"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Client Error"
      },
      "ServerError": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Server Error"
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2000-01-01/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Events",
      "description": "events"
    }
  ]
}
