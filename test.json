{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API (Alpha)",
    "version": "2023-02-22.pre",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "TO BE POPULATED",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "paths": {
    "/api/profiles/": {
      "get": {
        "operationId": "get_profiles",
        "summary": "Get Profiles",
        "description": "Get all profiles in an account.\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `updated`, `email`\nYou can adjust the number of results per page via the `page[size]` query parameter, e.g. `?page[size]=25`. **Default**: 20. **Max**: 100.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`",
        "parameters": [
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.suppressions.reason",
                  "subscriptions.email.marketing.suppressions.timestamp",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.email.marketing.list_suppressions.list_id",
                  "subscriptions.email.marketing.list_suppressions.reason",
                  "subscriptions.email.marketing.list_suppressions.timestamp",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`<br>`updated`: `greater-than`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#relationships"
          },
          {
            "name": "page_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "email",
                "-email",
                "id",
                "-id",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-02-22.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TO BE POPULATED",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileWithPredictiveAnalyticsCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "ALPHA"
      }
    },
    "/api/profiles/{id}/": {
      "get": {
        "operationId": "get_profile",
        "summary": "Get Profile",
        "description": "Get the profile with the given profile ID.\nInclude parameters can be provided to get the following related resource data: `lists` memberships, `segments` memberships<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Profiles Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.suppressions.reason",
                  "subscriptions.email.marketing.suppressions.timestamp",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.email.marketing.list_suppressions.list_id",
                  "subscriptions.email.marketing.list_suppressions.reason",
                  "subscriptions.email.marketing.list_suppressions.timestamp",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-02-22.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TO BE POPULATED",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileWithPredictiveAnalyticsWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Profiles Read"
        ],
        "x-klaviyo-pre-release": "ALPHA"
      }
    }
  },
  "components": {
    "schemas": {
      "CatalogItemResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1",
                "description": "The ID of the catalog item in an external system."
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item."
              },
              "price": {
                "type": "number",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item is published."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The ID of the catalog item variant in an external system."
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                "example": 2
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The ID of the catalog category in an external system."
              },
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "EventResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "event"
            ]
          },
          "id": {
            "type": "string",
            "description": "The Event ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "type": "string",
                "description": "The Metric ID"
              },
              "profile_id": {
                "type": "string",
                "description": "Profile ID of the associated profile, if available"
              },
              "timestamp": {
                "type": "string",
                "description": "Event timestamp in seconds"
              },
              "event_properties": {
                "type": "object",
                "description": "Event properties, can include attribution data, identifiers and extra properties"
              },
              "datetime": {
                "type": "string",
                "description": "Event timestamp in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "uuid": {
                "type": "string",
                "description": "A unique identifier for the event, this can be used as a cursor in pagination"
              }
            },
            "required": [
              "metric_id"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "MetricResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric"
            ]
          },
          "id": {
            "type": "string",
            "description": "The Metric ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric"
              },
              "created": {
                "type": "string",
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "integration": {
                "type": "object",
                "description": "The integration associated with the event"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "89 E 42nd St",
            "description": "First line of street address"
          },
          "address2": {
            "type": "string",
            "example": "1st floor",
            "description": "Second line of street address"
          },
          "city": {
            "type": "string",
            "example": "New York",
            "description": "City name"
          },
          "country": {
            "type": "string",
            "example": "United States",
            "description": "Country name"
          },
          "latitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "40.7128",
            "description": "Latitude coordinate. We recommend providing a precision of four decimal places."
          },
          "longitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "74.0060",
            "description": "Longitude coordinate. We recommend providing a precision of four decimal places."
          },
          "region": {
            "type": "string",
            "example": "NY",
            "description": "Region within a country, such as state or province"
          },
          "zip": {
            "type": "string",
            "example": "10017",
            "description": "Zip code"
          },
          "timezone": {
            "type": "string",
            "example": "America/New_York",
            "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database."
          }
        }
      },
      "EmailMarketingSuppression": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "example": "HARD_BOUNCE",
            "description": "The reason the profile was suppressed from the list."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketingListSuppression": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "The ID of list to which the suppression applies."
          },
          "reason": {
            "type": "string",
            "example": "USER_SUPPRESSED",
            "description": "The reason the profile was suppressed from the list."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "list_id",
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketing": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "string",
            "example": "SUBSCRIBED",
            "description": "The consent status for email marketing."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when consent record or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          },
          "method": {
            "type": "string",
            "example": "PREFERENCE_PAGE",
            "description": "The method by which the profile was subscribed to email marketing."
          },
          "method_detail": {
            "type": "string",
            "example": "mydomain.com/signup",
            "description": "Additional details about the method by which the profile was subscribed to SMS marketing. This may be empty if no details were provided."
          },
          "custom_method_detail": {
            "type": "string",
            "example": "marketing drive",
            "description": "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided."
          },
          "double_optin": {
            "type": "boolean",
            "example": "True",
            "description": "Whether the profile was subscribed to email marketing using a double opt-in."
          },
          "suppressions": {
            "$ref": "#/components/schemas/EmailMarketingSuppression",
            "description": "The global email marketing suppressions for this profile."
          },
          "list_suppressions": {
            "$ref": "#/components/schemas/EmailMarketingListSuppression",
            "description": "The list suppressions for this profile."
          }
        },
        "required": [
          "consent",
          "method"
        ]
      },
      "EmailChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/EmailMarketing",
            "description": "The email marketing subscription."
          }
        }
      },
      "SMSMarketing": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "string",
            "example": "SUBSCRIBED",
            "description": "The consent status for SMS marketing."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when consent record or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          },
          "method": {
            "type": "string",
            "example": "TEXT",
            "description": "The method by which the profile was subscribed to SMS marketing."
          },
          "method_detail": {
            "type": "string",
            "example": "JOIN",
            "description": "Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided."
          }
        },
        "required": [
          "consent",
          "timestamp",
          "method",
          "method_detail"
        ]
      },
      "SMSChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/SMSMarketing",
            "description": "The SMS marketing subscription."
          }
        }
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/EmailChannel",
            "description": "The email channel subscription."
          },
          "sms": {
            "$ref": "#/components/schemas/SMSChannel",
            "description": "The SMS channel subscription."
          }
        }
      },
      "ProfileResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "subscriptions": {
                "$ref": "#/components/schemas/Subscriptions"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ListTagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "SegmentResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment "
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "SegmentTagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "PredictiveAnalytics": {
        "type": "object",
        "properties": {
          "historic_clv": {
            "type": "number",
            "example": 93.87,
            "description": "Total value of all historically placed orders"
          },
          "predicted_clv": {
            "type": "number",
            "example": 27.24,
            "description": "Predicted value of all placed orders in the next 365 days"
          },
          "total_clv": {
            "type": "number",
            "example": 121.11,
            "description": "Sum of historic and predicted CLV"
          },
          "historic_number_of_orders": {
            "type": "integer",
            "example": 2,
            "description": "Number of already placed orders"
          },
          "predicted_number_of_orders": {
            "type": "number",
            "example": 0.54,
            "description": "Predicted number of placed orders in the next 365 days"
          },
          "average_days_between_orders": {
            "type": "number",
            "example": 189,
            "description": "Average number of days between orders (None if only one order has been placed)"
          },
          "average_order_value": {
            "type": "number",
            "example": 46.94,
            "description": "Average value of placed orders"
          },
          "churn_probability": {
            "type": "number",
            "example": 0.89,
            "description": "Probability the customer has churned"
          },
          "expected_date_of_next_order": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00",
            "description": "Expected date of next order, as calculated at the time of their most recent order"
          }
        }
      },
      "ProfileWithPredictiveAnalyticsObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "subscriptions": {
                "$ref": "#/components/schemas/Subscriptions"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetProfileWithPredictiveAnalyticsCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileWithPredictiveAnalyticsObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "list"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "segment"
                                    ]
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "enum": [
                        "profile"
                      ]
                    },
                    "attributes": {
                      "properties": {
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetProfileWithPredictiveAnalyticsWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileWithPredictiveAnalyticsObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "list"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "segment"
                                  ]
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "profile"
                    ]
                  },
                  "attributes": {
                    "properties": {
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "SingleProfileAggregate": {
        "type": "object",
        "properties": {
          "series": {
            "type": "object"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "series"
        ]
      },
      "ProfileAggregateResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-aggregate"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "aggregates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SingleProfileAggregate"
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "FlowResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "trigger_type": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "FlowActionResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-action"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "FlowTagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_name": {
            "type": "string"
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_name"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "media"
        ]
      },
      "FlowMessageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-message"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y6nRLr"
            ],
            "description": "A list of included audiences"
          },
          "excluded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UTd5ui"
            ],
            "description": "An optional list of excluded audiences"
          }
        }
      },
      "SendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "description": "Use smart sending. Defaults to True"
          }
        }
      },
      "UTMParamsSubObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "utm_medium",
            "description": "Name of the UTM param"
          },
          "value": {
            "type": "string",
            "example": "campaign",
            "description": "Value of the UTM param. Can be templated data."
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "TrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_tracking_opens": {
            "type": "boolean",
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults."
          },
          "is_tracking_clicks": {
            "type": "boolean",
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults."
          },
          "is_add_utm": {
            "type": "boolean",
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00",
            "description": "The time to send at"
          },
          "is_local": {
            "type": "boolean",
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False."
          },
          "send_past_recipients_immediately": {
            "type": "boolean",
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False."
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The time to send at"
          },
          "throttle_percentage": {
            "type": "integer",
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "STOScheduleOptions": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The day to send on"
          }
        },
        "required": [
          "date"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "example": "static",
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']"
          },
          "options_static": {
            "$ref": "#/components/schemas/StaticScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method."
          },
          "options_throttled": {
            "$ref": "#/components/schemas/ThrottledScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method."
          },
          "options_sto": {
            "$ref": "#/components/schemas/STOScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method."
          }
        },
        "required": [
          "method"
        ]
      },
      "CampaignResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "id": {
            "type": "string",
            "description": "The campaign ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The campaign name"
              },
              "status": {
                "type": "string",
                "description": "The current status of the campaign"
              },
              "archived": {
                "type": "boolean",
                "description": "Whether the campaign has been archived or not"
              },
              "channel": {
                "type": "string",
                "description": "The type of campaign"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "message": {
                "type": "string",
                "description": "The id of the message associated with the campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign was created"
              },
              "scheduled_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign was scheduled for future sending"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign was last updated by a user or the system"
              },
              "send_time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
              }
            },
            "required": [
              "name",
              "status",
              "archived",
              "channel",
              "audiences",
              "send_options",
              "message",
              "tracking_options",
              "send_strategy",
              "created_at",
              "scheduled_at",
              "updated_at",
              "send_time"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Buy our product!",
            "description": "The subject of the message"
          },
          "preview_text": {
            "type": "string",
            "example": "My preview text",
            "description": "Preview text associated with the message"
          },
          "from_email": {
            "type": "string",
            "example": "store@my-company.com",
            "description": "The email the message should be sent from"
          },
          "from_label": {
            "type": "string",
            "example": "My Company",
            "description": "The label associated with the from_email"
          },
          "template_id": {
            "type": "string",
            "example": "RipRmi",
            "description": "The ID of the template associated to the message"
          },
          "template_name": {
            "type": "string",
            "example": "My email template",
            "description": "The name of the template associated to the message"
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00",
            "description": "The datetime that the message is to be sent"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether that datetime is to be a local datetime for the recipient"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "CampaignMessageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "id": {
            "type": "string",
            "description": "The message ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label or name on the message"
              },
              "channel": {
                "type": "string",
                "description": "The channel the message is to be sent on"
              },
              "content": {
                "$ref": "#/components/schemas/ContentSubObject",
                "description": "Additional attributes relating to the content of the message"
              },
              "send_times": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SendTimeSubObject"
                },
                "description": "The list of appropriate Send Time Sub-objects associated with the message"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the message was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the message was last updated"
              },
              "campaign_id": {
                "type": "string",
                "description": "The parent campaign id"
              }
            },
            "required": [
              "label",
              "channel",
              "content",
              "campaign_id"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CampaignTagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CampaignSendJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of the campaign to send"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "The status of the send job"
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CampaignRecipientEstimationJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-recipient-estimation-job"
            ]
          },
          "id": {
            "type": "string",
            "example": "01GMRWDSA0ARTAKE1SFX8JGXAY",
            "description": "The ID of the campaign used for estimating recipients"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "The status of the recipient estimation job"
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CampaignRecipientEstimationResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-recipient-estimation"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of the campaign for which to get the estimated number of recipients"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "estimated_recipient_count": {
                "type": "integer",
                "description": "The estimated number of unique recipients the campaign will send to"
              }
            },
            "required": [
              "estimated_recipient_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "TemplateResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "company_id": {
                "type": "string",
                "example": "COMPANY_ID",
                "description": "The ID of the company the template belongs to"
              },
              "name": {
                "type": "string",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": " `editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor\n"
              },
              "html": {
                "type": "string",
                "description": "The rendered HTML of the template"
              },
              "text": {
                "type": "string",
                "description": "The template plain_text"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            },
            "required": [
              "company_id",
              "name",
              "editor_type",
              "html"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "example": "/data",
            "default": "/data",
            "description": "A pointer to the source of the error in the request payload."
          }
        },
        "required": [
          "pointer"
        ]
      },
      "CatalogJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94",
            "description": "Unique identifier for the error."
          },
          "code": {
            "type": "string",
            "example": "invalid",
            "description": "A code for classifying the error type."
          },
          "title": {
            "type": "string",
            "example": "Invalid input",
            "description": "A high-level message about the error."
          },
          "detail": {
            "type": "string",
            "example": "The payload provided in the request is invalid.",
            "description": "Specific details about the error."
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource",
            "description": "Additional information on the source of the error."
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "CatalogItemCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "TagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "TagGroupResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean",
                "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
              },
              "default": {
                "type": "boolean",
                "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
              }
            },
            "required": [
              "name",
              "exclusive",
              "default"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ApiAnalyticsSampleResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "test-api-analytics-sample"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1",
                "description": "The ID of the catalog item in an external system."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported."
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true,
                "description": "Boolean value indicating whether the catalog item is published."
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-category"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The ID of the catalog item variant in an external system."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported."
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                "example": 25.0
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The ID of the catalog category in an external system."
              },
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
          }
        }
      },
      "_MetricCreateQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Viewed Product",
            "description": "Name of the event. Must be less than 128 characters."
          },
          "service": {
            "type": "string",
            "description": "This is for advanced usage. For api requests, this should use the default, which is set to api."
          }
        },
        "required": [
          "name"
        ]
      },
      "EventCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "event"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "example": {
                  "$email": "matt.kemp@klaviyo-demo.com"
                },
                "description": "\nProperties of the profile that triggered this event. The profile must contain an\nidentifier. The $email and/or $phone_number can be used as the identify the profile.\nOther key value pairs can be used to create segments. For example, to create a list of\npeople on trial plans, include a profile's plan type in the profile. The profile\nsupports special fields. The fields include: $email (string), $first_name (string),\n$last_name (string), $phone_number (string), $city (string), $region (string; state or\nother region), $country (string), $zip (string), $image (string; url to a photo of a\nperson), and $consent (list of strings; eg: ['sms', 'email', 'web', 'directmail',\n'mobile']).\n"
              },
              "metric": {
                "$ref": "#/components/schemas/_MetricCreateQuery",
                "example": {
                  "name": "Viewed Product"
                },
                "description": "The associated metric for the event. An account can have up to 200 unique metrics."
              },
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "\n Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.\n"
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "\nWhen this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.\n"
              },
              "value": {
                "type": "number",
                "example": 9.99,
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase."
              },
              "unique_id": {
                "type": "string",
                "description": "\nA unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.\n"
              }
            },
            "required": [
              "profile",
              "metric",
              "properties"
            ]
          }
        }
      },
      "EventCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryAsSubResource"
          }
        }
      },
      "MetricAggregateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric-aggregate"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "type": "string",
                "example": "0rG4eQ",
                "description": "The metric ID used in the aggregation."
              },
              "page_cursor": {
                "type": "string",
                "description": "Optional pagination cursor to iterate over large result sets"
              },
              "measurements": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": "count",
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`"
              },
              "interval": {
                "type": "string",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ],
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "example": "day"
              },
              "page_size": {
                "type": "integer",
                "example": 500,
                "default": 500,
                "description": "Alter the maximum number of returned rows in a single page of aggregation results"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "example": "$message",
                "description": "Optional attribute(s) used for partitioning by the aggregation function"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              },
              "filter": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ],
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field."
              },
              "timezone": {
                "type": "string",
                "example": "America/New_York",
                "default": "UTC",
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive."
              },
              "sort": {
                "type": "string",
                "enum": [
                  "$attributed_channel",
                  "-$attributed_channel",
                  "$attributed_flow",
                  "-$attributed_flow",
                  "$attributed_message",
                  "-$attributed_message",
                  "$attributed_variation",
                  "-$attributed_variation",
                  "$campaign_channel",
                  "-$campaign_channel",
                  "$flow",
                  "-$flow",
                  "$flow_channel",
                  "-$flow_channel",
                  "$message",
                  "-$message",
                  "$message_send_cohort",
                  "-$message_send_cohort",
                  "$variation",
                  "-$variation",
                  "$variation_send_cohort",
                  "-$variation_send_cohort",
                  "Bounce Type",
                  "-Bounce Type",
                  "Campaign Name",
                  "-Campaign Name",
                  "Client Canonical",
                  "-Client Canonical",
                  "Client Name",
                  "-Client Name",
                  "Client Type",
                  "-Client Type",
                  "Email Domain",
                  "-Email Domain",
                  "Failure Source",
                  "-Failure Source",
                  "Failure Type",
                  "-Failure Type",
                  "From Number",
                  "-From Number",
                  "From Phone Region",
                  "-From Phone Region",
                  "List",
                  "-List",
                  "Message Name",
                  "-Message Name",
                  "Message Type",
                  "-Message Type",
                  "Method",
                  "-Method",
                  "Subject",
                  "-Subject",
                  "To Number",
                  "-To Number",
                  "To Phone Region",
                  "-To Phone Region",
                  "URL",
                  "-URL",
                  "count",
                  "-count",
                  "form_id",
                  "-form_id",
                  "sum_value",
                  "-sum_value",
                  "unique",
                  "-unique"
                ],
                "description": "Provide a sort key (e.g. -$message)"
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "interval",
              "filter"
            ]
          }
        }
      },
      "MetricAggregateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryAsSubResource"
          }
        }
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dimensions associated with this set of measurements"
          },
          "measurements": {
            "type": "object",
            "description": "Dictionary of measurement_key, values"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "ListCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryAsSubResource"
          }
        }
      },
      "ProfileCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          }
        }
      },
      "ProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryAsSubResource"
          }
        }
      },
      "CampaignCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "channel": {
                "type": "string",
                "example": "email",
                "description": "The type of campaign (email or sms, for example)"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy."
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              }
            },
            "required": [
              "name",
              "channel",
              "audiences",
              "send_strategy",
              "send_options"
            ]
          }
        }
      },
      "CampaignCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryAsSubResource"
          }
        }
      },
      "CampaignCloneQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The campaign ID to be cloned"
              },
              "new_name": {
                "type": "string",
                "example": "My cloned campaign's new name",
                "description": "The name for the new cloned campaign"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryAsSubResource"
          }
        }
      },
      "CampaignMessageAssignTemplateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The message ID to be assigned to"
              },
              "template_id": {
                "type": "string",
                "example": "RipRmi",
                "description": "The template ID to assign"
              }
            },
            "required": [
              "id",
              "template_id"
            ]
          }
        }
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryAsSubResource"
          }
        }
      },
      "CampaignSendJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryAsSubResource"
          }
        }
      },
      "CampaignRecipientEstimationJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-recipient-estimation-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the campaign to perform recipient estimation"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignRecipientEstimationJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQueryAsSubResource"
          }
        }
      },
      "TemplateCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "Restricted to CODE"
              },
              "html": {
                "type": "string",
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        ",
                "description": "The HTML contents of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext version of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        }
      },
      "TemplateCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryAsSubResource"
          }
        }
      },
      "TemplateRenderQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "context": {
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                },
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/115005084927-Template-tags-and-variable-syntax-reference-classic-editor-) for more details."
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            },
            "required": [
              "id",
              "context"
            ]
          }
        }
      },
      "TemplateRenderQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryAsSubResource"
          }
        }
      },
      "TemplateCloneQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template to be cloned"
              },
              "name": {
                "type": "string",
                "example": "Clone of Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Any subset of TemplateResponse fields"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "TemplateCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryAsSubResource"
          }
        }
      },
      "CatalogItemCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
                },
                "description": "Array of catalog items to create."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogItemUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
                },
                "description": "Array of catalog items to update."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogItemDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemDeleteQueryAsSubResource"
                },
                "description": "Array of catalog items to delete."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
                },
                "description": "Array of catalog variants to create."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
                },
                "description": "Array of catalog variants to update."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantDeleteQueryAsSubResource"
                },
                "description": "Array of catalog variants to delete."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
                },
                "description": "Array of catalog categories to create."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
                },
                "description": "Array of catalog categories to update."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteQueryAsSubResource"
                },
                "description": "Array of catalog categories to delete."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "TagCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              },
              "tag_group_id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group."
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryAsSubResource"
          }
        }
      },
      "TagGroupCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryAsSubResource"
          }
        }
      },
      "Suppression": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "matt-kemp@klaviyo-demo.com",
            "description": "The email of the profile to suppress / unsuppress."
          }
        },
        "required": [
          "email"
        ]
      },
      "SuppressionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-suppression-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be created."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "UnsuppressionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-unsuppression-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be removed."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "UnsuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "SubscriptionChannels": {
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARKETING"
              ],
              "description": "The communication types supported by email subscriptions."
            },
            "example": [
              "MARKETING"
            ],
            "description": "The communication types to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\"."
          },
          "sms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARKETING"
              ],
              "description": "The communication types supported by SMS subscriptions."
            },
            "example": [
              "MARKETING"
            ],
            "description": "The communication types to subscribe to on the \"SMS\" Channel. Currently supports \"MARKETING\"."
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "channels": {
            "$ref": "#/components/schemas/SubscriptionChannels",
            "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers."
          },
          "email": {
            "type": "string",
            "example": "matt-kemp@klaviyo-demo.com",
            "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted."
          },
          "phone_number": {
            "type": "string",
            "example": "+15005550006",
            "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted."
          },
          "profile_id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup."
          }
        }
      },
      "SubscriptionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-subscription-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "The list to add the newly subscribed profiles to"
              },
              "custom_source": {
                "type": "string",
                "example": "Marketing Event",
                "description": "A custom method detail or source to store on the consent records."
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Subscription"
                },
                "description": "One or more subscriptions to be created."
              }
            },
            "required": [
              "list_id",
              "subscriptions"
            ]
          }
        }
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "UnsubscriptionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-unsubscription-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Optional, the list to remove the profiles from"
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "[\"matt-kemp@klaviyo-demo.com\", \"sarah.mason@klaviyo-demo.com\"",
                "description": "The emails to unsubscribe if any."
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "[\"+15005550006\",\"+15005550007\"]",
                "description": "The phone numbers to unsubscribe if any."
              }
            }
          }
        }
      },
      "UnsubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "DataPrivacyCreateDeletionJobQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "data-privacy-deletion-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile_id": {
                "type": "string",
                "example": "01F2VWQ645BES947MP1BPAKVMB",
                "description": "The ID of the profile to delete. This is the `id` field on the profile object."
              },
              "email": {
                "type": "string",
                "example": "matt.kemp@klaviyo-demo.com",
                "description": "The email address of the profile to delete."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "The phone number of the profile to delete."
              }
            }
          }
        }
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryAsSubResource"
          }
        }
      },
      "OnsiteSubscriptionCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscription"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "The list ID to add the newly subscribed profile to."
              },
              "custom_source": {
                "type": "string",
                "example": "Homepage footer signup form",
                "description": "A custom method detail or source to store on the consent records for this subscription."
              },
              "email": {
                "type": "string",
                "example": "matt.kemp@klaviyo-demo.com",
                "description": "Email address to create subscription and email consent record for."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Phone number to create subscription and SMS consent record for, in E.164 format."
              },
              "properties": {
                "type": "object",
                "example": {
                  "first_name": "Matt",
                  "last_name": "Kemp",
                  "favorite_color": "Blue"
                },
                "description": "Profile properties to set on the newly subscribed profile."
              }
            },
            "required": [
              "list_id"
            ]
          }
        }
      },
      "OnsiteSubscriptionCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryAsSubResource"
          }
        }
      },
      "_OnsiteProfileMetaIdentifiers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "email": {
            "type": "string",
            "example": "sarah.mason@klaviyo-demo.com",
            "description": "Individual's email address"
          },
          "phone_number": {
            "type": "string",
            "example": "+15005550006",
            "description": "Individual's phone number in E.164 format"
          },
          "external_id": {
            "type": "string",
            "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
            "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
          },
          "anonymous_id": {
            "type": "string"
          },
          "_kx": {
            "type": "string",
            "example": "J8fjcn003Wy6b-3ILNlOyZXabW6dcFwTyeuxrowMers%3D.McN66",
            "description": "\nAlso known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint.\n"
          }
        }
      },
      "_OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "identifiers": {
            "$ref": "#/components/schemas/_OnsiteProfileMetaIdentifiers"
          }
        },
        "required": [
          "identifiers"
        ]
      },
      "OnsiteProfileCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_OnsiteProfileMeta"
          }
        }
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryAsSubResource"
          }
        }
      },
      "NestedListItemResponseElement": {
        "type": "object",
        "properties": {
          "nested_name": {
            "type": "string"
          },
          "nested_number": {
            "type": "integer"
          }
        },
        "required": [
          "nested_name",
          "nested_number"
        ]
      },
      "CatalogItemUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "description": {
                "type": "string",
                "example": "A description of the catalog item.",
                "description": "A description of the catalog item."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item is published."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-category"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.\n",
                "example": 2
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              }
            }
          }
        }
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
          }
        }
      },
      "ListPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryAsSubResource"
          }
        }
      },
      "SegmentPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryAsSubResource"
          }
        }
      },
      "ProfilePartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          }
        }
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryAsSubResource"
          }
        }
      },
      "FlowUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow"
            ]
          },
          "id": {
            "type": "string",
            "description": "ID of the Flow to update. Ex: XVTP5Q"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Status you want to update the flow to. ['draft', 'manual', or 'live']"
              }
            },
            "required": [
              "status"
            ]
          }
        }
      },
      "FlowUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryAsSubResource"
          }
        }
      },
      "CampaignPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "id": {
            "type": "string",
            "description": "The campaign ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryAsSubResource"
          }
        }
      },
      "CampaignMessagePartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "id": {
            "type": "string",
            "description": "The message ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "$ref": "#/components/schemas/ContentSubObject",
                "description": "Additional attributes relating to the content of the message"
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryAsSubResource"
          }
        }
      },
      "CampaignSendJobPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of the currently sending campaign to cancel or revert"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "example": "cancel",
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'"
              }
            },
            "required": [
              "action"
            ]
          }
        }
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryAsSubResource"
          }
        }
      },
      "TemplateUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "html": {
                "type": "string",
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          ",
                "description": "The HTML of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            }
          }
        }
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryAsSubResource"
          }
        }
      },
      "TagUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryAsSubResource"
          }
        }
      },
      "TagGroupUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryAsSubResource"
          }
        }
      },
      "CatalogItemDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogVariantDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogCategoryDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "ObjectLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Client Error"
      },
      "ServerError": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Server Error"
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2023-02-22.pre/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Datas",
      "description": "datas"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Subscriptions",
      "description": "subscriptions"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Tests",
      "description": "tests"
    }
  ]
}
