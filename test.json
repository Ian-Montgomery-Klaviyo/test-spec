{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API (Beta)",
    "version": "2024-07-15.pre",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "paths": {
    "/api/segments/": {
      "get": {
        "operationId": "get_segments_beta",
        "summary": "Get Segments",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet all segments in an account.\n\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`<br>`is_active`: `any`, `equals`<br>`is_starred`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Segments",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "BETA"
      },
      "post": {
        "operationId": "create_segment_beta",
        "summary": "Create Segment",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nCreate a segment.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`<br>Daily: `100/d`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSegmentCreateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Segments",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m",
          "daily": "100/d"
        },
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/segments/{id}/": {
      "get": {
        "operationId": "get_segment_beta",
        "summary": "Get Segment",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[segment]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-07-15.pre/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[segment]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            }
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred",
                  "profile_count"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Segments",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_segment_beta",
        "summary": "Update Segment",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nUpdate a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`<br>Daily: `100/d`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSegmentPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Segments",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m",
          "daily": "100/d"
        },
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/webhooks/": {
      "get": {
        "operationId": "get_webhook_subscriptions",
        "summary": "Get Webhook Subscriptions",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet all webhook subscriptions in an account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "fields[webhook]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA"
      },
      "post": {
        "operationId": "create_webhook_subscription",
        "summary": "Create Webhook Subscription",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nCreate a new Webhook Subscription.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWebhookResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:write"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/webhooks/{id}/": {
      "get": {
        "operationId": "get_webhook_subscription",
        "summary": "Get Webhook Subscription",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet the webhook subscription with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the webhook.",
            "schema": {
              "type": "string",
              "description": "The ID of the webhook."
            },
            "in": "path"
          },
          {
            "name": "fields[webhook]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_webhook_subscription",
        "summary": "Update Webhook Subscription",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nUpdate the webhook subscription with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the webhook.",
            "schema": {
              "type": "string",
              "description": "The ID of the webhook."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchWebhookResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:write"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPartialUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_webhook_subscription",
        "summary": "Delete Webhook Subscription",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nDelete a webhook subscription with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the webhook.",
            "schema": {
              "type": "string",
              "description": "The ID of the webhook."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:write"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/webhook-topics/": {
      "get": {
        "operationId": "get_topics",
        "summary": "Get Topics",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet all topics in a Klaviyo account.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookTopicResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/webhook-topics/{id}/": {
      "get": {
        "operationId": "get_topic",
        "summary": "Get Topic",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet the topic with the given ID.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`webhooks:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the webhook topic.",
            "schema": {
              "type": "string",
              "example": "event:klaviyo.sent_sms",
              "description": "The ID of the webhook topic."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhookTopicResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "webhooks:read"
        ],
        "tags": [
          "Beta APIs"
        ],
        "x-klaviyo-subtag": "Webhooks",
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/conversation-messages/": {
      "post": {
        "operationId": "create_conversation_message",
        "summary": "Create Conversation Message",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nCreate a conversation message.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`conversations:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "conversations:write"
        ],
        "tags": [
          "Conversations"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationMessageCreateQuery"
              }
            }
          },
          "description": "Create a conversation message"
        }
      }
    },
    "/api/forms/": {
      "get": {
        "operationId": "get_forms",
        "summary": "Get Forms",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet all forms in an account.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "fields[form-version]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form_type",
                  "ab_test",
                  "status",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[form]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "ab_test",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `contains`, `equals`<br>`ab_test`: `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form-versions"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 20. Min: 1. Max: 100."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ],
        "tags": [
          "Forms"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/forms/{id}/": {
      "get": {
        "operationId": "get_form",
        "summary": "Get Form",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet the form with the given ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`forms:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the form",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "The ID of the form"
            },
            "in": "path"
          },
          {
            "name": "fields[form-version]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form_type",
                  "ab_test",
                  "status",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[form]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "ab_test",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form-versions"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "forms:read"
        ],
        "tags": [
          "Forms"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/profiles/{id}/segments/": {
      "get": {
        "operationId": "get_profile_segments",
        "summary": "Get Profile Segments",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/profiles/{id}/conversation/": {
      "get": {
        "operationId": "get_profile_conversation",
        "summary": "Get Profile Conversation",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet the conversation for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`conversations:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "conversations:read",
          "profiles:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/profiles/{id}/relationships/conversation/": {
      "get": {
        "operationId": "get_profile_relationships_conversation",
        "summary": "Get Profile Relationships Conversation",
        "description": "\n        > \ud83d\udea7 This endpoint is in beta and subject to change.\n        >\n        > A beta revision header (2024-07-15.pre) is required to use our beta APIs. Klaviyo APIs in beta are not intended for use in production. See our [versioning and deprecation policy](https://developers.klaviyo.com/en/docs/api_versioning_and_deprecation_policy) for more information.\n        \n\nGet the conversation relationship for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`conversations:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2024-07-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileConversationRelationshipsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError"
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "x-klaviyo-scopes": [
          "conversations:read",
          "profiles:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "BETA"
      }
    }
  },
  "components": {
    "schemas": {
      "CouponResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "10OFF",
                "description": "This is the id that is stored in an integration such as Shopify or Magento."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "10% off for purchases over $50",
                "description": "A description of the coupon."
              }
            },
            "required": [
              "external_id"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CouponCodeResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "type": "string",
                "nullable": true,
                "example": "ASD325FHK324UJDOI2M3JNES99",
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2023-01-01T00:00:00Z",
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year."
              },
              "status": {
                "type": "string",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "VERSION_NOT_ACTIVE"
                ],
                "description": "The current status of the coupon code.",
                "nullable": true,
                "example": "UNASSIGNED"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "nullable": true,
                "example": "SAMPLE-DATA-ITEM-1",
                "description": "The ID of the catalog item in an external system."
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item."
              },
              "price": {
                "type": "number",
                "nullable": true,
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "nullable": true,
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "nullable": true,
                "example": true,
                "description": "Boolean value indicating whether the catalog item is published."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "nullable": true,
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The ID of the catalog item variant in an external system."
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "nullable": true,
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "nullable": true,
                "example": 2
              },
              "inventory_quantity": {
                "type": "number",
                "nullable": true,
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "nullable": true,
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "nullable": true,
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "nullable": true,
                "example": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "nullable": true,
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The ID of the catalog category in an external system."
              },
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "example": "/data",
            "default": "/data",
            "description": "A pointer to the source of the error in the request payload."
          }
        }
      },
      "APIJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94",
            "description": "Unique identifier for the error."
          },
          "code": {
            "type": "string",
            "example": "invalid",
            "description": "A code for classifying the error type."
          },
          "title": {
            "type": "string",
            "example": "Invalid input",
            "description": "A high-level message about the error."
          },
          "detail": {
            "type": "string",
            "example": "The payload provided in the request is invalid.",
            "description": "Specific details about the error."
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource",
            "description": "Additional information on the source of the error."
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "CouponCodeCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "EventResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "id": {
            "type": "string",
            "description": "The Event ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "timestamp": {
                "type": "integer",
                "nullable": true,
                "description": "Event timestamp in seconds"
              },
              "event_properties": {
                "type": "object",
                "nullable": true,
                "description": "Event properties, can include identifiers and extra properties"
              },
              "datetime": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T01:23:45+00:00",
                "description": "Event timestamp in ISO8601 format (YYYY-MM-DDTHH:MM:SS+hh:mm)"
              },
              "uuid": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier for the event, this can be used as a cursor in pagination"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "MetricResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "id": {
            "type": "string",
            "description": "The Metric ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "description": "The name of the metric"
              },
              "created": {
                "type": "string",
                "nullable": true,
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "nullable": true,
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "integration": {
                "type": "object",
                "nullable": true,
                "description": "The integration associated with the event"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "nullable": true,
            "example": "89 E 42nd St",
            "description": "First line of street address"
          },
          "address2": {
            "type": "string",
            "nullable": true,
            "example": "1st floor",
            "description": "Second line of street address"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "example": "New York",
            "description": "City name"
          },
          "country": {
            "type": "string",
            "nullable": true,
            "example": "United States",
            "description": "Country name"
          },
          "latitude": {
            "nullable": true,
            "example": "40.7128",
            "description": "Latitude coordinate. We recommend providing a precision of four decimal places.",
            "type": "string"
          },
          "longitude": {
            "nullable": true,
            "example": "74.0060",
            "description": "Longitude coordinate. We recommend providing a precision of four decimal places.",
            "type": "string"
          },
          "region": {
            "type": "string",
            "nullable": true,
            "example": "NY",
            "description": "Region within a country, such as state or province"
          },
          "zip": {
            "type": "string",
            "nullable": true,
            "example": "10017",
            "description": "Zip code"
          },
          "timezone": {
            "type": "string",
            "nullable": true,
            "example": "America/New_York",
            "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database."
          },
          "ip": {
            "type": "string",
            "nullable": true,
            "example": "127.0.0.1",
            "description": "IP Address"
          }
        }
      },
      "EmailMarketingSuppression": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "example": "HARD_BOUNCE",
            "description": "The reason the profile was suppressed from the list."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketingListSuppression": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "The ID of list to which the suppression applies."
          },
          "reason": {
            "type": "string",
            "example": "USER_SUPPRESSED",
            "description": "The reason the profile was suppressed from the list."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "list_id",
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketing": {
        "type": "object",
        "properties": {
          "can_receive_email_marketing": {
            "type": "boolean",
            "description": "Whether or not this profile has implicit consent to receive email marketing. True if it does profile does not have any global suppressions."
          },
          "consent": {
            "type": "string",
            "example": "SUBSCRIBED",
            "description": "The consent status for email marketing."
          },
          "consent_timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when consent was recorded or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when a field on the email marketing object was last modified."
          },
          "method": {
            "type": "string",
            "nullable": true,
            "example": "PREFERENCE_PAGE",
            "description": "The method by which the profile was subscribed to email marketing."
          },
          "method_detail": {
            "type": "string",
            "nullable": true,
            "example": "mydomain.com/signup",
            "default": "",
            "description": "Additional details about the method by which the profile was subscribed to email marketing. This may be empty if no details were provided."
          },
          "custom_method_detail": {
            "type": "string",
            "nullable": true,
            "example": "marketing drive",
            "description": "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided."
          },
          "double_optin": {
            "type": "boolean",
            "nullable": true,
            "example": "True",
            "description": "Whether the profile was subscribed to email marketing using a double opt-in."
          },
          "suppression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingSuppression"
            },
            "nullable": true,
            "description": "The global email marketing suppression for this profile."
          },
          "list_suppressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingListSuppression"
            },
            "nullable": true,
            "description": "The list suppressions for this profile."
          }
        },
        "required": [
          "can_receive_email_marketing",
          "consent"
        ]
      },
      "EmailChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/EmailMarketing",
            "nullable": true,
            "description": "The email marketing subscription."
          }
        }
      },
      "SMSMarketing": {
        "type": "object",
        "properties": {
          "can_receive_sms_marketing": {
            "type": "boolean",
            "description": "Whether or not this profile is subscribed to receive SMS marketing."
          },
          "consent": {
            "type": "string",
            "example": "SUBSCRIBED",
            "description": "The consent status for SMS marketing."
          },
          "consent_timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when consent was recorded or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          },
          "method": {
            "type": "string",
            "example": "TEXT",
            "description": "The method by which the profile was subscribed to SMS marketing."
          },
          "method_detail": {
            "type": "string",
            "nullable": true,
            "example": "JOIN",
            "default": "",
            "description": "Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided."
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the SMS consent record was last modified, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "can_receive_sms_marketing",
          "consent",
          "consent_timestamp",
          "method",
          "last_updated"
        ]
      },
      "SMSChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/SMSMarketing",
            "nullable": true,
            "description": "The SMS marketing subscription."
          }
        }
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/EmailChannel",
            "nullable": true,
            "description": "The email channel subscription."
          },
          "sms": {
            "$ref": "#/components/schemas/SMSChannel",
            "nullable": true,
            "description": "The SMS channel subscription."
          }
        }
      },
      "PredictiveAnalytics": {
        "type": "object",
        "properties": {
          "historic_clv": {
            "type": "number",
            "nullable": true,
            "example": 93.87,
            "description": "Total value of all historically placed orders"
          },
          "predicted_clv": {
            "type": "number",
            "nullable": true,
            "example": 27.24,
            "description": "Predicted value of all placed orders in the next 365 days"
          },
          "total_clv": {
            "type": "number",
            "nullable": true,
            "example": 121.11,
            "description": "Sum of historic and predicted CLV"
          },
          "historic_number_of_orders": {
            "type": "integer",
            "nullable": true,
            "example": 2,
            "description": "Number of already placed orders"
          },
          "predicted_number_of_orders": {
            "type": "number",
            "nullable": true,
            "example": 0.54,
            "description": "Predicted number of placed orders in the next 365 days"
          },
          "average_days_between_orders": {
            "type": "number",
            "nullable": true,
            "example": 189,
            "description": "Average number of days between orders (None if only one order has been placed)"
          },
          "average_order_value": {
            "type": "number",
            "nullable": true,
            "example": 46.94,
            "description": "Average value of placed orders"
          },
          "churn_probability": {
            "type": "number",
            "nullable": true,
            "example": 0.89,
            "description": "Probability the customer has churned"
          },
          "expected_date_of_next_order": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2022-11-08T00:00:00+00:00",
            "description": "Expected date of next order, as calculated at the time of their most recent order"
          }
        }
      },
      "ProfileResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "locale": {
                "type": "string",
                "nullable": true,
                "example": "en-US",
                "description": "The locale of the profile, in the IETF BCP 47 language tag format (language-extlang-script-region-variant-extension-privateuse)"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ListListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "opt_in_process": {
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ],
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ListRetrieveResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "opt_in_process": {
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ],
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "TagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ListMemberResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "locale": {
                "type": "string",
                "nullable": true,
                "example": "en-US",
                "description": "The locale of the profile, in the IETF BCP 47 language tag format (language-extlang-script-region-variant-extension-privateuse)"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "joined_group_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when this profile most recently joined the list."
              }
            },
            "required": [
              "joined_group_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "SegmentListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "is_active": {
                "type": "boolean"
              },
              "is_processing": {
                "type": "boolean"
              },
              "is_starred": {
                "type": "boolean"
              }
            },
            "required": [
              "is_active",
              "is_processing",
              "is_starred"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetSegmentListResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        }
      },
      "SegmentRetrieveResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/SegmentRetrieveResponseObjectResourceAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetSegmentRetrieveResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "$ref": "#/components/schemas/SegmentRetrieveResponseObjectResourceExtended"
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentMemberResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "locale": {
                "type": "string",
                "nullable": true,
                "example": "en-US",
                "description": "The locale of the profile, in the IETF BCP 47 language tag format (language-extlang-script-region-variant-extension-privateuse)"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "joined_group_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when this profile most recently joined the segment."
              }
            },
            "required": [
              "joined_group_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "SubscriptionsEmailMarketingListExclusions": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2022-11-08T00:00:00+00:00"
          },
          "list_id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubscriptionsEmailMarketingExclusion": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2022-11-08T00:00:00+00:00"
          }
        }
      },
      "SubscriptionsEmailMarketing": {
        "type": "object",
        "properties": {
          "list_suppressions": {
            "$ref": "#/components/schemas/SubscriptionsEmailMarketingListExclusions"
          },
          "suppression": {
            "$ref": "#/components/schemas/SubscriptionsEmailMarketingExclusion"
          }
        },
        "required": [
          "list_suppressions",
          "suppression"
        ]
      },
      "SubscriptionsEmail": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/SubscriptionsEmailMarketing"
          }
        },
        "required": [
          "marketing"
        ]
      },
      "ListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "opt_in_process": {
                "type": "string",
                "enum": [
                  "double_opt_in",
                  "single_opt_in"
                ],
                "description": "The opt-in process for this list.  Could be either 'single_opt_in' or 'double_opt_in'.",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "SegmentResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "is_active": {
                "type": "boolean"
              },
              "is_processing": {
                "type": "boolean"
              },
              "is_starred": {
                "type": "boolean"
              }
            },
            "required": [
              "is_active",
              "is_processing",
              "is_starred"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetSegmentResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "ConversationResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ConversationEnum"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetConversationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConversationResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetProfileConversationRelationshipsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ConversationEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileImportJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "started_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job started processing in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ImportErrorResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImportErrorEnum"
          },
          "id": {
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94",
            "description": "Unique identifier for the error."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "invalid",
                "description": "A code for classifying the error type."
              },
              "title": {
                "type": "string",
                "example": "Invalid input",
                "description": "A high-level message about the error."
              },
              "detail": {
                "type": "string",
                "example": "The payload provided in the request is invalid.",
                "description": "Specific details about the error."
              },
              "source": {
                "$ref": "#/components/schemas/ErrorSource",
                "description": "Additional information on the source of the error."
              },
              "original_payload": {
                "type": "object",
                "nullable": true
              }
            },
            "required": [
              "code",
              "title",
              "detail",
              "source"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "FlowResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "archived": {
                "type": "boolean",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00"
              },
              "trigger_type": {
                "type": "string",
                "enum": [
                  "Added to List",
                  "Date Based",
                  "Low Inventory",
                  "Metric",
                  "Price Drop",
                  "Unconfigured"
                ],
                "description": "Corresponds to the object which triggered the flow.",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "FlowActionResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "string",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00"
              },
              "settings": {
                "type": "object",
                "nullable": true
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ],
                "nullable": true
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions",
                "nullable": true
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions",
                "nullable": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_label": {
            "type": "string"
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true
          },
          "cc_email": {
            "type": "string",
            "nullable": true
          },
          "bcc_email": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_label"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media_url": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "body"
        ]
      },
      "FlowMessageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowMessageEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00"
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "TemplateResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor"
              },
              "html": {
                "type": "string",
                "description": "The rendered HTML of the template"
              },
              "text": {
                "type": "string",
                "nullable": true,
                "description": "The template plain_text"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            },
            "required": [
              "name",
              "editor_type",
              "html"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "example": [
              "Y6nRLr"
            ],
            "description": "A list of included audiences"
          },
          "excluded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "example": [
              "UTd5ui"
            ],
            "description": "An optional list of excluded audiences"
          }
        }
      },
      "EmailSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "nullable": true,
            "description": "Use smart sending. Defaults to True"
          }
        }
      },
      "SMSSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "nullable": true,
            "description": "Use smart sending. Defaults to True"
          }
        }
      },
      "UTMParamsSubObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "utm_medium",
            "description": "Name of the UTM param"
          },
          "value": {
            "type": "string",
            "example": "campaign",
            "description": "Value of the UTM param. Can be templated data."
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_add_utm": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "nullable": true,
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          },
          "is_tracking_clicks": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults."
          },
          "is_tracking_opens": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults."
          }
        }
      },
      "SMSTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_add_utm": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "nullable": true,
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00",
            "description": "The time to send at"
          },
          "is_local": {
            "type": "boolean",
            "nullable": true,
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False."
          },
          "send_past_recipients_immediately": {
            "type": "boolean",
            "nullable": true,
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False."
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The time to send at"
          },
          "throttle_percentage": {
            "type": "integer",
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "STOScheduleOptions": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The day to send on"
          }
        },
        "required": [
          "date"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "example": "static",
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']"
          },
          "options_static": {
            "$ref": "#/components/schemas/StaticScheduleOptions",
            "nullable": true,
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method."
          },
          "options_throttled": {
            "$ref": "#/components/schemas/ThrottledScheduleOptions",
            "nullable": true,
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method."
          },
          "options_sto": {
            "$ref": "#/components/schemas/STOScheduleOptions",
            "nullable": true,
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method."
          }
        },
        "required": [
          "method"
        ]
      },
      "CampaignResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "type": "string",
            "description": "The campaign ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The campaign name"
              },
              "status": {
                "type": "string",
                "description": "The current status of the campaign"
              },
              "archived": {
                "type": "boolean",
                "description": "Whether the campaign has been archived or not"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ],
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ],
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when the campaign was created"
              },
              "scheduled_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when the campaign was scheduled for future sending"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when the campaign was last updated by a user or the system"
              },
              "send_time": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
              }
            },
            "required": [
              "name",
              "status",
              "archived",
              "audiences",
              "send_options",
              "tracking_options",
              "send_strategy",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "EmailContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true,
            "example": "Buy our product!",
            "description": "The subject of the message"
          },
          "preview_text": {
            "type": "string",
            "nullable": true,
            "example": "My preview text",
            "description": "Preview text associated with the message"
          },
          "from_email": {
            "type": "string",
            "nullable": true,
            "example": "store@my-company.com",
            "description": "The email the message should be sent from"
          },
          "from_label": {
            "type": "string",
            "nullable": true,
            "example": "My Company",
            "description": "The label associated with the from_email"
          },
          "reply_to_email": {
            "type": "string",
            "nullable": true,
            "example": "reply-to@my-company.com",
            "description": "Optional Reply-To email address"
          },
          "cc_email": {
            "type": "string",
            "nullable": true,
            "example": "cc@my-company.com",
            "description": "Optional CC email address"
          },
          "bcc_email": {
            "type": "string",
            "nullable": true,
            "example": "bcc@my-company.com",
            "description": "Optional BCC email address"
          }
        }
      },
      "SMSContentSubObject": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true,
            "example": "My preview sms",
            "description": "The message body"
          },
          "media_url": {
            "type": "string",
            "nullable": true,
            "description": "URL for included media"
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00",
            "description": "The datetime that the message is to be sent"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether that datetime is to be a local datetime for the recipient"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "RenderOptionsSubObject": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean",
            "nullable": true,
            "example": true,
            "default": true
          },
          "add_org_prefix": {
            "type": "boolean",
            "nullable": true,
            "example": true,
            "default": true
          },
          "add_info_link": {
            "type": "boolean",
            "nullable": true,
            "example": true,
            "default": true
          },
          "add_opt_out_language": {
            "type": "boolean",
            "nullable": true,
            "default": false
          }
        }
      },
      "CampaignMessageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "type": "string",
            "description": "The message ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label or name on the message"
              },
              "channel": {
                "type": "string",
                "description": "The channel the message is to be sent on"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObject"
                  }
                ],
                "description": "Additional attributes relating to the content of the message"
              },
              "send_times": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SendTimeSubObject"
                },
                "nullable": true,
                "description": "The list of appropriate Send Time Sub-objects associated with the message"
              },
              "render_options": {
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "nullable": true,
                "description": "Additional options for rendering the message"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when the message was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when the message was last updated"
              }
            },
            "required": [
              "label",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CampaignSendJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the campaign to send"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "The status of the send job"
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogVariantDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogCategoryDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "nullable": true,
                "example": 9,
                "default": 0,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "nullable": true,
                "example": 1,
                "default": 0,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "nullable": true,
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "TagGroupResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean",
                "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
              },
              "default": {
                "type": "boolean",
                "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
              }
            },
            "required": [
              "name",
              "exclusive",
              "default"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "WebhookResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookEnum"
          },
          "id": {
            "type": "string",
            "example": "01HF7AYTK76RHR4F17G6DGTRGF",
            "description": "The ID of the webhook."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Webhook",
                "description": "A name for the webhook."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "A webhook for sms events",
                "description": "A description for the webhook."
              },
              "endpoint_url": {
                "type": "string",
                "example": "https://www.example.com",
                "description": "The url to send webhook requests to, truncated for security."
              },
              "enabled": {
                "type": "boolean",
                "description": "Is the webhook enabled."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T01:23:45+00:00",
                "description": "Date and time when the webhook was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T01:23:45+00:00",
                "description": "Date and time when the webhook was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            },
            "required": [
              "name",
              "endpoint_url",
              "enabled",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetWebhookResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WebhookResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "webhook-topics": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetWebhookResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WebhookResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "webhook-topics": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookTopicResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookTopicEnum"
          },
          "id": {
            "type": "string",
            "example": "event:klaviyo.sent_sms",
            "description": "The ID of the webhook topic."
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetWebhookTopicResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookTopicResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetWebhookTopicResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebhookTopicResponseObjectResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "StreetAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "125 Summer Street"
          },
          "address2": {
            "type": "string",
            "example": "5th Floor"
          },
          "city": {
            "type": "string",
            "example": "Boston"
          },
          "region": {
            "type": "string",
            "example": "MA",
            "description": "State, province, or region."
          },
          "country": {
            "type": "string",
            "example": "US",
            "description": "Two-letter [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)"
          },
          "zip": {
            "type": "string",
            "example": "04323"
          }
        },
        "required": [
          "address1",
          "address2",
          "city",
          "region",
          "country",
          "zip"
        ]
      },
      "ContactInformation": {
        "type": "object",
        "properties": {
          "default_sender_name": {
            "type": "string",
            "example": "Klaviyo Demo",
            "description": "This field is used to auto-populate the default sender name on flow and campaign emails."
          },
          "default_sender_email": {
            "type": "string",
            "example": "contact@klaviyo-demo.com",
            "description": "This field is used to auto-populate the default sender email address on flow and campaign emails."
          },
          "website_url": {
            "type": "string",
            "example": "https://www.klaviyo.com"
          },
          "organization_name": {
            "type": "string",
            "example": "Klaviyo Demo"
          },
          "street_address": {
            "$ref": "#/components/schemas/StreetAddress",
            "description": "Street address for your organization."
          }
        },
        "required": [
          "default_sender_name",
          "default_sender_email",
          "website_url",
          "organization_name",
          "street_address"
        ]
      },
      "AccountResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AccountEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "test_account": {
                "type": "boolean",
                "description": "Indicates if the account is a test account. Test accounts are not a separate testing engineering environment. Test accounts use the same production environment as normal Klaviyo accounts. This feature is primarily UI based to reduce human errors"
              },
              "contact_information": {
                "$ref": "#/components/schemas/ContactInformation",
                "description": "Contact information for the account. This is used in email footers by default to comply with the CAN-SPAM act."
              },
              "industry": {
                "type": "string",
                "example": "Software / SaaS",
                "description": "The kind of business and/or types of goods that the business sells. This is leveraged in Klaviyo analytics and guidance."
              },
              "timezone": {
                "type": "string",
                "example": "US/Eastern",
                "description": "The account's timezone is used when displaying dates and times. This is an IANA timezone. See [the full list here ](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)."
              },
              "preferred_currency": {
                "type": "string",
                "example": "USD",
                "description": "The preferred currency for the account. This is the currency used for currency-based metrics in dashboards, analytics, coupons, and templates."
              },
              "public_api_key": {
                "type": "string",
                "example": "AbC123",
                "description": "The Public API Key can be used for client-side API calls. [More info here](https://developers.klaviyo.com/en/docs/retrieve_api_credentials)."
              },
              "locale": {
                "type": "string",
                "example": "en-US",
                "description": "The account's locale is used to determine the region and language for the account."
              }
            },
            "required": [
              "test_account",
              "contact_information",
              "industry",
              "timezone",
              "preferred_currency",
              "public_api_key",
              "locale"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "ImageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "type": "string",
            "example": "7",
            "description": "The ID of the image"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "hidden": {
                "type": "boolean"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00"
              }
            },
            "required": [
              "name",
              "image_url",
              "format",
              "size",
              "hidden",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "BlockEnum": {
        "type": "string",
        "enum": [
          "block"
        ]
      },
      "ButtonEnum": {
        "type": "string",
        "enum": [
          "button"
        ]
      },
      "ButtonBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ButtonEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "Drop_shadowEnum": {
        "type": "string",
        "enum": [
          "drop_shadow"
        ]
      },
      "DropShadowBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/Drop_shadowEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "HeaderEnum": {
        "type": "string",
        "enum": [
          "header"
        ]
      },
      "HeaderBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/HeaderEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "Horizontal_ruleEnum": {
        "type": "string",
        "enum": [
          "horizontal_rule"
        ]
      },
      "HorizontalRuleBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/Horizontal_ruleEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "HtmlEnum": {
        "type": "string",
        "enum": [
          "html"
        ]
      },
      "HTMLBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/HtmlEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "ImageEnum": {
        "type": "string",
        "enum": [
          "image"
        ]
      },
      "ImageBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "ProductEnum": {
        "type": "string",
        "enum": [
          "product"
        ]
      },
      "ProductBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ProductEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "ReviewEnum": {
        "type": "string",
        "enum": [
          "review"
        ]
      },
      "ReviewBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/ReviewEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SocialEnum": {
        "type": "string",
        "enum": [
          "social"
        ]
      },
      "SocialBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SocialEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SpacerEnum": {
        "type": "string",
        "enum": [
          "spacer"
        ]
      },
      "SpacerBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SpacerEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SplitEnum": {
        "type": "string",
        "enum": [
          "split"
        ]
      },
      "SplitBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SplitEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "TableEnum": {
        "type": "string",
        "enum": [
          "table"
        ]
      },
      "TableBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/TableEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "TextEnum": {
        "type": "string",
        "enum": [
          "text"
        ]
      },
      "TextBlockStyles": {
        "type": "object",
        "properties": {
          "block_background_color": {
            "type": "string",
            "nullable": true
          },
          "block_border_color": {
            "type": "string",
            "nullable": true
          },
          "block_border_style": {
            "type": "string",
            "enum": [
              "dashed",
              "dotted",
              "groove",
              "inset",
              "none",
              "outset",
              "ridge",
              "solid"
            ],
            "description": "Border style.",
            "nullable": true
          },
          "block_border_width": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_bottom": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_left": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_right": {
            "type": "integer",
            "nullable": true
          },
          "block_padding_top": {
            "type": "integer",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "condition_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "extra_css_class": {
            "type": "string",
            "nullable": true
          },
          "font_family": {
            "type": "string",
            "nullable": true
          },
          "font_size": {
            "type": "integer",
            "nullable": true
          },
          "font_style": {
            "type": "string",
            "enum": [
              "italic",
              "normal"
            ],
            "description": "Font style.",
            "nullable": true
          },
          "font_weight": {
            "type": "string",
            "nullable": true
          },
          "inner_padding_bottom": {
            "type": "integer",
            "nullable": true
          },
          "inner_padding_left": {
            "type": "integer",
            "nullable": true
          },
          "inner_padding_right": {
            "type": "integer",
            "nullable": true
          },
          "inner_padding_top": {
            "type": "integer",
            "nullable": true
          },
          "mobile_stretch_content": {
            "type": "boolean",
            "nullable": true
          },
          "repeat_item": {
            "type": "string",
            "nullable": true
          },
          "repeat_items": {
            "type": "string",
            "nullable": true
          },
          "repeat_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "show_on": {
            "type": "string",
            "enum": [
              "both",
              "desktop",
              "mobile"
            ],
            "description": "Show on.",
            "nullable": true
          },
          "background_color": {
            "type": "string",
            "nullable": true
          },
          "letter_spacing": {
            "type": "integer",
            "nullable": true
          },
          "line_height": {
            "type": "number",
            "nullable": true
          },
          "text_align": {
            "type": "string",
            "enum": [
              "center",
              "left",
              "right"
            ],
            "description": "Text Alignment.",
            "nullable": true
          },
          "text_decoration": {
            "type": "string",
            "nullable": true
          },
          "text_table_layout": {
            "type": "string",
            "enum": [
              "auto",
              "fixed",
              "inherit",
              "initial"
            ],
            "description": "Text table layout.",
            "nullable": true
          }
        }
      },
      "TextBlockData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "styles": {
            "$ref": "#/components/schemas/TextBlockStyles"
          }
        },
        "required": [
          "content",
          "styles"
        ]
      },
      "TextBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/TextEnum"
          },
          "data": {
            "$ref": "#/components/schemas/TextBlockData"
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "UnsupportedEnum": {
        "type": "string",
        "enum": [
          "unsupported"
        ]
      },
      "UnsupportedBlock": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/BlockEnum"
          },
          "type": {
            "$ref": "#/components/schemas/UnsupportedEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "SectionEnum": {
        "type": "string",
        "enum": [
          "section"
        ]
      },
      "Section": {
        "type": "object",
        "properties": {
          "content_type": {
            "$ref": "#/components/schemas/SectionEnum"
          },
          "type": {
            "$ref": "#/components/schemas/SectionEnum"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "content_type",
          "type",
          "data"
        ]
      },
      "UniversalContentResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateUniversalContentEnum"
          },
          "id": {
            "type": "string",
            "example": "01HWWWKAW4RHXQJCMW4R2KRYR4",
            "description": "The ID of the universal content"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name for this universal content"
              },
              "definition": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ButtonBlock"
                  },
                  {
                    "$ref": "#/components/schemas/DropShadowBlock"
                  },
                  {
                    "$ref": "#/components/schemas/HeaderBlock"
                  },
                  {
                    "$ref": "#/components/schemas/HorizontalRuleBlock"
                  },
                  {
                    "$ref": "#/components/schemas/HTMLBlock"
                  },
                  {
                    "$ref": "#/components/schemas/ImageBlock"
                  },
                  {
                    "$ref": "#/components/schemas/ProductBlock"
                  },
                  {
                    "$ref": "#/components/schemas/ReviewBlock"
                  },
                  {
                    "$ref": "#/components/schemas/SocialBlock"
                  },
                  {
                    "$ref": "#/components/schemas/SpacerBlock"
                  },
                  {
                    "$ref": "#/components/schemas/SplitBlock"
                  },
                  {
                    "$ref": "#/components/schemas/TableBlock"
                  },
                  {
                    "$ref": "#/components/schemas/TextBlock"
                  },
                  {
                    "$ref": "#/components/schemas/UnsupportedBlock"
                  },
                  {
                    "$ref": "#/components/schemas/Section"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when this universal content was created"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00+00:00",
                "description": "The datetime when this universal content was updated"
              },
              "screenshot_status": {
                "type": "string",
                "enum": [
                  "completed",
                  "failed",
                  "generating",
                  "never_generated",
                  "not_renderable"
                ],
                "description": "The status of a universal content screenshot."
              },
              "screenshot_url": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "definition",
              "created",
              "updated",
              "screenshot_status",
              "screenshot_url"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "FormResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FormEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "ID of the form. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Cyber Monday Deals",
                "description": "Name of the form."
              },
              "status": {
                "type": "string",
                "enum": [
                  "draft",
                  "live"
                ],
                "description": "Status of the form. A live form with an in-progress draft is considered \"live\"."
              },
              "ab_test": {
                "type": "boolean",
                "description": "Whether the form has an A/B test configured, regardless of its status."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z",
                "description": "ISO8601 timestamp when the form was created."
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z",
                "description": "ISO8601 timestamp when the form was last updated."
              }
            },
            "required": [
              "name",
              "status",
              "ab_test",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetFormResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FormResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "form-versions": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormVersionResponseObjectResource"
            }
          }
        }
      },
      "GetFormResponseCompoundDocument": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FormResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "form-versions": {
                        "type": "object",
                        "properties": {
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormVersionResponseObjectResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "10OFF",
                "description": "This is the id that is stored in an integration such as Shopify or Magento."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "10% off for purchases over $50",
                "description": "A description of the coupon."
              }
            },
            "required": [
              "external_id"
            ]
          }
        }
      },
      "CouponCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99",
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2023-01-01T00:00:00Z",
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year."
              }
            },
            "required": [
              "unique_code"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "coupon": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CouponEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "10OFF"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CouponCodeCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1",
                "description": "The ID of the catalog item in an external system."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "nullable": true,
                "example": "$custom",
                "default": "$custom"
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "price": {
                "type": "number",
                "nullable": true,
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "catalog_type": {
                "type": "string",
                "nullable": true,
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "nullable": true,
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "nullable": true,
                "example": true,
                "default": true,
                "description": "Boolean value indicating whether the catalog item is published."
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
                          "description": "A list of catalog category IDs representing the categories the item is in"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The ID of the catalog item variant in an external system."
              },
              "catalog_type": {
                "type": "string",
                "nullable": true,
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "nullable": true,
                "example": "$custom",
                "default": "$custom"
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "nullable": true,
                "example": 2,
                "default": 0
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "nullable": true,
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "nullable": true,
                "example": true,
                "default": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "item": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogItemEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
                        "description": "The original catalog item ID for which this is a variant."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The ID of the catalog category in an external system."
              },
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "nullable": true,
                "example": "$custom",
                "default": "$custom"
              },
              "catalog_type": {
                "type": "string",
                "nullable": true,
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
                          "description": "A list of catalog item IDs that are in the given category."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "coupon-codes": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of coupon codes to create."
              }
            },
            "required": [
              "coupon-codes"
            ]
          }
        }
      },
      "CouponCodeCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileIdentifierDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ServerBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ],
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s)."
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "nullable": true,
                "example": {
                  "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "email": "sarah.mason@klaviyo-demo.com",
                  "phone_number": "+15005550006",
                  "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                }
              }
            },
            "required": [
              "channels"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                        "description": "The catalog variant ID for which the profile is subscribing to back in stock notifications. This ID is made up of the integration type, catalog ID, and and the external ID of the variant like so: `integrationType:::catalogId:::externalId`. If the integration you are using is not set up for multi-catalog storage, the 'catalogId' will be `$default`. For Shopify `$shopify:::$default:::33001893429341`"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ServerBISSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServerBISSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "_MetricCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "attributes": {
            "properties": {
              "name": {
                "type": "string",
                "example": "Viewed Product",
                "description": "Name of the event. Must be less than 128 characters."
              },
              "service": {
                "type": "string",
                "nullable": true,
                "description": "This is for advanced usage. For api requests, this should use the default, which is set to api."
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileMetaPatchProperties": {
        "type": "object",
        "properties": {
          "append": {
            "type": "object",
            "nullable": true,
            "example": {
              "skus": "92538"
            },
            "description": "Append a simple value or values to this property array"
          },
          "unappend": {
            "type": "object",
            "nullable": true,
            "example": {
              "skus": "40571"
            },
            "description": "Remove a simple value or values from this property array"
          },
          "unset": {
            "nullable": true,
            "example": "skus",
            "description": "Remove a key or keys (and their values) completely from properties",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "$ref": "#/components/schemas/ProfileMetaPatchProperties",
            "nullable": true,
            "example": {
              "append": {
                "skus": [
                  "92538",
                  "40571"
                ]
              }
            },
            "description": "Specify one or more patch operations to apply to existing property data"
          }
        }
      },
      "EventProfileCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              },
              "_kx": {
                "type": "string",
                "nullable": true,
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "meta": {
                "$ref": "#/components/schemas/OnsiteProfileMeta",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventCreateQueryV2ResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be referenced later. For example, HTML templates are\nuseful on a segment but are not used to create a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels."
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future."
              },
              "value": {
                "type": "number",
                "nullable": true,
                "example": 9.99,
                "description": "A numeric, monetary value to associate with this event. For example, the dollar amount of a purchase."
              },
              "value_currency": {
                "type": "string",
                "nullable": true,
                "example": "USD",
                "description": "The ISO 4217 currency code of the value associated with the event."
              },
              "unique_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second."
              },
              "metric": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/_MetricCreateQueryResourceObject"
                  }
                }
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/EventProfileCreateQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "properties",
              "metric",
              "profile"
            ]
          }
        }
      },
      "EventCreateQueryV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryV2ResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "OnsiteProfileCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              },
              "_kx": {
                "type": "string",
                "nullable": true,
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/OnsiteProfileMeta",
            "nullable": true
          }
        }
      },
      "_BaseEventCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "properties": {
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be referenced later. For example, HTML templates are\nuseful on a segment but are not used to create a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels."
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2022-11-08T00:00:00+00:00",
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future."
              },
              "value": {
                "type": "number",
                "nullable": true,
                "example": 9.99,
                "description": "A numeric, monetary value to associate with this event. For example, the dollar amount of a purchase."
              },
              "value_currency": {
                "type": "string",
                "nullable": true,
                "example": "USD",
                "description": "The ISO 4217 currency code of the value associated with the event."
              },
              "unique_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second."
              },
              "metric": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/_MetricCreateQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "properties",
              "metric"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventsBulkCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventBulkCreateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
                  }
                }
              },
              "events": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/_BaseEventCreateQueryResourceObject"
                    }
                  }
                }
              }
            },
            "required": [
              "profile",
              "events"
            ]
          }
        }
      },
      "EventsBulkCreateJobResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "events-bulk-create": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EventsBulkCreateQueryResourceObject"
                    }
                  }
                }
              }
            },
            "required": [
              "events-bulk-create"
            ]
          }
        }
      },
      "EventsBulkCreateJob": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventsBulkCreateJobResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricAggregateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricAggregateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "type": "string",
                "example": "0rG4eQ",
                "description": "The metric ID used in the aggregation."
              },
              "page_cursor": {
                "type": "string",
                "description": "Optional pagination cursor to iterate over large result sets"
              },
              "measurements": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": "count",
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`"
              },
              "interval": {
                "type": "string",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ],
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "nullable": true,
                "example": "day",
                "default": "day"
              },
              "page_size": {
                "type": "integer",
                "nullable": true,
                "example": 500,
                "default": 500,
                "description": "Alter the maximum number of returned rows in a single page of aggregation results"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "nullable": true,
                "example": "$message",
                "description": "Optional attribute(s) used for partitioning by the aggregation function"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "description": "Provide fields to limit the returned data"
              },
              "filter": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ],
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field."
              },
              "timezone": {
                "type": "string",
                "nullable": true,
                "example": "America/New_York",
                "default": "UTC",
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive."
              },
              "sort": {
                "type": "string",
                "enum": [
                  "$attributed_channel",
                  "-$attributed_channel",
                  "$attributed_flow",
                  "-$attributed_flow",
                  "$attributed_message",
                  "-$attributed_message",
                  "$attributed_variation",
                  "-$attributed_variation",
                  "$campaign_channel",
                  "-$campaign_channel",
                  "$flow",
                  "-$flow",
                  "$flow_channel",
                  "-$flow_channel",
                  "$message",
                  "-$message",
                  "$message_send_cohort",
                  "-$message_send_cohort",
                  "$variation",
                  "-$variation",
                  "$variation_send_cohort",
                  "-$variation_send_cohort",
                  "Bounce Type",
                  "-Bounce Type",
                  "Campaign Name",
                  "-Campaign Name",
                  "Client Canonical",
                  "-Client Canonical",
                  "Client Name",
                  "-Client Name",
                  "Client Type",
                  "-Client Type",
                  "Email Domain",
                  "-Email Domain",
                  "Failure Source",
                  "-Failure Source",
                  "Failure Type",
                  "-Failure Type",
                  "From Number",
                  "-From Number",
                  "From Phone Region",
                  "-From Phone Region",
                  "List",
                  "-List",
                  "Message Name",
                  "-Message Name",
                  "Message Type",
                  "-Message Type",
                  "Method",
                  "-Method",
                  "Subject",
                  "-Subject",
                  "To Number",
                  "-To Number",
                  "To Phone Region",
                  "-To Phone Region",
                  "URL",
                  "-URL",
                  "count",
                  "-count",
                  "form_id",
                  "-form_id",
                  "sum_value",
                  "-sum_value",
                  "unique",
                  "-unique"
                ],
                "description": "Provide a sort key (e.g. -$message)"
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "filter"
            ]
          }
        }
      },
      "MetricAggregateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dimensions associated with this set of measurements"
          },
          "measurements": {
            "type": "object",
            "description": "Dictionary of measurement_key, values"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "ListCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "is_starred": {
                "type": "boolean",
                "nullable": true,
                "default": false
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "SegmentCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostSegmentCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "example": "Repeat Purchasers",
                    "description": "A helpful name to label the segment"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2022-11-08T00:00:00+00:00",
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2022-11-08T00:00:00+00:00",
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_processing": {
                    "type": "boolean"
                  },
                  "is_starred": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          }
        }
      },
      "ProfileCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "$ref": "#/components/schemas/ProfileMetaPatchProperties",
            "nullable": true,
            "example": {
              "append": {
                "skus": [
                  "92538",
                  "40571"
                ]
              }
            },
            "description": "Specify one or more patch operations to apply to existing property data"
          }
        }
      },
      "ProfileUpsertQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true,
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Id that can be used to identify a profile when other identifiers are not available"
              },
              "_kx": {
                "type": "string",
                "nullable": true,
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta",
            "nullable": true
          }
        }
      },
      "ProfileImportJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileBulkImportJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                    }
                  }
                },
                "description": "Array of profiles to create or update"
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lists": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/ListEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "VRgFBd",
                          "description": "Optional list to add the profiles to"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ProfileImportJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileImportJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileUpsertQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileMergeQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileMergeEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "The ID of the destination profile to merge into"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/ProfileEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "01GDDKASAP8TKDDA2GRZDSVP4I",
                          "description": "The ID of a source profile to merge into the destination profile"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ProfileMergeQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileMergeQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "SMSContentSubObjectCreate": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true,
            "example": "My preview sms",
            "description": "The message body"
          }
        }
      },
      "CampaignMessageCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "attributes": {
            "properties": {
              "channel": {
                "type": "string",
                "example": "email",
                "description": "The channel the message is to be sent on (email or sms, for example)"
              },
              "label": {
                "type": "string",
                "nullable": true,
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ],
                "nullable": true,
                "description": "Additional attributes relating to the content of the message"
              },
              "render_options": {
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "nullable": true,
                "description": "Additional options for rendering the message"
              }
            },
            "required": [
              "channel"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "nullable": true,
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy."
              },
              "send_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ],
                "nullable": true,
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ],
                "nullable": true,
                "description": "The tracking options associated with the campaign"
              },
              "campaign-messages": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampaignMessageCreateQueryResourceObject"
                    }
                  }
                },
                "description": "The message(s) associated with the campaign"
              }
            },
            "required": [
              "name",
              "audiences",
              "campaign-messages"
            ]
          }
        }
      },
      "CampaignCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignCloneQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "type": "string",
            "description": "The campaign ID to be cloned"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "new_name": {
                "type": "string",
                "nullable": true,
                "example": "My cloned campaign's new name",
                "description": "The name for the new cloned campaign"
              }
            }
          }
        }
      },
      "CampaignCloneQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessageAssignTemplateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "type": "string",
            "description": "The message ID to be assigned to"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "template": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TemplateEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "RipRmi",
                        "description": "The template ID to assign"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the campaign to send"
          }
        }
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "Restricted to CODE"
              },
              "html": {
                "type": "string",
                "nullable": true,
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        ",
                "description": "The HTML contents of the template"
              },
              "text": {
                "type": "string",
                "nullable": true,
                "example": "hello world",
                "description": "The plaintext version of the template"
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        }
      },
      "TemplateCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateRenderQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "context": {
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                },
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/4408802648731) for more details."
              }
            },
            "required": [
              "context"
            ]
          }
        }
      },
      "TemplateRenderQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateCloneQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of template to be cloned"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Clone of Monthly Newsletter Template",
                "description": "The name of the template"
              }
            }
          }
        }
      },
      "TemplateCloneQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog items to create."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog items to update."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemDeleteQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogItemDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog items to delete."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog variants to create."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "nullable": true,
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "nullable": true,
                "example": 2
              },
              "inventory_quantity": {
                "type": "number",
                "nullable": true,
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "nullable": true,
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "nullable": true,
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "nullable": true,
                "example": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              }
            }
          }
        }
      },
      "CatalogVariantUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog variants to update."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantDeleteQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogVariantDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog variants to delete."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog categories to create."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog categories to update."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryDeleteQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog categories to delete."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "tag-group": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TagGroupEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                        "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TagCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean",
                "nullable": true,
                "default": false
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Webhook",
                "description": "A name for the webhook."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "A webhook for sms events",
                "description": "A description for the webhook."
              },
              "endpoint_url": {
                "type": "string",
                "example": "https://www.example.com/example/path",
                "description": "A url to send webhook calls to. Must be https."
              },
              "secret_key": {
                "type": "string",
                "example": "INSERT_SECRET_KEY",
                "description": "A secret key, that will be used for webhook request signing."
              }
            },
            "required": [
              "name",
              "endpoint_url",
              "secret_key"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "webhook-topics": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/WebhookTopicEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "event:klaviyo.sent_sms",
                          "description": "A list of topics to subscribe to."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "WebhookCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebhookCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PostWebhookResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/WebhookEnum"
              },
              "id": {
                "type": "string",
                "example": "01HF7AYTK76RHR4F17G6DGTRGF",
                "description": "The ID of the webhook."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Webhook",
                    "description": "A name for the webhook."
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "example": "A webhook for sms events",
                    "description": "A description for the webhook."
                  },
                  "endpoint_url": {
                    "type": "string",
                    "example": "https://www.example.com",
                    "description": "The url to send webhook requests to, truncated for security."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is the webhook enabled."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00",
                    "description": "Date and time when the webhook was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00",
                    "description": "Date and time when the webhook was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "name",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "webhook-topics": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/WebhookTopicEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "event:klaviyo.sent_sms",
                              "description": "A topic the webhook is subscribed to."
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email of the profile to suppress."
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionCreateQueryResourceObject"
                    }
                  }
                },
                "nullable": true,
                "description": "The profile(s) to create suppressions for."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "Suppress all profiles in this list"
                      }
                    }
                  }
                }
              },
              "segment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/SegmentEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "Suppress all profiles in this segment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "Suppression": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "matt-kemp@klaviyo-demo.com",
            "description": "The email of the profile to suppress / unsuppress."
          }
        },
        "required": [
          "email"
        ]
      },
      "UnsuppressionCreateJobCreateQueryDeprecatedResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileUnsuppressionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be removed."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "UnsuppressionCreateJobCreateQueryDeprecated": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryDeprecatedResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSuppressionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email of the profile to unsuppress."
              }
            },
            "required": [
              "email"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionDeleteQueryResourceObject"
                    }
                  }
                },
                "nullable": true,
                "description": "The profile(s) to remove suppressions for."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "The list to pull the profiles to remove suppressions from"
                      }
                    }
                  }
                }
              },
              "segment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/SegmentEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "The segment to pull the profiles to remove suppressions from"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SuppressionDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "MarketingSubscriptionParameters": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "string",
            "enum": [
              "SUBSCRIBED"
            ],
            "description": "The Consent status to subscribe to for the \"Marketing\" type. Currently supports \"SUBSCRIBED\".",
            "example": "SUBSCRIBED"
          },
          "consented_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "The timestamp of when the profile's consent was gathered. This should only be used when syncing over historical consent info to Klaviyo; if not included, the current time will be used. This field is only supported for single opt-in and will be ignored for double opt-in."
          }
        },
        "required": [
          "consent"
        ]
      },
      "EmailSubscriptionParameters": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/MarketingSubscriptionParameters",
            "description": "The parameters to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\"."
          }
        },
        "required": [
          "marketing"
        ]
      },
      "SMSSubscriptionParameters": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/MarketingSubscriptionParameters",
            "description": "The parameters to subscribe to on the \"SMS\" Channel. Currently supports \"MARKETING\"."
          }
        },
        "required": [
          "marketing"
        ]
      },
      "SubscriptionChannels": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/EmailSubscriptionParameters",
            "nullable": true,
            "description": "The subscription parameters to subscribe to on the \"EMAIL\" Channel."
          },
          "sms": {
            "$ref": "#/components/schemas/SMSSubscriptionParameters",
            "nullable": true,
            "description": "The subscription parameters to subscribe to on the \"SMS\" Channel."
          }
        }
      },
      "ProfileSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted."
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format."
              },
              "subscriptions": {
                "$ref": "#/components/schemas/SubscriptionChannels",
                "nullable": true,
                "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers."
              },
              "age_gated_date_of_birth": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "description": "The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "type": "string",
                "nullable": true,
                "example": "Marketing Event",
                "description": "A custom method detail or source to store on the consent records."
              },
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionCreateQueryResourceObject"
                    }
                  }
                },
                "description": "The profile(s) to subscribe"
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "The list to add the newly subscribed profiles to"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "UnsubscriptionCreateJobCreateQueryDeprecatedResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileUnsubscriptionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "nullable": true,
                "example": "Y6nRLr",
                "description": "Optional, the list to remove the profiles from"
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": "[\"matt-kemp@klaviyo-demo.com\", \"sarah.mason@klaviyo-demo.com\"",
                "description": "The emails to unsubscribe if any."
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": "[\"+15005550006\",\"+15005550007\"]",
                "description": "The phone numbers to unsubscribe if any."
              }
            }
          }
        }
      },
      "UnsubscriptionCreateJobCreateQueryDeprecated": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryDeprecatedResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfileSubscriptionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email address to unsubscribe."
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "The phone number to unsubscribe. This must be in E.164 format."
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "The profile(s) to unsubscribe"
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "The list to remove the profiles from"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SubscriptionDeleteJobCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "DataPrivacyProfileQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataPrivacyCreateDeletionJobQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataPrivacyDeletionJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DataPrivacyProfileQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "profile"
            ]
          }
        }
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "_DeviceMetadata": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "nullable": true,
            "example": "1234567890",
            "description": "Relatively stable ID for the device. Will update on app uninstall and reinstall"
          },
          "klaviyo_sdk": {
            "type": "string",
            "enum": [
              "android",
              "swift"
            ],
            "nullable": true,
            "example": "swift",
            "description": "The name of the SDK used to create the push token."
          },
          "sdk_version": {
            "type": "string",
            "nullable": true,
            "example": "1.0.0",
            "description": "The version of the SDK used to create the push token"
          },
          "device_model": {
            "type": "string",
            "nullable": true,
            "example": "iPhone12,1",
            "description": "The model of the device"
          },
          "os_name": {
            "type": "string",
            "enum": [
              "android",
              "ios",
              "ipados",
              "macos",
              "tvos"
            ],
            "nullable": true,
            "example": "ios",
            "description": "The name of the operating system on the device."
          },
          "os_version": {
            "type": "string",
            "nullable": true,
            "example": "14.0",
            "description": "The version of the operating system on the device"
          },
          "manufacturer": {
            "type": "string",
            "nullable": true,
            "example": "Apple",
            "description": "The manufacturer of the device"
          },
          "app_name": {
            "type": "string",
            "nullable": true,
            "example": "Klaviyo",
            "description": "The name of the app that created the push token"
          },
          "app_version": {
            "type": "string",
            "nullable": true,
            "example": "1.0.0",
            "description": "The version of the app that created the push token"
          },
          "app_build": {
            "type": "string",
            "nullable": true,
            "example": 1,
            "description": "The build of the app that created the push token"
          },
          "app_id": {
            "type": "string",
            "nullable": true,
            "example": "com.klaviyo.app",
            "description": "The ID of the app that created the push token"
          },
          "environment": {
            "type": "string",
            "enum": [
              "debug",
              "release"
            ],
            "nullable": true,
            "example": "release",
            "description": "The environment in which the push token was created"
          }
        }
      },
      "PushProfileUpsertQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true,
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Id that can be used to identify a profile when other identifiers are not available"
              },
              "_kx": {
                "type": "string",
                "nullable": true,
                "description": "Also known as the `exchange_id`, this is an encrypted identifier used for identifying a\nprofile by Klaviyo's web tracking.\n\nYou can use this field as a filter when retrieving profiles via the Get Profiles endpoint."
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "meta": {
                "$ref": "#/components/schemas/ProfileMeta",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "1234567890",
                "description": "A push token from APNS or FCM."
              },
              "platform": {
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ],
                "description": "The platform on which the push token was created."
              },
              "enablement_status": {
                "type": "string",
                "enum": [
                  "AUTHORIZED",
                  "DENIED",
                  "NOT_DETERMINED",
                  "PROVISIONAL",
                  "UNAUTHORIZED"
                ],
                "nullable": true,
                "example": "AUTHORIZED",
                "default": "AUTHORIZED",
                "description": "This is the enablement status for the individual push token."
              },
              "vendor": {
                "type": "string",
                "enum": [
                  "apns",
                  "fcm"
                ],
                "description": "The vendor of the push token.",
                "example": "APNs"
              },
              "background": {
                "type": "string",
                "enum": [
                  "AVAILABLE",
                  "DENIED",
                  "RESTRICTED"
                ],
                "nullable": true,
                "example": "AVAILABLE",
                "default": "AVAILABLE",
                "description": "The background state of the push token."
              },
              "device_metadata": {
                "$ref": "#/components/schemas/_DeviceMetadata",
                "nullable": true,
                "description": "Metadata about the device that created the push token"
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PushProfileUpsertQueryResourceObject"
                  }
                },
                "description": "The profile associated with the push token to create/update"
              }
            },
            "required": [
              "token",
              "platform",
              "vendor",
              "profile"
            ]
          }
        }
      },
      "PushTokenCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImageCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "description": "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added."
              },
              "import_from_url": {
                "type": "string",
                "example": "https://www.example.com/example.jpg",
                "description": "An existing image url to import the image from. Alternatively, you may specify a base-64 encoded data-uri (`data:image/...`). Supported image formats: jpeg,png,gif. Maximum image size: 5MB."
              },
              "hidden": {
                "type": "boolean",
                "nullable": true,
                "default": false,
                "description": "If true, this image is not shown in the asset library."
              }
            },
            "required": [
              "import_from_url"
            ]
          }
        }
      },
      "ImageCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "Timeframe": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "enum": [
              "last_12_months",
              "last_30_days",
              "last_365_days",
              "last_3_months",
              "last_7_days",
              "last_90_days",
              "last_month",
              "last_week",
              "last_year",
              "this_month",
              "this_week",
              "this_year",
              "today",
              "yesterday"
            ],
            "description": "Pre-defined key that represents a set timeframe"
          }
        },
        "required": [
          "key"
        ]
      },
      "CustomTimeframe": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00+00:00"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "CampaignValuesRequestDTOResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ],
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]"
              },
              "timeframe": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ],
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year"
              },
              "conversion_metric_id": {
                "type": "string",
                "example": "RESQ6t",
                "description": "ID of the metric to be used for conversion statistics"
              },
              "filter": {
                "type": "string",
                "nullable": true,
                "example": "and(equals(campaign_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))",
                "description": "API filter string used to filter the query.\nAllowed filters are send_channel, campaign_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.\nWhen filtering on send_channel, allowed values are email, push-notification, sms."
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "conversion_metric_id"
            ]
          }
        }
      },
      "CampaignValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ValuesData": {
        "type": "object",
        "properties": {
          "groupings": {
            "type": "object",
            "description": "Applied groupings and the values for this object"
          },
          "statistics": {
            "type": "object",
            "description": "Requested statistics and their values results"
          }
        },
        "required": [
          "groupings",
          "statistics"
        ]
      },
      "FlowValuesRequestDTOResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowValuesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ],
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]"
              },
              "timeframe": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ],
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year"
              },
              "conversion_metric_id": {
                "type": "string",
                "example": "RESQ6t",
                "description": "ID of the metric to be used for conversion statistics"
              },
              "filter": {
                "type": "string",
                "nullable": true,
                "example": "and(equals(flow_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))",
                "description": "API filter string used to filter the query.\nAllowed filters are flow_id, send_channel, flow_message_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.\nWhen filtering on send_channel, allowed values are email, push-notification, sms."
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "conversion_metric_id"
            ]
          }
        }
      },
      "FlowValuesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowValuesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowSeriesRequestDTOResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowSeriesReportEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "statistics": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "average_order_value",
                    "bounce_rate",
                    "bounced",
                    "bounced_or_failed",
                    "bounced_or_failed_rate",
                    "click_rate",
                    "click_to_open_rate",
                    "clicks",
                    "clicks_unique",
                    "conversion_rate",
                    "conversion_uniques",
                    "conversion_value",
                    "conversions",
                    "delivered",
                    "delivery_rate",
                    "failed",
                    "failed_rate",
                    "open_rate",
                    "opens",
                    "opens_unique",
                    "recipients",
                    "revenue_per_recipient",
                    "spam_complaint_rate",
                    "spam_complaints",
                    "unsubscribe_rate",
                    "unsubscribe_uniques",
                    "unsubscribes"
                  ],
                  "description": "Defined reporting metric"
                },
                "example": [
                  "opens",
                  "open_rate"
                ],
                "description": "List of statistics to query for. All rate statistics will be returned in fractional form [0.0, 1.0]"
              },
              "timeframe": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Timeframe"
                  },
                  {
                    "$ref": "#/components/schemas/CustomTimeframe"
                  }
                ],
                "description": "The timeframe to query for data within. The max length a timeframe can be is 1 year"
              },
              "interval": {
                "type": "string",
                "enum": [
                  "daily",
                  "hourly",
                  "monthly",
                  "weekly"
                ],
                "description": "The interval used to aggregate data within the series request.\nIf hourly is used, the timeframe cannot be longer than 7 days.\nIf daily is used, the timeframe cannot be longer than 60 days.\nIf monthly is used, the timeframe cannot be longer than 52 weeks.",
                "example": "weekly"
              },
              "conversion_metric_id": {
                "type": "string",
                "example": "RESQ6t",
                "description": "ID of the metric to be used for conversion statistics"
              },
              "filter": {
                "type": "string",
                "nullable": true,
                "example": "and(equals(flow_id,\"abc123\"),contains-any(send_channel,[\"email\",\"sms\"]))",
                "description": "API filter string used to filter the query.\nAllowed filters are flow_id, send_channel, flow_message_id.\nAllowed operators are equals, contains-any.\nOnly one filter can be used per attribute, only AND can be used as a combination operator.\nMax of 100 messages per ANY filter.\nWhen filtering on send_channel, allowed values are email, push-notification, sms."
              }
            },
            "required": [
              "statistics",
              "timeframe",
              "interval",
              "conversion_metric_id"
            ]
          }
        }
      },
      "FlowSeriesRequestDTO": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowSeriesRequestDTOResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "SeriesData": {
        "type": "object",
        "properties": {
          "groupings": {
            "type": "object",
            "description": "Applied groupings and the values for this object"
          },
          "statistics": {
            "type": "object",
            "description": "Requested statistics and their series result"
          }
        },
        "required": [
          "groupings",
          "statistics"
        ]
      },
      "ConversationMessageCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ConversationMessageEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string"
              }
            },
            "required": [
              "body"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "conversation": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ConversationEnum"
                      },
                      "id": {
                        "type": "string",
                        "description": "Related Conversation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ConversationMessageCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ConversationMessageCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "UniversalContentCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateUniversalContentEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name for this universal content"
              },
              "definition": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "required": [
              "name",
              "definition"
            ]
          }
        }
      },
      "UniversalContentCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UniversalContentCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "OnsiteSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "type": "string",
                "nullable": true,
                "example": "Homepage footer signup form",
                "description": "A custom method detail or source to store on the consent records for this subscription."
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr",
                        "description": "The list ID to add the newly subscribed profile to."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OnsiteSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PushTokenUnregisterQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenUnregisterEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "1234567890",
                "description": "A push token from APNS or FCM."
              },
              "platform": {
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ],
                "description": "The platform on which the push token was created."
              },
              "vendor": {
                "type": "string",
                "enum": [
                  "apns",
                  "fcm"
                ],
                "description": "The vendor of the push token.",
                "nullable": true,
                "example": "apns"
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "description": "The profile associated with the push token to create/update"
              }
            },
            "required": [
              "token",
              "platform",
              "profile"
            ]
          }
        }
      },
      "PushTokenUnregisterQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenUnregisterQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "EventsBulkCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventsBulkCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ClientBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ],
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s)."
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "example": {
                  "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "email": "sarah.mason@klaviyo-demo.com",
                  "phone_number": "+15005550006",
                  "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                }
              }
            },
            "required": [
              "channels",
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                        "description": "The catalog variant ID for which the profile is subscribing to back in stock notifications. This ID is made up of the integration type, catalog ID, and and the external ID of the variant like so: `integrationType:::catalogId:::externalId`. If the integration you are using is not set up for multi-catalog storage, the 'catalogId' will be `$default`. For Shopify `$shopify:::$default:::33001893429341`"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ClientBISSubscriptionCreateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClientBISSubscriptionCreateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "nullable": true,
                "example": "10% off for purchases over $50",
                "description": "A description of the coupon."
              }
            }
          }
        }
      },
      "CouponUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CouponCodeUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "VERSION_NOT_ACTIVE"
                ],
                "description": "The API status of our coupon codes.",
                "nullable": true
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "example": "2023-01-01T00:00:00Z",
                "description": "The datetime when this coupon code will expire. If not specified or set to null, it will be automatically set to 1 year."
              }
            }
          }
        }
      },
      "CouponCodeUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogItemUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "price": {
                "type": "number",
                "nullable": true,
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "A description of the catalog item.",
                "description": "A description of the catalog item."
              },
              "url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "nullable": true,
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "nullable": true,
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "nullable": true,
                "example": true,
                "description": "Boolean value indicating whether the catalog item is published."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
                          "description": "A list of catalog category IDs representing the categories the item is in"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CatalogCategoryUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
                          "description": "A list of catalog item IDs that are in the given category."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "ListPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "SegmentPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "is_starred": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        }
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchSegmentPartialUpdateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "example": "Repeat Purchasers",
                    "description": "A helpful name to label the segment"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2022-11-08T00:00:00+00:00",
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "example": "2022-11-08T00:00:00+00:00",
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_processing": {
                    "type": "boolean"
                  },
                  "is_starred": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "is_active",
                  "is_processing",
                  "is_starred"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProfilePartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true,
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "nullable": true,
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "nullable": true
              },
              "first_name": {
                "type": "string",
                "nullable": true,
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "nullable": true,
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "nullable": true,
                "example": "Example Corporation",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "nullable": true,
                "example": "Regional Manager",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "nullable": true,
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation",
                "nullable": true
              },
              "properties": {
                "type": "object",
                "nullable": true,
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta",
            "nullable": true
          }
        }
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "FlowUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string",
            "description": "ID of the Flow to update. Ex: XVTP5Q"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Status you want to update the flow to. ['draft', 'manual', or 'live']"
              }
            },
            "required": [
              "status"
            ]
          }
        }
      },
      "FlowUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "type": "string",
            "description": "The campaign ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "nullable": true,
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ],
                "nullable": true,
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ],
                "nullable": true,
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "nullable": true,
                "description": "The send strategy the campaign will send with"
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignMessagePartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "type": "string",
            "description": "The message ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "nullable": true,
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ],
                "nullable": true,
                "description": "Additional attributes relating to the content of the message"
              },
              "render_options": {
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "nullable": true,
                "description": "Additional options for rendering the message"
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "CampaignSendJobPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the currently sending campaign to cancel or revert"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "example": "cancel",
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'"
              }
            },
            "required": [
              "action"
            ]
          }
        }
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TemplateUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "html": {
                "type": "string",
                "nullable": true,
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          ",
                "description": "The HTML of the template"
              },
              "text": {
                "type": "string",
                "nullable": true,
                "example": "hello world",
                "description": "The plaintext of the template"
              }
            }
          }
        }
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagGroupUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "WebhookPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WebhookEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the webhook."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "description": "A name for the webhook."
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "A description for the webhook."
              },
              "endpoint_url": {
                "type": "string",
                "nullable": true,
                "example": "https://www.example.com/example/path",
                "description": "A url to send webhook calls to. Must be https."
              },
              "secret_key": {
                "type": "string",
                "nullable": true,
                "description": "A secret key, that will be used for webhook request signing."
              },
              "enabled": {
                "type": "boolean",
                "nullable": true,
                "description": "Is the webhook enabled."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "webhook-topics": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/WebhookTopicEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "event:klaviyo.sent_sms",
                          "description": "A list of topics to subscribe to."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "WebhookPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebhookPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "PatchWebhookResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/WebhookEnum"
              },
              "id": {
                "type": "string",
                "example": "01HF7AYTK76RHR4F17G6DGTRGF",
                "description": "The ID of the webhook."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Webhook",
                    "description": "A name for the webhook."
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "example": "A webhook for sms events",
                    "description": "A description for the webhook."
                  },
                  "endpoint_url": {
                    "type": "string",
                    "example": "https://www.example.com",
                    "description": "The url to send webhook requests to, truncated for security."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Is the webhook enabled."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00",
                    "description": "Date and time when the webhook was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T01:23:45+00:00",
                    "description": "Date and time when the webhook was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "name",
                  "endpoint_url",
                  "enabled",
                  "created_at",
                  "updated_at"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "webhook-topics": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/WebhookTopicEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "event:klaviyo.sent_sms",
                              "description": "A topic the webhook is subscribed to."
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ImagePartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "type": "string",
            "example": "7",
            "description": "The ID of the image"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "description": "A name for the image."
              },
              "hidden": {
                "type": "boolean",
                "nullable": true,
                "description": "If true, this image is not shown in the asset library."
              }
            }
          }
        }
      },
      "ImagePartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImagePartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "UniversalContentPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateUniversalContentEnum"
          },
          "id": {
            "type": "string",
            "example": "01HWWWKAW4RHXQJCMW4R2KRYR4",
            "description": "The ID of the template universal content"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "nullable": true,
                "description": "The name for this template universal content"
              },
              "definition": {
                "$ref": "#/components/schemas/TextBlock",
                "nullable": true
              }
            }
          }
        }
      },
      "UniversalContentPartialUpdateQuery": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UniversalContentPartialUpdateQueryResourceObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self",
          "related"
        ]
      },
      "OnlyRelatedLinks": {
        "type": "object",
        "properties": {
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "related"
        ]
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "ObjectLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "CouponEnum": {
        "type": "string",
        "enum": [
          "coupon"
        ]
      },
      "CouponCodeEnum": {
        "type": "string",
        "enum": [
          "coupon-code"
        ]
      },
      "CatalogItemEnum": {
        "type": "string",
        "enum": [
          "catalog-item"
        ]
      },
      "CatalogVariantEnum": {
        "type": "string",
        "enum": [
          "catalog-variant"
        ]
      },
      "CatalogCategoryEnum": {
        "type": "string",
        "enum": [
          "catalog-category"
        ]
      },
      "CouponCodeBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "coupon-code-bulk-create-job"
        ]
      },
      "EventEnum": {
        "type": "string",
        "enum": [
          "event"
        ]
      },
      "MetricEnum": {
        "type": "string",
        "enum": [
          "metric"
        ]
      },
      "ProfileEnum": {
        "type": "string",
        "enum": [
          "profile"
        ]
      },
      "ListEnum": {
        "type": "string",
        "enum": [
          "list"
        ]
      },
      "TagEnum": {
        "type": "string",
        "enum": [
          "tag"
        ]
      },
      "SegmentEnum": {
        "type": "string",
        "enum": [
          "segment"
        ]
      },
      "ConversationEnum": {
        "type": "string",
        "enum": [
          "conversation"
        ]
      },
      "ProfileBulkImportJobEnum": {
        "type": "string",
        "enum": [
          "profile-bulk-import-job"
        ]
      },
      "ImportErrorEnum": {
        "type": "string",
        "enum": [
          "import-error"
        ]
      },
      "FlowEnum": {
        "type": "string",
        "enum": [
          "flow"
        ]
      },
      "FlowActionEnum": {
        "type": "string",
        "enum": [
          "flow-action"
        ]
      },
      "FlowMessageEnum": {
        "type": "string",
        "enum": [
          "flow-message"
        ]
      },
      "TemplateEnum": {
        "type": "string",
        "enum": [
          "template"
        ]
      },
      "CampaignEnum": {
        "type": "string",
        "enum": [
          "campaign"
        ]
      },
      "CampaignMessageEnum": {
        "type": "string",
        "enum": [
          "campaign-message"
        ]
      },
      "CampaignSendJobEnum": {
        "type": "string",
        "enum": [
          "campaign-send-job"
        ]
      },
      "CatalogItemBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-create-job"
        ]
      },
      "CatalogItemBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-update-job"
        ]
      },
      "CatalogItemBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-delete-job"
        ]
      },
      "CatalogVariantBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-create-job"
        ]
      },
      "CatalogVariantBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-update-job"
        ]
      },
      "CatalogVariantBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-delete-job"
        ]
      },
      "CatalogCategoryBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-create-job"
        ]
      },
      "CatalogCategoryBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-update-job"
        ]
      },
      "CatalogCategoryBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-delete-job"
        ]
      },
      "TagGroupEnum": {
        "type": "string",
        "enum": [
          "tag-group"
        ]
      },
      "WebhookEnum": {
        "type": "string",
        "enum": [
          "webhook"
        ]
      },
      "WebhookTopicEnum": {
        "type": "string",
        "enum": [
          "webhook-topic"
        ]
      },
      "AccountEnum": {
        "type": "string",
        "enum": [
          "account"
        ]
      },
      "TemplateUniversalContentEnum": {
        "type": "string",
        "enum": [
          "template-universal-content"
        ]
      },
      "FormEnum": {
        "type": "string",
        "enum": [
          "form"
        ]
      },
      "BackInStockSubscriptionEnum": {
        "type": "string",
        "enum": [
          "back-in-stock-subscription"
        ]
      },
      "EventBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "event-bulk-create-job"
        ]
      },
      "MetricAggregateEnum": {
        "type": "string",
        "enum": [
          "metric-aggregate"
        ]
      },
      "ProfileMergeEnum": {
        "type": "string",
        "enum": [
          "profile-merge"
        ]
      },
      "ProfileSuppressionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-create-job"
        ]
      },
      "ProfileUnsuppressionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-unsuppression-bulk-create-job"
        ]
      },
      "ProfileSuppressionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-delete-job"
        ]
      },
      "ProfileSubscriptionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-create-job"
        ]
      },
      "ProfileUnsubscriptionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-unsubscription-bulk-create-job"
        ]
      },
      "ProfileSubscriptionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-delete-job"
        ]
      },
      "DataPrivacyDeletionJobEnum": {
        "type": "string",
        "enum": [
          "data-privacy-deletion-job"
        ]
      },
      "PushTokenEnum": {
        "type": "string",
        "enum": [
          "push-token"
        ]
      },
      "CampaignValuesReportEnum": {
        "type": "string",
        "enum": [
          "campaign-values-report"
        ]
      },
      "FlowValuesReportEnum": {
        "type": "string",
        "enum": [
          "flow-values-report"
        ]
      },
      "FlowSeriesReportEnum": {
        "type": "string",
        "enum": [
          "flow-series-report"
        ]
      },
      "ConversationMessageEnum": {
        "type": "string",
        "enum": [
          "conversation-message"
        ]
      },
      "SubscriptionEnum": {
        "type": "string",
        "enum": [
          "subscription"
        ]
      },
      "PushTokenUnregisterEnum": {
        "type": "string",
        "enum": [
          "push-token-unregister"
        ]
      },
      "EventBulkCreateEnum": {
        "type": "string",
        "enum": [
          "event-bulk-create"
        ]
      },
      "FormVersionEnum": {
        "type": "string",
        "enum": [
          "form-version"
        ]
      },
      "FormVersionResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FormVersionEnum"
          },
          "id": {
            "type": "string",
            "example": 1234567,
            "description": "ID of the form version. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "form_type": {
                "type": "string",
                "enum": [
                  "banner",
                  "embed",
                  "flyout",
                  "full_page",
                  "popup"
                ],
                "description": "The type of form."
              },
              "ab_test": {
                "$ref": "#/components/schemas/FormVersionABTest",
                "nullable": true
              },
              "status": {
                "type": "string",
                "enum": [
                  "draft",
                  "live"
                ],
                "description": "Status of the form version. \"live\" means it's live on site."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z",
                "description": "ISO8601 timestamp when the form version was created."
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2024-03-04T00:00:00Z",
                "description": "ISO8601 timestamp when the form version was last updated."
              }
            },
            "required": [
              "form_type",
              "status",
              "created_at",
              "updated_at"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "SegmentRetrieveResponseObjectResourceAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Repeat Purchasers",
            "description": "A helpful name to label the segment"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2022-11-08T00:00:00+00:00",
            "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2022-11-08T00:00:00+00:00",
            "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
          },
          "is_active": {
            "type": "boolean"
          },
          "is_processing": {
            "type": "boolean"
          },
          "is_starred": {
            "type": "boolean"
          }
        },
        "required": [
          "is_active",
          "is_processing",
          "is_starred"
        ]
      },
      "SegmentRetrieveResponseObjectResourceExtended": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SegmentRetrieveResponseObjectResourceAttributes"
              },
              {
                "properties": {
                  "profile_count": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              }
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      }
    },
    "responses": {
      "ClientError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Client Error"
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Server Error"
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2024-07-15.pre/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "accounts"
    },
    {
      "name": "Beta APIs",
      "description": "beta apis"
    },
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Conversations",
      "description": "conversations"
    },
    {
      "name": "Coupons",
      "description": "coupons"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Forms",
      "description": "forms"
    },
    {
      "name": "Images",
      "description": "images"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Reporting",
      "description": "reporting"
    },
    {
      "name": "Reviews",
      "description": "reviews"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
