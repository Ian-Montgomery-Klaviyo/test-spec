{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API",
    "version": "2023-09-15",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "paths": {
    "/api/accounts/": {
      "get": {
        "operationId": "get_accounts",
        "summary": "Get Accounts",
        "description": "Retrieve the account(s) associated with a given private API key. This will return 1 account object within the array.\n\nYou can use this to retrieve account-specific data (contact information, timezone, currency, Public API key, etc.) or test if a Private API Key belongs to the correct account prior to performing subsequent actions with the API.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`accounts:read`",
        "parameters": [
          {
            "name": "fields[account]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contact_information",
                  "contact_information.default_sender_name",
                  "contact_information.default_sender_email",
                  "contact_information.website_url",
                  "contact_information.organization_name",
                  "contact_information.street_address",
                  "contact_information.street_address.address1",
                  "contact_information.street_address.address2",
                  "contact_information.street_address.city",
                  "contact_information.street_address.region",
                  "contact_information.street_address.country",
                  "contact_information.street_address.zip",
                  "industry",
                  "timezone",
                  "preferred_currency",
                  "public_api_key"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "accounts:read"
        ],
        "tags": [
          "Accounts"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/accounts/{id}/": {
      "get": {
        "operationId": "get_account",
        "summary": "Get Account",
        "description": "Retrieve a single account object by its account ID. You can only request the account by which the private API key was generated.<br><br>*Rate limits*:<br>Burst: `1/s`<br>Steady: `15/m`\n\n**Scopes:**\n`accounts:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the account",
            "schema": {
              "type": "string",
              "example": "AbC123",
              "description": "The ID of the account"
            },
            "in": "path"
          },
          {
            "name": "fields[account]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contact_information",
                  "contact_information.default_sender_name",
                  "contact_information.default_sender_email",
                  "contact_information.website_url",
                  "contact_information.organization_name",
                  "contact_information.street_address",
                  "contact_information.street_address.address1",
                  "contact_information.street_address.address2",
                  "contact_information.street_address.city",
                  "contact_information.street_address.region",
                  "contact_information.street_address.country",
                  "contact_information.street_address.zip",
                  "industry",
                  "timezone",
                  "preferred_currency",
                  "public_api_key"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "accounts:read"
        ],
        "tags": [
          "Accounts"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "1/s",
          "steady": "15/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaigns/": {
      "get": {
        "operationId": "get_campaigns",
        "summary": "Get Campaigns",
        "description": "Returns some or all campaigns based on filters.\n\nA channel filter is required to list campaigns. Please provide either:\n`?filter=equals(messages.channel,'email')` to list email campaigns, or\n`?filter=equals(messages.channel,'sms')` to list SMS campaigns.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`messages.channel`: `equals`<br>`name`: `contains`<br>`status`: `any`, `equals`<br>`archived`: `equals`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`scheduled_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string",
              "example": "equals(messages.channel,'sms')"
            },
            "required": true
          },
          {
            "name": "fields[campaign-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[campaign]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign-messages",
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "id",
                "-id",
                "name",
                "-name",
                "scheduled_at",
                "-scheduled_at",
                "updated_at",
                "-updated_at"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_campaign",
        "summary": "Create Campaign",
        "description": "Creates a campaign given a set of parameters, then returns it.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreateQuery"
              }
            }
          },
          "description": "Creates a campaign from parameters"
        }
      }
    },
    "/api/campaigns/{id}/": {
      "get": {
        "operationId": "get_campaign",
        "summary": "Get Campaign",
        "description": "Returns a specific campaign based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The campaign ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The campaign ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[campaign]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign-messages",
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_campaign",
        "summary": "Update Campaign",
        "description": "Update a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The campaign ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The campaign ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignPartialUpdateQuery"
              }
            }
          },
          "description": "Update a campaign and return it"
        }
      },
      "delete": {
        "operationId": "delete_campaign",
        "summary": "Delete Campaign",
        "description": "Delete a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The campaign ID to be deleted",
            "schema": {
              "type": "string",
              "description": "The campaign ID to be deleted"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaign-messages/{id}/": {
      "get": {
        "operationId": "get_campaign_message",
        "summary": "Get Campaign Message",
        "description": "Returns a specific message based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The message ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The message ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[campaign]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign",
                  "template"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Messages",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_campaign_message",
        "summary": "Update Campaign Message",
        "description": "Update a campaign message<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The message ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The message ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Messages",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessagePartialUpdateQuery"
              }
            }
          },
          "description": "Update a message and return it"
        }
      }
    },
    "/api/campaign-send-jobs/{id}/": {
      "get": {
        "operationId": "get_campaign_send_job",
        "summary": "Get Campaign Send Job",
        "description": "Get a campaign send job<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the campaign to send",
            "schema": {
              "type": "string",
              "description": "The ID of the campaign to send"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-send-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Jobs",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_campaign_send_job",
        "summary": "Update Campaign Send Job",
        "description": "Permanently cancel the campaign, setting the status to CANCELED or\nrevert the campaign, setting the status back to DRAFT<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the currently sending campaign to cancel or revert",
            "schema": {
              "type": "string",
              "description": "The ID of the currently sending campaign to cancel or revert"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Jobs",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQuery"
              }
            }
          },
          "description": "Permanently cancel the campaign, setting the status to CANCELED or\nrevert the campaign, setting the status back to DRAFT"
        }
      }
    },
    "/api/campaign-recipient-estimation-jobs/{id}/": {
      "get": {
        "operationId": "get_campaign_recipient_estimation_job",
        "summary": "Get Campaign Recipient Estimation Job",
        "description": "Retrieve the status of a recipient estimation job triggered\nwith the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the campaign to get recipient estimation status",
            "schema": {
              "type": "string",
              "description": "The ID of the campaign to get recipient estimation status"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-recipient-estimation-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecipientEstimationJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Jobs",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaign-recipient-estimations/{id}/": {
      "get": {
        "operationId": "get_campaign_recipient_estimation",
        "summary": "Get Campaign Recipient Estimation",
        "description": "Get the estimated recipient count for a campaign with the provided campaign ID.\nYou can refresh this count by using the `Create Campaign Recipient Estimation Job` endpoint.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the campaign for which to get the estimated number of recipients",
            "schema": {
              "type": "string",
              "description": "The ID of the campaign for which to get the estimated number of recipients"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-recipient-estimation]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "estimated_recipient_count"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecipientEstimationResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaign-clone/": {
      "post": {
        "operationId": "create_campaign_clone",
        "summary": "Create Campaign Clone",
        "description": "Clones an existing campaign, returning a new campaign based on the original with a new ID and name.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCloneQuery"
              }
            }
          },
          "description": "Clones a campaign from an existing campaign"
        }
      }
    },
    "/api/campaign-message-assign-template/": {
      "post": {
        "operationId": "create_campaign_message_assign_template",
        "summary": "Assign Campaign Message Template",
        "description": "Creates a non-reusable version of the template and assigns it to the message.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Messages",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessageAssignTemplateQuery"
              }
            }
          },
          "description": "Takes a reusable template, clones it, and assigns the non-reusable clone to the message."
        }
      }
    },
    "/api/campaign-send-jobs/": {
      "post": {
        "operationId": "create_campaign_send_job",
        "summary": "Create Campaign Send Job",
        "description": "Trigger a campaign to send asynchronously<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Jobs",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobCreateQuery"
              }
            }
          },
          "description": "Trigger the campaign to send asynchronously"
        }
      }
    },
    "/api/campaign-recipient-estimation-jobs/": {
      "post": {
        "operationId": "create_campaign_recipient_estimation_job",
        "summary": "Create Campaign Recipient Estimation Job",
        "description": "Trigger an asynchronous job to update the estimated number of recipients\nfor the given campaign ID. Use the `Get Campaign Recipient Estimation\nJob` endpoint to retrieve the status of this estimation job. Use the\n`Get Campaign Recipient Estimation` endpoint to retrieve the estimated\nrecipient count for a given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignRecipientEstimationJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Jobs",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQuery"
              }
            }
          },
          "description": "Trigger an asynchronous job to update the estimated number of recipients\nfor the given campaign ID. Use the `Get Campaign Recipient Estimation\nJob` endpoint to retrieve the status of this estimation job. Use the\n`Get Campaign Recipient Estimation` endpoint to retrieve the estimated\nrecipient count for a given campaign."
        }
      }
    },
    "/api/campaign-messages/{id}/relationships/campaign/": {
      "get": {
        "operationId": "get_campaign_message_relationships_campaign",
        "summary": "Get Campaign Message Relationships Campaign",
        "description": "Returns the ID of the related campaign<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageCampaignRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaign-messages/{id}/campaign/": {
      "get": {
        "operationId": "get_campaign_message_campaign",
        "summary": "Get Campaign Message Campaign",
        "description": "Return the related campaign<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaign-messages/{id}/relationships/template/": {
      "get": {
        "operationId": "get_campaign_message_relationships_template",
        "summary": "Get Campaign Message Relationships Template",
        "description": "Returns the ID of the related template<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageTemplateRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "templates:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaign-messages/{id}/template/": {
      "get": {
        "operationId": "get_campaign_message_template",
        "summary": "Get Campaign Message Template",
        "description": "Return the related template<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "templates:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaigns/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_campaign_relationships_tags",
        "summary": "Get Campaign Relationships Tags",
        "description": "Returns the IDs of all tags associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaigns/{id}/tags/": {
      "get": {
        "operationId": "get_campaign_tags",
        "summary": "Get Campaign Tags",
        "description": "Return all tags that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaigns/{id}/relationships/campaign-messages/": {
      "get": {
        "operationId": "get_campaign_relationships_campaign_messages",
        "summary": "Get Campaign Relationships Campaign Messages",
        "description": "Returns the IDs of all messages associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessagesRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/campaigns/{id}/campaign-messages/": {
      "get": {
        "operationId": "get_campaign_campaign_messages",
        "summary": "Get Campaign Campaign Messages",
        "description": "Return all messages that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`campaigns:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "send_times",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language",
                  "created_at",
                  "updated_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[campaign]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "send_strategy.options_sto",
                  "send_strategy.options_sto.date",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign",
                  "template"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read"
        ],
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-subtag": "Campaigns",
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-items/": {
      "get": {
        "operationId": "get_catalog_items",
        "summary": "Get Catalog Items",
        "description": "Get all catalog items in an account.\n\nCatalog items can be sorted by the following fields, in ascending and descending order:\n`created`\n\nInclude parameters can be provided to get the following related resource data: `variants`\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category.id`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_item",
        "summary": "Create Catalog Item",
        "description": "Create a new catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-items/{id}/": {
      "get": {
        "operationId": "get_catalog_item",
        "summary": "Get Catalog Item",
        "description": "Get a specific catalog item with the given item ID.\n\nInclude parameters can be provided to get the following related resource data: `variants`<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_catalog_item",
        "summary": "Update Catalog Item",
        "description": "Update a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogItemResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_item",
        "summary": "Delete Catalog Item",
        "description": "Delete a catalog item with the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
              "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variants/": {
      "get": {
        "operationId": "get_catalog_variants",
        "summary": "Get Catalog Variants",
        "description": "Get all variants in an account.\n\nVariants can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_variant",
        "summary": "Create Catalog Variant",
        "description": "Create a new variant for a related catalog item.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variants/{id}/": {
      "get": {
        "operationId": "get_catalog_variant",
        "summary": "Get Catalog Variant",
        "description": "Get a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_catalog_variant",
        "summary": "Update Catalog Variant",
        "description": "Update a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogVariantResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_variant",
        "summary": "Delete Catalog Variant",
        "description": "Delete a catalog item variant with the given variant ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
              "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-categories/": {
      "get": {
        "operationId": "get_catalog_categories",
        "summary": "Get Catalog Categories",
        "description": "Get all catalog categories in an account.\n\nCatalog categories can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_category",
        "summary": "Create Catalog Category",
        "description": "Create a new catalog category.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-categories/{id}/": {
      "get": {
        "operationId": "get_catalog_category",
        "summary": "Get Catalog Category",
        "description": "Get a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_catalog_category",
        "summary": "Update Catalog Category",
        "description": "Update a catalog category with the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCatalogCategoryResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_category",
        "summary": "Delete Catalog Category",
        "description": "Delete a catalog category using the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`.",
            "schema": {
              "type": "string",
              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
              "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-item-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_items_jobs",
        "summary": "Get Create Items Jobs",
        "description": "Get all catalog item bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_create_items_job",
        "summary": "Spawn Create Items Job",
        "description": "Create a catalog item bulk create job to create a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCreateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-item-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_items_job",
        "summary": "Get Create Items Job",
        "description": "Get a catalog item bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-item-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_items_jobs",
        "summary": "Get Update Items Jobs",
        "description": "Get all catalog item bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_update_items_job",
        "summary": "Spawn Update Items Job",
        "description": "Create a catalog item bulk update job to update a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-item-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_items_job",
        "summary": "Get Update Items Job",
        "description": "Get a catalog item bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `items`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-item-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_items_jobs",
        "summary": "Get Delete Items Jobs",
        "description": "Get all catalog item bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_delete_items_job",
        "summary": "Spawn Delete Items Job",
        "description": "Create a catalog item bulk delete job to delete a batch of catalog items.\n\nAccepts up to 100 catalog items per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-item-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_items_job",
        "summary": "Get Delete Items Job",
        "description": "Get a catalog item bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variant-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_variants_jobs",
        "summary": "Get Create Variants Jobs",
        "description": "Get all catalog variant bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_create_variants_job",
        "summary": "Spawn Create Variants Job",
        "description": "Create a catalog variant bulk create job to create a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variant-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_variants_job",
        "summary": "Get Create Variants Job",
        "description": "Get a catalog variant bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variant-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_variants_jobs",
        "summary": "Get Update Variants Jobs",
        "description": "Get all catalog variant bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_update_variants_job",
        "summary": "Spawn Update Variants Job",
        "description": "Create a catalog variant bulk update job to update a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variant-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_variants_job",
        "summary": "Get Update Variants Job",
        "description": "Get a catalog variate bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `variants`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_variants_jobs",
        "summary": "Get Delete Variants Jobs",
        "description": "Get all catalog variant bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_delete_variants_job",
        "summary": "Spawn Delete Variants Job",
        "description": "Create a catalog variant bulk delete job to delete a batch of catalog variants.\n\nAccepts up to 100 catalog variants per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-variant-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_variants_job",
        "summary": "Get Delete Variants Job",
        "description": "Get a catalog variant bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-category-bulk-create-jobs/": {
      "get": {
        "operationId": "get_create_categories_jobs",
        "summary": "Get Create Categories Jobs",
        "description": "Get all catalog category bulk create jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_create_categories_job",
        "summary": "Spawn Create Categories Job",
        "description": "Create a catalog category bulk create job to create a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryCreateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-category-bulk-create-jobs/{job_id}/": {
      "get": {
        "operationId": "get_create_categories_job",
        "summary": "Get Create Categories Job",
        "description": "Get a catalog category bulk create job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category-bulk-create-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryCreateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-category-bulk-update-jobs/": {
      "get": {
        "operationId": "get_update_categories_jobs",
        "summary": "Get Update Categories Jobs",
        "description": "Get all catalog category bulk update jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_update_categories_job",
        "summary": "Spawn Update Categories Job",
        "description": "Create a catalog category bulk update job to update a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryUpdateJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-category-bulk-update-jobs/{job_id}/": {
      "get": {
        "operationId": "get_update_categories_job",
        "summary": "Get Update Categories Job",
        "description": "Get a catalog category bulk update job with the given job ID.\n\nAn `include` parameter can be provided to get the following related resource data: `categories`.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category-bulk-update-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryUpdateJobResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-category-bulk-delete-jobs/": {
      "get": {
        "operationId": "get_delete_categories_jobs",
        "summary": "Get Delete Categories Jobs",
        "description": "Get all catalog category bulk delete jobs.\n\nReturns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "spawn_delete_categories_job",
        "summary": "Spawn Delete Categories Job",
        "description": "Create a catalog category bulk delete job to delete a batch of catalog categories.\n\nAccepts up to 100 catalog categories per request. The maximum allowed payload size is 4MB.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-category-bulk-delete-jobs/{job_id}/": {
      "get": {
        "operationId": "get_delete_categories_job",
        "summary": "Get Delete Categories Job",
        "description": "Get a catalog category bulk delete job with the given job ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "job_id",
            "required": true,
            "description": "ID of the job to retrieve.",
            "schema": {
              "type": "string",
              "example": "01GSQPBF74KQ5YTDEPP41T1BZH",
              "description": "ID of the job to retrieve."
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category-bulk-delete-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count",
                  "completed_count",
                  "failed_count",
                  "completed_at",
                  "errors",
                  "expires_at"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryDeleteJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/back-in-stock-subscriptions/": {
      "post": {
        "operationId": "create_back_in_stock_subscription",
        "summary": "Create Back In Stock Subscription",
        "description": "Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.\n\nThis endpoint is specifically designed to be called from server-side applications. To create subscriptions from client-side contexts, use [POST /client/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_client_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write",
          "profiles:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Back In Stock",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerBISSubscriptionCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/catalog-categories/{id}/items/": {
      "get": {
        "operationId": "get_catalog_category_items",
        "summary": "Get Catalog Category Items",
        "description": "Get all items in a category with the given category ID.\n\nItems can be sorted by the following fields, in ascending and descending order:\n`created`\n\nInclude parameters can be provided to get the following related resource data: `variants`\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-item]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`category.id`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Items",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-items/{id}/variants/": {
      "get": {
        "operationId": "get_catalog_item_variants",
        "summary": "Get Catalog Item Variants",
        "description": "Get all variants related to the given item ID.\n\nVariants can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 variants per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-variant]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "title",
                  "description",
                  "sku",
                  "inventory_policy",
                  "inventory_quantity",
                  "price",
                  "url",
                  "image_full_url",
                  "image_thumbnail_url",
                  "images",
                  "custom_metadata",
                  "published",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`sku`: `equals`<br>`title`: `contains`<br>`published`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogVariantResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Variants",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-items/{id}/categories/": {
      "get": {
        "operationId": "get_catalog_item_categories",
        "summary": "Get Catalog Item Categories",
        "description": "Get all catalog categories that an item with the given item ID is in.\n\nCatalog categories can be sorted by the following fields, in ascending and descending order:\n`created`\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[catalog-category]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "external_id",
                  "name",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`ids`: `any`<br>`item.id`: `equals`<br>`name`: `contains`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Categories",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/catalog-categories/{id}/relationships/items/": {
      "get": {
        "operationId": "get_catalog_category_relationships_items",
        "summary": "Get Catalog Category Relationships Items",
        "description": "Get all items in the given category ID.\n\nReturns a maximum of 100 items per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogCategoryItemListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_category_relationships_items",
        "summary": "Create Catalog Category Relationships Items",
        "description": "Create a new item relationship for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "update_catalog_category_relationships_items",
        "summary": "Update Catalog Category Relationships Items",
        "description": "Update item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_category_relationships_items",
        "summary": "Delete Catalog Category Relationships Items",
        "description": "Delete item relationships for the given category ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogCategoryItemOp"
              }
            }
          }
        }
      }
    },
    "/api/catalog-items/{id}/relationships/categories/": {
      "get": {
        "operationId": "get_catalog_item_relationships_categories",
        "summary": "Get Catalog Item Relationships Categories",
        "description": "Get all catalog categories that a particular item is in.\n\nReturns a maximum of 100 categories per request.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogItemCategoryListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:read"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_catalog_item_relationships_categories",
        "summary": "Create Catalog Item Relationships Categories",
        "description": "Create a new catalog category relationship for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "update_catalog_item_relationships_categories",
        "summary": "Update Catalog Item Relationships Categories",
        "description": "Update catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_catalog_item_relationships_categories",
        "summary": "Delete Catalog Item Relationships Categories",
        "description": "Delete catalog category relationships for the given item ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`catalogs:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write"
        ],
        "tags": [
          "Catalogs"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogItemCategoryOp"
              }
            }
          }
        }
      }
    },
    "/api/data-privacy-deletion-jobs/": {
      "post": {
        "operationId": "request_profile_deletion",
        "summary": "Request Profile Deletion",
        "description": "Request a deletion for the profiles corresponding to one of the following identifiers: `email`, `phone_number`, or `id`. If multiple identifiers are provided, we will return an error.\n\nAll profiles that match the provided identifier will be deleted.\n\nThe deletion occurs asynchronously; however, once it has completed, the deleted profile will appear on the [Deleted Profiles page](https://www.klaviyo.com/account/deleted).\n\nFor more information on the deletion process, please refer to our [Help Center docs on how to handle GDPR and CCPA deletion requests](https://help.klaviyo.com/hc/en-us/articles/360004217631-How-to-Handle-GDPR-Requests#record-gdpr-and-ccpa%20%20-deletion-requests2).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`data-privacy:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "data-privacy:write"
        ],
        "tags": [
          "Data Privacy"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
              }
            }
          }
        }
      }
    },
    "/api/events/": {
      "get": {
        "operationId": "get_events",
        "summary": "Get Events",
        "description": "Get all events in an account\n\nRequests can be sorted by the following fields:\n`datetime`, `timestamp`\n\nInclude parameters can be provided to get the following related resource data: `metric`, `profile`\n\nReturns a maximum of 200 events per page.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`",
        "parameters": [
          {
            "name": "fields[event]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`metric_id`: `equals`<br>`profile_id`: `equals`<br>`datetime`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`timestamp`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metric",
                  "profile"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "datetime",
                "-datetime",
                "timestamp",
                "-timestamp"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:read"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_event",
        "summary": "Create Event",
        "description": "Create a new event to track a profile's activity.\n\nSuccessful response indicates that the event was validated and submitted for processing, but does not guarantee that processing is complete.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:write"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQueryV2"
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/": {
      "get": {
        "operationId": "get_event",
        "summary": "Get Event",
        "description": "Get an event with the given event ID.\n\nInclude parameters can be provided to get the following related resource data: `metric`, `profile`<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "ID of the event",
            "schema": {
              "type": "string",
              "description": "ID of the event"
            },
            "in": "path"
          },
          {
            "name": "fields[event]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "event_properties",
                  "datetime",
                  "uuid"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "metric",
                  "profile"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:read"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/metric/": {
      "get": {
        "operationId": "get_event_metric",
        "summary": "Get Event Metric",
        "description": "Get the metric for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:read",
          "metrics:read"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/profile/": {
      "get": {
        "operationId": "get_event_profile",
        "summary": "Get Event Profile",
        "description": "Get the profile associated with an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:read",
          "profiles:read"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/relationships/metric/": {
      "get": {
        "operationId": "get_event_relationships_metric",
        "summary": "Get Event Relationships Metric",
        "description": "Get a list of related Metrics for an Event<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventMetricsRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:read",
          "metrics:read"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/events/{id}/relationships/profile/": {
      "get": {
        "operationId": "get_event_relationships_profile",
        "summary": "Get Event Relationships Profile",
        "description": "Get profile [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for an event with the given event ID.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventProfilesRelationshipListResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:read",
          "profiles:read"
        ],
        "tags": [
          "Events"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/": {
      "get": {
        "operationId": "get_flows",
        "summary": "Get Flows",
        "description": "Get all flows in an account.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`status`: `equals`<br>`archived`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`trigger_type`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions",
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 50
            },
            "description": "Default: 50. Min: 1. Max: 50."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "status",
                "-status",
                "trigger_type",
                "-trigger_type",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/": {
      "get": {
        "operationId": "get_flow",
        "summary": "Get Flow",
        "description": "Get a flow with the given flow ID.\n\nInclude parameters can be provided to get the following related resource data: `flow-actions`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-actions",
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_flow",
        "summary": "Update Flow Status",
        "description": "Update the status of a flow with the given flow ID, and all actions in that flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "ID of the Flow to update. Ex: XVTP5Q",
            "schema": {
              "type": "string",
              "description": "ID of the Flow to update. Ex: XVTP5Q"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:write"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/flow-actions/{id}/": {
      "get": {
        "operationId": "get_flow_action",
        "summary": "Get Flow Action",
        "description": "Get a flow action from a flow with the given flow action ID.\n\nInclude parameters can be provided to get the following related resource data: `flow`, `flow-messages`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow",
                  "flow-messages"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/": {
      "get": {
        "operationId": "get_flow_message",
        "summary": "Get Flow Message",
        "description": "Get the flow message of a flow with the given message ID.\n\nInclude parameters can be provided to get the following related resource data: 'flow-actions'<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[flow-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "flow-action",
                  "template"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/flow-actions/": {
      "get": {
        "operationId": "get_flow_flow_actions",
        "summary": "Get Flow Flow Actions",
        "description": "Get all flow actions associated with the given flow ID.\n\nReturns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`action_type`: `any`, `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 50
            },
            "description": "Default: 50. Min: 1. Max: 50."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "action_type",
                "-action_type",
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/relationships/flow-actions/": {
      "get": {
        "operationId": "get_flow_relationships_flow_actions",
        "summary": "Get Flow Relationships Flow Actions",
        "description": "Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.\n\nFlow action relationships can be sorted by the following fields, in ascending and descending order:\n`id`,  `status`, `created`, `updated`\n\nUse filters to narrow your results.\n\nReturns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`action_type`: `equals`<br>`status`: `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 50. Min: 1. Max: 100."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "status",
                "-status",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowFlowActionRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_flow_relationships_tags",
        "summary": "Get Flow Relationships Tags",
        "description": "Return the tag IDs of all tags associated with the given flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flows/{id}/tags/": {
      "get": {
        "operationId": "get_flow_tags",
        "summary": "Get Flow Tags",
        "description": "Return all tags associated with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{id}/flow/": {
      "get": {
        "operationId": "get_flow_action_flow",
        "summary": "Get Flow For Flow Action",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "created",
                  "updated",
                  "trigger_type"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{id}/relationships/flow/": {
      "get": {
        "operationId": "get_flow_action_relationships_flow",
        "summary": "Get Flow Action Relationships Flow",
        "description": "Get the flow associated with the given action ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{id}/flow-messages/": {
      "get": {
        "operationId": "get_flow_action_messages",
        "summary": "Get Flow Action Messages",
        "description": "Get all flow messages associated with the given action ID.\n\nFlow messages can be sorted by the following fields, in ascending and descending order:\n\nascending: `id`,  `name`, `created`, `updated`\ndescending: `-id`,  `-name`, `-created`, `-updated`\n\nReturns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: `page[size]` and `page[number]`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "channel",
                  "content",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 50. Min: 1. Max: 100."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-actions/{id}/relationships/flow-messages/": {
      "get": {
        "operationId": "get_flow_action_relationships_messages",
        "summary": "Get Flow Action Relationships Messages",
        "description": "Get all relationships for flow messages associated with the given flow action ID.\n\nReturns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 50
            },
            "description": "Default: 50. Min: 1. Max: 50."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionFlowMessageRelationshipResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/flow-action/": {
      "get": {
        "operationId": "get_flow_message_action",
        "summary": "Get Flow Action For Message",
        "description": "Get the flow action for a flow message with the given message ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[flow-action]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action_type",
                  "status",
                  "created",
                  "updated",
                  "settings",
                  "tracking_options",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.is_transactional",
                  "render_options",
                  "render_options.shorten_links",
                  "render_options.add_org_prefix",
                  "render_options.add_info_link",
                  "render_options.add_opt_out_language"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowActionResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/relationships/flow-action/": {
      "get": {
        "operationId": "get_flow_message_relationships_action",
        "summary": "Get Flow Message Relationships Action",
        "description": "Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message's flow action, given the flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageFlowActionRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/relationships/template/": {
      "get": {
        "operationId": "get_flow_message_relationships_template",
        "summary": "Get Flow Message Relationships Template",
        "description": "Returns the ID of the related template<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowMessageTemplateRelationshipResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/flow-messages/{id}/template/": {
      "get": {
        "operationId": "get_flow_message_template",
        "summary": "Get Flow Message Template",
        "description": "Return the related template<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "tags": [
          "Flows"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/images/": {
      "get": {
        "operationId": "get_images",
        "summary": "Get Images",
        "description": "Get all images in an account.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:read`",
        "parameters": [
          {
            "name": "fields[image]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`format`: `any`, `equals`<br>`name`: `any`, `contains`, `ends-with`, `equals`, `starts-with`<br>`size`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`hidden`: `any`, `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 20. Min: 1. Max: 100."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "format",
                "-format",
                "id",
                "-id",
                "name",
                "-name",
                "size",
                "-size",
                "updated_at",
                "-updated_at"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "images:read"
        ],
        "tags": [
          "Images"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "upload_image_url",
        "summary": "Upload Image Url",
        "description": "Import an image from a url or data uri.\n\nIf you want to upload an image from a file, use the Upload Image API instead.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `100/d`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "images:write"
        ],
        "tags": [
          "Images"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "100/d"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreateQuery"
              }
            },
            "multipart/form-data": {
              "schema":{
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                }
              }
            }
          },
          "description": "This DTO is used when the file is provided via url or `data:` uri"
        }
      }
    },
    "/api/images/{id}/": {
      "get": {
        "operationId": "get_image",
        "summary": "Get Image",
        "description": "Get the image with the given image ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the image",
            "schema": {
              "type": "string",
              "example": "7",
              "description": "The ID of the image"
            },
            "in": "path"
          },
          {
            "name": "fields[image]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "images:read"
        ],
        "tags": [
          "Images"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_image",
        "summary": "Update Image",
        "description": "Update the image with the given image ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`images:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the image",
            "schema": {
              "type": "string",
              "example": "7",
              "description": "The ID of the image"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchImageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "images:write"
        ],
        "tags": [
          "Images"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagePartialUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/lists/": {
      "get": {
        "operationId": "get_lists",
        "summary": "Get Lists",
        "description": "Get all lists in an account.\n\nFilter to request a subset of all lists. Lists can be filtered by `id`, `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`list:read`",
        "parameters": [
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_list",
        "summary": "Create List",
        "description": "Create a new list.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostListCreateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/lists/{id}/": {
      "get": {
        "operationId": "get_list",
        "summary": "Get List",
        "description": "Get a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[list]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2023-09-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`list:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "additional-fields[list]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            }
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "profile_count"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_list",
        "summary": "Update List",
        "description": "Update the name of a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchListPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListPartialUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_list",
        "summary": "Delete List",
        "description": "Delete a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "Y6nRLr",
              "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_list_relationships_tags",
        "summary": "Get List Relationships Tags",
        "description": "Returns the tag IDs of all tags associated with the given list.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "tags:read"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/{id}/tags/": {
      "get": {
        "operationId": "get_list_tags",
        "summary": "Get List Tags",
        "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "tags:read"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/lists/{id}/relationships/profiles/": {
      "get": {
        "operationId": "get_list_relationships_profiles",
        "summary": "Get List Relationships Profiles",
        "description": "Get profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a list with the given list ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "profiles:read"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_list_relationships",
        "summary": "Add Profile To List",
        "description": "Add a profile to a list with the given list ID.\n\nIt is recommended that you use the [Subscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/subscribe_profiles) if you're trying to give a profile consent to receive email marketing.\n\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write",
          "profiles:write"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersAddQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_list_relationships",
        "summary": "Remove Profile From List",
        "description": "Remove a profile from a list with the given list ID.\n\nThe provided profile will no longer receive marketing from this particular list once removed.\n\nRemoving a profile from a list will not impact the profile's consent status or subscription status in general.\nTo update a profile's subscription status, please use the [Unsubscribe Profiles endpoint](https://developers.klaviyo.com/en/reference/unsubscribe_profiles).\n\nThis endpoint accepts a maximum of 1000 profiles per call.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write",
          "profiles:write"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListMembersDeleteQuery"
              }
            }
          }
        }
      }
    },
    "/api/lists/{id}/profiles/": {
      "get": {
        "operationId": "get_list_profiles",
        "summary": "Get List Profiles",
        "description": "Get all profiles within a list with the given list ID.\n\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[profile]=predictive_analytics` parameter in your API request:<br>Burst: `10/s`<br>Steady: `150/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2023-09-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`list:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 20. Min: 1. Max: 100."
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "profiles:read"
        ],
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/metrics/": {
      "get": {
        "operationId": "get_metrics",
        "summary": "Get Metrics",
        "description": "Get all metrics in an account.\n\nRequests can be filtered by the following fields:\nintegration `name`, integration `category`\n\nReturns a maximum of 200 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`integration.name`: `equals`<br>`integration.category`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/metrics/{id}/": {
      "get": {
        "operationId": "get_metric",
        "summary": "Get Metric",
        "description": "Get a metric with the given metric ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Metric ID",
            "schema": {
              "type": "string",
              "description": "Metric ID"
            },
            "in": "path"
          },
          {
            "name": "fields[metric]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "integration"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/metric-aggregates/": {
      "post": {
        "operationId": "query_metric_aggregates",
        "summary": "Query Metric Aggregates",
        "description": "Query and aggregate event data associated with a metric, including native Klaviyo metrics, integration-specific metrics, and custom events. Queries must be passed in the JSON body of your `POST` request.\n\nResults can be filtered and grouped by time, event, or profile dimensions.\n\nTo learn more about how to use this endpoint, check out our new [Using the Query Metric Aggregates Endpoint guide](https://developers.klaviyo.com/en/docs/using-the-query-metric-aggregates-endpoint).\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets)\n* `sort`: sort results by a specified field, such as `\"-timestamp\"`\n* `page_cursor`: results can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/reference/api_overview#pagination)\n* `page_size`: limit the number of returned results per page\n* `by`: optional attributes used to group by the aggregation function\n    * When using `by` attributes, an empty `dimensions` response is expected when the counts for the events do not have the associated dimension requested by the set `by` attribute. For example, a query including `\"by\": [\"$flow\"]` will return an empty dimensions response for counts of metrics not associated with a `$flow`\n* `measurement`: the measurement key supports the following values:\n    * `\"sum_value\"`: perform a summation of the `_Event Value_`, optionally partitioned over any dimension provided in the `by` field\n    * `\"count\"`: counts the number of events associated to a metric, optionally partitioned over any dimension provided in the `by` field\n    * `\"unique\"` counts the number of unique customers associated to a metric, optionally partitioned over any dimension provided in the `by` field\n* `interval`: aggregation interval, such as `\"hour\"`,`\"day\"`,`\"week\"`, and `\"month\"`\n* `metric_id`: the metric ID used in the aggregation\n* `filter`: list of filters for specific fields, must include time range using ISO 8601 format (`\"YYYY-MM-DDTHH:MM:SS.mmmmmm\"`)\n    * The time range can be filtered by providing a `greater-or-equal` filter on the datetime field, such as `\"greater-or-equal(datetime,2021-07-01T00:00:00)\"` and a `less-than` filter on the same datetime field, such as `\"less-than(datetime,2022-07-01T00:00:00)\"`\n    * The time range may span a maximum of one year. Time range dates may be set to a maximum of 5 years prior to the current date\n    * Filter the list of supported aggregate dimensions using the common filter syntax, such as `\"equals(URL,\\\"https://www.klaviyo.com/\\\")\"`\n* `timezone`: the timezone used when processing the query. Case sensitive. This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones)\n    * While the payload accepts a timezone, the response datetimes returned will be in UTC.\n\nFor a comprehensive list of native Klaviyo metrics and their associated attributes for grouping and filtering, please refer to the [metrics attributes guide](https://developers.klaviyo.com/en/docs/supported_metrics_and_attributes).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`metrics:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostMetricAggregateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "metrics:read"
        ],
        "tags": [
          "Metrics"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricAggregateQuery"
              }
            }
          },
          "description": "Retrieve Metric Aggregations"
        }
      }
    },
    "/api/profiles/": {
      "get": {
        "operationId": "get_profiles",
        "summary": "Get Profiles",
        "description": "Get all profiles in an account.\n\nProfiles can be sorted by the following fields in ascending and descending order: `id`, `created`, `updated`, `email`<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[profile]=predictive_analytics` parameter in your API request:<br>Burst: `10/s`<br>Steady: `150/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2023-09-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`email`: `any`, `equals`<br>`phone_number`: `any`, `equals`<br>`external_id`: `any`, `equals`<br>`_kx`: `equals`<br>`created`: `greater-than`, `less-than`<br>`updated`: `greater-than`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 20. Min: 1. Max: 100."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "email",
                "-email",
                "id",
                "-id",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_profile",
        "summary": "Create Profile",
        "description": "Create a new profile.\n\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account,\nyou'll need to include at least one other identifier attribute (`email` or `external_id`)\nin addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/profiles/{id}/": {
      "get": {
        "operationId": "get_profile",
        "summary": "Get Profile",
        "description": "Get the profile with the given profile ID.\n\nInclude parameters can be provided to get the following related resource data: `lists` (memberships), `segments` (memberships)<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lists",
                  "segments"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_profile",
        "summary": "Update Profile",
        "description": "Update the profile with the given profile ID.\n\nIf you use a phone number as the profile identifier and SMS is not set up in the Klaviyo account,\nyou'll need to include at least one other identifier attribute (`email` or `external_id`)\nin addition to the `phone_number` attribute for the API call to work.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo.",
            "schema": {
              "type": "string",
              "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
              "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchProfileResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfilePartialUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/profile-suppression-bulk-create-jobs/": {
      "post": {
        "operationId": "suppress_profiles",
        "summary": "Suppress Profiles",
        "description": "Manually suppress one or more profiles. Such profiles will have `USER_SUPPRESSED` as their suppression reason. Manually suppressed profiles _will not_ receive email marketing. Learn more about suppressed profiles [in this document](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\n\nNot supported for SMS marketing.\n\nMaximum number of profile can be submitted for suppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:write",
          "subscriptions:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionCreateJobCreateQuery"
              }
            }
          },
          "description": "Suppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not found\nwith the given email, one will be created and immediately suppressed."
        }
      }
    },
    "/api/profile-suppression-bulk-delete-jobs/": {
      "post": {
        "operationId": "unsuppress_profiles",
        "summary": "Unsuppress Profiles",
        "description": "Unsuppress one or more profiles, this will remove any Manual Suppressions (USER_SUPPRESSED) on these profiles. A profile may receive email marketing after a manual suppression is removed so long as they have not revoked consent, i.e. unsubscribed.\n\nNot supported for SMS marketing. Only manual suppressions (USER_SUPPRESSED) will be removed. `UNSUBSCRIBE` and `SPAM_REPORT` suppressions are removed whenever a [profile resubscribes](https://developers.klaviyo.com/en/reference/subscribe_profiles).\n`INVALID_EMAIL` and `HARD_BOUNCE` suppressions cannot be removed by the API.\n\nMaximum number of profile can be submitted for unsuppression: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "subscriptions:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuppressionDeleteJobCreateQuery"
              }
            }
          },
          "description": "Unsuppresses one or more profiles from receiving marketing. Currently, supports email only. If a profile is not\nfound with the given email, no action will be taken."
        }
      }
    },
    "/api/profile-subscription-bulk-create-jobs/": {
      "post": {
        "operationId": "subscribe_profiles",
        "summary": "Subscribe Profiles",
        "description": "Subscribe one or more profiles to email marketing, SMS marketing, or both. If the list has double opt-in enabled, profiles will receive a message requiring their confirmation before subscribing. Otherwise, profiles will be immediately subscribed without receiving a confirmation message.\n\nTo add someone to a list without changing their subscription status, use [Add Profile to List](https://developers.klaviyo.com/en/reference/create_list_relationships).\n\nThis API will remove any `UNSUBSCRIBE`, `SPAM_REPORT` or `USER_SUPPRESSED` suppressions from the provided profiles. Learn more about suppressed profiles in [this document](https://help.klaviyo.com/hc/en-us/articles/115005246108-Understanding-suppressed-email-profiles#what-is-a-suppressed-profile-1).\n\nMaximum number of profile can be submitted for subscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write",
          "profiles:write",
          "subscriptions:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateJobCreateQuery"
              }
            }
          },
          "description": "Subscribes one or more profiles to marketing. Currently, supports email and SMS only. All profiles will be added to\nthe provided list. Either email or phone number is required. Both may be specified to subscribe to both channels.\nIf a profile cannot be found matching the given identifier(s), a new profile will be created and then subscribed."
        }
      }
    },
    "/api/profile-subscription-bulk-delete-jobs/": {
      "post": {
        "operationId": "unsubscribe_profiles",
        "summary": "Unsubscribe Profiles",
        "description": "Unsubscribe one or more profiles to email marketing, SMS marketing, or both.\n\nTo remove someone from a list without changing their subscription status, use [Remove Profile from List](https://developers.klaviyo.com/en/reference/delete_list_relationships).\n\nMaximum number of profile can be submitted for unsubscription: 100<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`list:write`\n`profiles:write`\n`subscriptions:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write",
          "profiles:write",
          "subscriptions:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQuery"
              }
            }
          },
          "description": "Unsubscribes one or more profiles from marketing. Currently, supports email and SMS only. All profiles will be\nremoved from the provided list. Either email or phone number is required. If a profile cannot be found matching the\ngiven identifier(s), a new profile will be created and then unsubscribed."
        }
      }
    },
    "/api/push-tokens/": {
      "post": {
        "operationId": "create_push_token",
        "summary": "Create or Update Push Token",
        "description": "Create or update a push token.\n\nThis endpoint can be used to migrate push tokens from another platform to Klaviyo. Please use our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)) to create push tokens from users' devices.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:write`\n`push-tokens:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:write",
          "push-tokens:write"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/profiles/{id}/lists/": {
      "get": {
        "operationId": "get_profile_lists",
        "summary": "Get Profile Lists",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[list]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "profiles:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/profiles/{id}/relationships/lists/": {
      "get": {
        "operationId": "get_profile_relationships_lists",
        "summary": "Get Profile Relationships Lists",
        "description": "Get list memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`profiles:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "profiles:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/profiles/{id}/segments/": {
      "get": {
        "operationId": "get_profile_segments",
        "summary": "Get Profile Segments",
        "description": "Get segment memberships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/profiles/{id}/relationships/segments/": {
      "get": {
        "operationId": "get_profile_relationships_segments",
        "summary": "Get Profile Relationships Segments",
        "description": "Get segment membership relationships for a profile with the given profile ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "tags": [
          "Profiles"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/": {
      "get": {
        "operationId": "get_segments",
        "summary": "Get Segments",
        "description": "Get all segments in an account.\n\nFilter to request a subset of all segments. Segments can be filtered by `name`, `created`, and `updated` fields.\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `any`, `equals`<br>`id`: `any`, `equals`<br>`created`: `greater-than`<br>`updated`: `greater-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentListResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{id}/": {
      "get": {
        "operationId": "get_segment",
        "summary": "Get Segment",
        "description": "Get a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`<br><br>Rate limits when using the `additional-fields[segment]=profile_count` parameter in your API request:<br>Burst: `1/s`<br>Steady: `15/m`<br><br>To learn more about how the `additional-fields` parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2023-09-15/docs/rate_limits_and_error_handling) guide.\n\n**Scopes:**\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[segment]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'profile_count'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profile_count"
                ]
              }
            }
          },
          {
            "name": "fields[segment]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "created",
                  "updated",
                  "profile_count"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRetrieveResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:read"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_segment",
        "summary": "Update Segment",
        "description": "Update the name of a segment with the given segment ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`segments:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSegmentPartialUpdateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:write"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentPartialUpdateQuery"
              }
            }
          }
        }
      }
    },
    "/api/segments/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_segment_relationships_tags",
        "summary": "Get Segment Relationships Tags",
        "description": "If `related_resource` is `tags`, returns the tag IDs of all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{id}/tags/": {
      "get": {
        "operationId": "get_segment_tags",
        "summary": "Get Segment Tags",
        "description": "Return all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{id}/relationships/profiles/": {
      "get": {
        "operationId": "get_segment_relationships_profiles",
        "summary": "Get Segment Relationships Profiles",
        "description": "Get all profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for the given segment ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/segments/{id}/profiles/": {
      "get": {
        "operationId": "get_segment_profiles",
        "summary": "Get Segment Profiles",
        "description": "Get all profiles within the given segment ID.\n\nFilter to request a subset of all profiles. Profiles can be filtered by `email`, `phone_number`, and `push_token` fields.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`\n\n**Scopes:**\n`profiles:read`\n`segments:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "additional-fields[profile]",
            "in": "query",
            "required": false,
            "description": "Request additional fields not included by default in the response. Supported values: 'predictive_analytics'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "predictive_analytics"
                ]
              }
            }
          },
          {
            "name": "fields[profile]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "phone_number",
                  "external_id",
                  "first_name",
                  "last_name",
                  "organization",
                  "title",
                  "image",
                  "created",
                  "updated",
                  "last_event_date",
                  "location",
                  "location.address1",
                  "location.address2",
                  "location.city",
                  "location.country",
                  "location.latitude",
                  "location.longitude",
                  "location.region",
                  "location.zip",
                  "location.timezone",
                  "properties",
                  "subscriptions",
                  "subscriptions.email",
                  "subscriptions.email.marketing",
                  "subscriptions.email.marketing.consent",
                  "subscriptions.email.marketing.timestamp",
                  "subscriptions.email.marketing.method",
                  "subscriptions.email.marketing.method_detail",
                  "subscriptions.email.marketing.custom_method_detail",
                  "subscriptions.email.marketing.double_optin",
                  "subscriptions.email.marketing.suppressions",
                  "subscriptions.email.marketing.list_suppressions",
                  "subscriptions.sms",
                  "subscriptions.sms.marketing",
                  "subscriptions.sms.marketing.consent",
                  "subscriptions.sms.marketing.timestamp",
                  "subscriptions.sms.marketing.method",
                  "subscriptions.sms.marketing.method_detail",
                  "predictive_analytics",
                  "predictive_analytics.historic_clv",
                  "predictive_analytics.predicted_clv",
                  "predictive_analytics.total_clv",
                  "predictive_analytics.historic_number_of_orders",
                  "predictive_analytics.predicted_number_of_orders",
                  "predictive_analytics.average_days_between_orders",
                  "predictive_analytics.average_order_value",
                  "predictive_analytics.churn_probability",
                  "predictive_analytics.expected_date_of_next_order"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`email`: `any`<br>`phone_number`: `any`<br>`push_token`: `any`<br>`_kx`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "page[size]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Default: 20. Min: 1. Max: 100."
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:read",
          "segments:read"
        ],
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "75/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tags/": {
      "get": {
        "operationId": "get_tags",
        "summary": "Get Tags",
        "description": "List all tags in an account.\n\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\n\nReturns a maximum of 50 tags per request, which can be paginated with\n[cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollectionCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tags",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag",
        "summary": "Create Tag",
        "description": "Create a tag. An account cannot have more than **500** unique tags.\n\nA tag belongs to a single tag group. If the `tag_group_id` is not specified,\nthe tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tags",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/": {
      "get": {
        "operationId": "get_tag",
        "summary": "Get Tag",
        "description": "Retrieve the tag with the given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCompoundDocument"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tags",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_tag",
        "summary": "Update Tag",
        "description": "Update the tag with the given tag ID.\n\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tags",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag",
        "summary": "Delete Tag",
        "description": "Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tags",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tag-groups/": {
      "get": {
        "operationId": "get_tag_groups",
        "summary": "Get Tag Groups",
        "description": "List all tag groups in an account. Every account has one default tag group.\n\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\n\nReturns a maximum of 25 tag groups per request, which can be paginated with\n[cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tag Groups",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_group",
        "summary": "Create Tag Group",
        "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\n\nIf `exclusive` is not specified `true` or `false`, the tag group defaults to non-exclusive.\n\nIf a tag group is non-exclusive, any given related resource (campaign, flow, etc.)\ncan be linked to multiple tags from that tag group.\nIf a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tag Groups",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/tag-groups/{id}/": {
      "get": {
        "operationId": "get_tag_group",
        "summary": "Get Tag Group",
        "description": "Retrieve the tag group with the given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tag Groups",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_tag_group",
        "summary": "Update Tag Group",
        "description": "Update the tag group with the given tag group ID.\n\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tag Groups",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_group",
        "summary": "Delete Tag Group",
        "description": "Delete the tag group with the given tag group ID.\n\nAny tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tag Groups",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tags/{id}/relationships/flows/": {
      "get": {
        "operationId": "get_tag_relationships_flows",
        "summary": "Get Tag Relationships Flows",
        "description": "Returns the IDs of all flows associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagFlowRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:read",
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_relationships_flows",
        "summary": "Create Tag Relationships Flows",
        "description": "Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagFlowOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_relationships_flows",
        "summary": "Delete Tag Relationships Flows",
        "description": "Remove a tag's association with one or more flows.\n\n\nUse the request body to pass in the ID(s) of the flows(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`flows:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "flows:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagFlowOp"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/relationships/campaigns/": {
      "get": {
        "operationId": "get_tag_relationships_campaigns",
        "summary": "Get Tag Relationships Campaigns",
        "description": "Returns the IDs of all campaigns associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagCampaignRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:read",
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_relationships_campaigns",
        "summary": "Create Tag Relationships Campaigns",
        "description": "Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCampaignOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_relationships_campaigns",
        "summary": "Delete Tag Relationships Campaigns",
        "description": "Remove a tag's association with one or more campaigns.\n\n\nUse the request body to pass in the ID(s) of the campaign(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`campaigns:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "campaigns:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCampaignOp"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/relationships/lists/": {
      "get": {
        "operationId": "get_tag_relationships_lists",
        "summary": "Get Tag Relationships Lists",
        "description": "Returns the IDs of all lists associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagListRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:read",
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_relationships_lists",
        "summary": "Create Tag Relationships Lists",
        "description": "Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagListOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_relationships_lists",
        "summary": "Delete Tag Relationships Lists",
        "description": "Remove a tag's association with one or more lists.\n\n\nUse the request body to pass in the ID(s) of the list(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`list:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "list:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagListOp"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/relationships/segments/": {
      "get": {
        "operationId": "get_tag_relationships_segments",
        "summary": "Get Tag Relationships Segments",
        "description": "Returns the IDs of all segments associated with the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:read`\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagSegmentRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:read",
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_tag_relationships_segments",
        "summary": "Create Tag Relationships Segments",
        "description": "Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.\n\n\nUse the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_relationships_segments",
        "summary": "Delete Tag Relationships Segments",
        "description": "Remove a tag's association with one or more segments.\n\n\nUse the request body to pass in the ID(s) of the segments(s) whose association with the tag\nwill be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`segments:write`\n`tags:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "segments:write",
          "tags:write"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/relationships/tag-group/": {
      "get": {
        "operationId": "get_tag_relationships_tag_group",
        "summary": "Get Tag Relationships Tag Group",
        "description": "Returns the id of the tag group related to the given tag.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tag-groups/{id}/relationships/tags/": {
      "get": {
        "operationId": "get_tag_group_relationships_tags",
        "summary": "Get Tag Group Relationships Tags",
        "description": "Returns the tag IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Relationships",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tags/{id}/tag-group/": {
      "get": {
        "operationId": "get_tag_tag_group",
        "summary": "Get Tag Tag Group",
        "description": "Returns the tag group resource for a given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tags",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/tag-groups/{id}/tags/": {
      "get": {
        "operationId": "get_tag_group_tags",
        "summary": "Get Tag Group Tags",
        "description": "Return the tags for a given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`tags:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "tags:read"
        ],
        "tags": [
          "Tags"
        ],
        "x-klaviyo-subtag": "Tag Groups",
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/templates/": {
      "get": {
        "operationId": "get_templates",
        "summary": "Get Templates",
        "description": "Get all templates in an account.\n\nFilter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: `id`, `name`, `created`, `updated`\n\nReturns a maximum of 10 results per page.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`name`: `any`, `equals`<br>`created`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated`: `equals`, `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "-created",
                "id",
                "-id",
                "name",
                "-name",
                "updated",
                "-updated"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "post": {
        "operationId": "create_template",
        "summary": "Create Template",
        "description": "Create a new custom HTML template.\n\nIf there are 1,000 or more templates in an account, creation will fail as there is a limit of 1,000 templates\nthat can be created via the API.\n\nRequest specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "template:write"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/templates/{id}/": {
      "get": {
        "operationId": "get_template",
        "summary": "Get Template",
        "description": "Get a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of template",
            "schema": {
              "type": "string",
              "description": "The ID of template"
            },
            "in": "path"
          },
          {
            "name": "fields[template]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "editor_type",
                  "html",
                  "text",
                  "created",
                  "updated"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      },
      "patch": {
        "operationId": "update_template",
        "summary": "Update Template",
        "description": "Update a template with the given template ID. Does not currently update drag & drop templates.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of template",
            "schema": {
              "type": "string",
              "description": "The ID of template"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "template:write"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_template",
        "summary": "Delete Template",
        "description": "Delete a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of template",
            "schema": {
              "type": "string",
              "description": "The ID of template"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "template:write"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None"
      }
    },
    "/api/template-render/": {
      "post": {
        "operationId": "create_template_render",
        "summary": "Create Template Render",
        "description": "Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.\n\n**Request body parameters** (nested under `attributes`):\n\n* `return_fields`: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).\n\n* `context`: This is the context your email template will be rendered with. You must pass in a `context` object as a JSON object.\n\nEmail templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding `context` values are treated as `FALSE` and output nothing.\n\nEx. `{ \"name\" : \"George Washington\", \"state\" : \"VA\" }`<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`templates:read`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "templates:read"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRenderQuery"
              }
            }
          }
        }
      }
    },
    "/api/template-clone/": {
      "post": {
        "operationId": "create_template_clone",
        "summary": "Create Template Clone",
        "description": "Create a clone of a template with the given template ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`template:write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTemplateResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "template:write"
        ],
        "tags": [
          "Templates"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateCloneQuery"
              }
            }
          }
        }
      }
    },
    "/client/subscriptions/": {
      "post": {
        "operationId": "create_client_subscription",
        "summary": "Create Client Subscription",
        "description": "*Rate limits*:<br>Burst: `100/s`<br>Steady: `700/m`\n\n**Scopes:**\n`subscriptions:write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "subscriptions:write"
        ],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "100/s",
          "steady": "700/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteSubscriptionCreateQuery"
              }
            }
          },
          "description": "Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number\nattributes respectively. One of either email or phone_number must be provided. To create a subscription and consent\nrecord for only one channel but still include the other channel as a profile property the consent channel can\nbe provided as a top level attribute and the other channel can be included in the properties object."
        }
      }
    },
    "/client/push-tokens/": {
      "post": {
        "operationId": "create_client_push_token",
        "summary": "Create or Update Client Push Token",
        "description": "Create or update a push token.\n\nThis endpoint is designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)).\nYou must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenCreateQuery"
              }
            }
          }
        }
      }
    },
    "/client/push-token-unregister/": {
      "post": {
        "operationId": "unregister_client_push_token",
        "summary": "Unregister Client Push Token",
        "description": "Unregister a push token.\n\nThis endpoint is designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)).\nYou must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushTokenUnregisterQuery"
              }
            }
          }
        }
      }
    },
    "/client/events/": {
      "post": {
        "operationId": "create_client_event",
        "summary": "Create Client Event",
        "description": "Create a new event to track a profile's activity.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create events from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:write"
        ],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateQueryV2"
              }
            }
          }
        }
      }
    },
    "/client/profiles/": {
      "post": {
        "operationId": "create_client_profile",
        "summary": "Create or Update Client Profile",
        "description": "Create and update properties about a profile without tracking an associated event.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`profiles:write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "profiles:write"
        ],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnsiteProfileCreateQuery"
              }
            }
          }
        }
      }
    },
    "/client/event-bulk-create/": {
      "post": {
        "operationId": "bulk_create_client_events",
        "summary": "Bulk Create Client Events",
        "description": "Create new events to track a profile's activity.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only.\n\nAccepts a maximum of `1000` events per request.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`events:write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "events:write"
        ],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsBulkCreateQuery"
              }
            }
          }
        }
      }
    },
    "/client/back-in-stock-subscriptions/": {
      "post": {
        "operationId": "create_client_back_in_stock_subscription",
        "summary": "Create Client Back In Stock Subscription",
        "description": "Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.\n\nThis endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`\n\n**Scopes:**\n`catalogs:write`\n`profiles:write`",
        "parameters": [
          {
            "name": "company_id",
            "required": true,
            "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.",
            "schema": {
              "type": "string",
              "example": "PUBLIC_API_KEY",
              "description": "Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details."
            },
            "in": "query"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2023-09-15"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "x-klaviyo-scopes": [
          "catalogs:write",
          "profiles:write"
        ],
        "security": [],
        "tags": [
          "Client"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "350/s",
          "steady": "3500/m"
        },
        "x-klaviyo-pre-release": "None",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientBISSubscriptionCreateQuery"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CouponResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "10OFF",
                "description": "This is the id that is stored in an integration such as Shopify or Magento."
              },
              "description": {
                "type": "string",
                "example": "10% off for purchases over $50",
                "description": "A description of the coupon."
              }
            },
            "required": [
              "external_id"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CouponCodeResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99",
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01:T00:00:00Z",
                "description": "The datetime when this coupon code will expire. Can be used as an optional filter when getting coupon codes."
              },
              "status": {
                "type": "string",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "VERSION_NOT_ACTIVE"
                ],
                "description": "The current status of the coupon code.",
                "example": "UNASSIGNED"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "CatalogItemResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1",
                "description": "The ID of the catalog item in an external system."
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item is published."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogItemResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        }
      },
      "GetCatalogItemResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        }
      },
      "CatalogVariantResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The ID of the catalog item variant in an external system."
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "example": 2
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogVariantResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "item": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogVariantResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CatalogItemEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CatalogCategoryResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The ID of the catalog category in an external system."
              },
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogCategoryResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogCategoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "example": "/data",
            "default": "/data",
            "description": "A pointer to the source of the error in the request payload."
          }
        },
        "required": [
          "pointer"
        ]
      },
      "APIJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "e4eebb08-b055-4a6f-bb13-c8cb69c9eb94",
            "description": "Unique identifier for the error."
          },
          "code": {
            "type": "string",
            "example": "invalid",
            "description": "A code for classifying the error type."
          },
          "title": {
            "type": "string",
            "example": "Invalid input",
            "description": "A high-level message about the error."
          },
          "detail": {
            "type": "string",
            "example": "The payload provided in the request is invalid.",
            "description": "Specific details about the error."
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource",
            "description": "Additional information on the source of the error."
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "CouponCodeCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogCategoryItemListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                }
              }
            }
          }
        }
      },
      "GetCatalogItemCategoryListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                }
              }
            }
          }
        }
      },
      "EventResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "id": {
            "type": "string",
            "description": "The Event ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "timestamp": {
                "type": "integer",
                "description": "Event timestamp in seconds"
              },
              "event_properties": {
                "type": "object",
                "description": "Event properties, can include attribution data, identifiers and extra properties"
              },
              "datetime": {
                "type": "string",
                "description": "Event timestamp in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "uuid": {
                "type": "string",
                "description": "A unique identifier for the event, this can be used as a cursor in pagination"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetEventResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profile": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ProfileEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "metric": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/MetricEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetEventResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EventResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/ProfileEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "metric": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/MetricEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MetricResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "MetricResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "id": {
            "type": "string",
            "description": "The Metric ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric"
              },
              "created": {
                "type": "string",
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "integration": {
                "type": "object",
                "description": "The integration associated with the event"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetMetricResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricResponseObjectResource"
          }
        }
      },
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "89 E 42nd St",
            "description": "First line of street address"
          },
          "address2": {
            "type": "string",
            "example": "1st floor",
            "description": "Second line of street address"
          },
          "city": {
            "type": "string",
            "example": "New York",
            "description": "City name"
          },
          "country": {
            "type": "string",
            "example": "United States",
            "description": "Country name"
          },
          "latitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "40.7128",
            "description": "Latitude coordinate. We recommend providing a precision of four decimal places."
          },
          "longitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "example": "74.0060",
            "description": "Longitude coordinate. We recommend providing a precision of four decimal places."
          },
          "region": {
            "type": "string",
            "example": "NY",
            "description": "Region within a country, such as state or province"
          },
          "zip": {
            "type": "string",
            "example": "10017",
            "description": "Zip code"
          },
          "timezone": {
            "type": "string",
            "example": "America/New_York",
            "description": "Time zone name. We recommend using time zones from the IANA Time Zone Database."
          }
        }
      },
      "EmailMarketingSuppression": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "example": "HARD_BOUNCE",
            "description": "The reason the profile was suppressed from the list."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketingListSuppression": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "The ID of list to which the suppression applies."
          },
          "reason": {
            "type": "string",
            "example": "USER_SUPPRESSED",
            "description": "The reason the profile was suppressed from the list."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when the profile was suppressed from the list, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          }
        },
        "required": [
          "list_id",
          "reason",
          "timestamp"
        ]
      },
      "EmailMarketing": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "string",
            "example": "SUBSCRIBED",
            "description": "The consent status for email marketing."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when consent record or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          },
          "method": {
            "type": "string",
            "example": "PREFERENCE_PAGE",
            "description": "The method by which the profile was subscribed to email marketing."
          },
          "method_detail": {
            "type": "string",
            "example": "mydomain.com/signup",
            "description": "Additional details about the method by which the profile was subscribed to SMS marketing. This may be empty if no details were provided."
          },
          "custom_method_detail": {
            "type": "string",
            "example": "marketing drive",
            "description": "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided."
          },
          "double_optin": {
            "type": "boolean",
            "example": "True",
            "description": "Whether the profile was subscribed to email marketing using a double opt-in."
          },
          "suppressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingSuppression"
            },
            "description": "The global email marketing suppressions for this profile."
          },
          "list_suppressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailMarketingListSuppression"
            },
            "description": "The list suppressions for this profile."
          }
        },
        "required": [
          "consent",
          "method"
        ]
      },
      "EmailChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/EmailMarketing",
            "description": "The email marketing subscription."
          }
        }
      },
      "SMSMarketing": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "string",
            "example": "SUBSCRIBED",
            "description": "The consent status for SMS marketing."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-21T20:07:38+00:00",
            "description": "The timestamp when consent record or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
          },
          "method": {
            "type": "string",
            "example": "TEXT",
            "description": "The method by which the profile was subscribed to SMS marketing."
          },
          "method_detail": {
            "type": "string",
            "example": "JOIN",
            "description": "Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided."
          }
        },
        "required": [
          "consent",
          "timestamp",
          "method",
          "method_detail"
        ]
      },
      "SMSChannel": {
        "type": "object",
        "properties": {
          "marketing": {
            "$ref": "#/components/schemas/SMSMarketing",
            "description": "The SMS marketing subscription."
          }
        }
      },
      "Subscriptions": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/EmailChannel",
            "description": "The email channel subscription."
          },
          "sms": {
            "$ref": "#/components/schemas/SMSChannel",
            "description": "The SMS channel subscription."
          }
        }
      },
      "PredictiveAnalytics": {
        "type": "object",
        "properties": {
          "historic_clv": {
            "type": "number",
            "example": 93.87,
            "description": "Total value of all historically placed orders"
          },
          "predicted_clv": {
            "type": "number",
            "example": 27.24,
            "description": "Predicted value of all placed orders in the next 365 days"
          },
          "total_clv": {
            "type": "number",
            "example": 121.11,
            "description": "Sum of historic and predicted CLV"
          },
          "historic_number_of_orders": {
            "type": "integer",
            "example": 2,
            "description": "Number of already placed orders"
          },
          "predicted_number_of_orders": {
            "type": "number",
            "example": 0.54,
            "description": "Predicted number of placed orders in the next 365 days"
          },
          "average_days_between_orders": {
            "type": "number",
            "example": 189,
            "description": "Average number of days between orders (None if only one order has been placed)"
          },
          "average_order_value": {
            "type": "number",
            "example": 46.94,
            "description": "Average value of placed orders"
          },
          "churn_probability": {
            "type": "number",
            "example": 0.89,
            "description": "Probability the customer has churned"
          },
          "expected_date_of_next_order": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00",
            "description": "Expected date of next order, as calculated at the time of their most recent order"
          }
        }
      },
      "ProfileResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "subscriptions": {
                "$ref": "#/components/schemas/Subscriptions"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetProfileResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/SegmentEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ProfileEnum"
                  },
                  "attributes": {
                    "properties": {
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "GetEventMetricsRelationshipListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetEventProfilesRelationshipListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetMetricResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "ListListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetListListResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ProfileEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        }
      },
      "ListRetrieveResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetListRetrieveResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ListRetrieveResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ProfileEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ListEnum"
                  },
                  "attributes": {
                    "properties": {
                      "profile_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        }
      },
      "GetListTagRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TagResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagGroupEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "lists": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ListEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/SegmentEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "campaigns": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CampaignEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flows": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetListRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetProfileResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ListEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/SegmentEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "SegmentListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetSegmentListResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ProfileEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        }
      },
      "SegmentRetrieveResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetSegmentRetrieveResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SegmentRetrieveResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "profiles": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ProfileEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/SegmentEnum"
                  },
                  "attributes": {
                    "properties": {
                      "profile_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponseObjectResource"
            }
          }
        }
      },
      "GetSegmentTagRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetSegmentRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetProfileResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProfileResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "lists": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ProfileEnum"
                    },
                    "attributes": {
                      "properties": {
                        "predictive_analytics": {
                          "$ref": "#/components/schemas/PredictiveAnalytics"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetProfileResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "lists": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/SegmentEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/ProfileEnum"
                  },
                  "attributes": {
                    "properties": {
                      "predictive_analytics": {
                        "$ref": "#/components/schemas/PredictiveAnalytics"
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "ListResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetListResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ListResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ProfileEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetProfileListRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SegmentResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Repeat Purchasers",
                "description": "A helpful name to label the segment"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetSegmentResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SegmentResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ProfileEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetProfileSegmentRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "FlowResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "trigger_type": {
                "type": "string",
                "enum": [
                  "Added to List",
                  "Date Based",
                  "Metric",
                  "Price Drop",
                  "Unconfigured"
                ],
                "description": "Corresponds to the object which triggered the flow."
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetFlowResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-actions": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowActionEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetFlowResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowActionEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "FlowActionResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowActionEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetFlowActionResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flow-messages": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowMessageEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetFlowFlowActionRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowActionEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetFlowTagRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetFlowActionResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowMessageEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetFlowResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-actions": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowActionEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "GetFlowActionFlowRelationshipResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_label": {
            "type": "string"
          },
          "reply_to_email": {
            "type": "string"
          },
          "cc_email": {
            "type": "string"
          },
          "bcc_email": {
            "type": "string"
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_label"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media_url": {
            "type": "string"
          }
        },
        "required": [
          "body"
        ]
      },
      "FlowMessageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowMessageEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetFlowMessageResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "flow-action": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowActionEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "template": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TemplateEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetFlowActionFlowMessageRelationshipResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowMessageEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetFlowMessageResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow-action": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowActionEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "template": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FlowActionResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetFlowActionResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowActionResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "flow": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/FlowEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flow-messages": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowMessageEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "GetFlowMessageFlowActionRelationshipResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowActionEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetFlowMessageTemplateRelationshipResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "TemplateResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor"
              },
              "html": {
                "type": "string",
                "description": "The rendered HTML of the template"
              },
              "text": {
                "type": "string",
                "description": "The template plain_text"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              }
            },
            "required": [
              "name",
              "editor_type",
              "html"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateResponseObjectResource"
          }
        }
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y6nRLr"
            ],
            "description": "A list of included audiences"
          },
          "excluded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UTd5ui"
            ],
            "description": "An optional list of excluded audiences"
          }
        }
      },
      "EmailSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "description": "Use smart sending. Defaults to True"
          }
        }
      },
      "SMSSendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "description": "Use smart sending. Defaults to True"
          }
        }
      },
      "UTMParamsSubObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "utm_medium",
            "description": "Name of the UTM param"
          },
          "value": {
            "type": "string",
            "example": "campaign",
            "description": "Value of the UTM param. Can be templated data."
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_add_utm": {
            "type": "boolean",
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          },
          "is_tracking_clicks": {
            "type": "boolean",
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults."
          },
          "is_tracking_opens": {
            "type": "boolean",
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults."
          }
        }
      },
      "SMSTrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_add_utm": {
            "type": "boolean",
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00",
            "description": "The time to send at"
          },
          "is_local": {
            "type": "boolean",
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False."
          },
          "send_past_recipients_immediately": {
            "type": "boolean",
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False."
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The time to send at"
          },
          "throttle_percentage": {
            "type": "integer",
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "STOScheduleOptions": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The day to send on"
          }
        },
        "required": [
          "date"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "example": "static",
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate', 'smart_send_time']"
          },
          "options_static": {
            "$ref": "#/components/schemas/StaticScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method."
          },
          "options_throttled": {
            "$ref": "#/components/schemas/ThrottledScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method."
          },
          "options_sto": {
            "$ref": "#/components/schemas/STOScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'smart_send_time' method."
          }
        },
        "required": [
          "method"
        ]
      },
      "CampaignResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "type": "string",
            "description": "The campaign ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The campaign name"
              },
              "status": {
                "type": "string",
                "description": "The current status of the campaign"
              },
              "archived": {
                "type": "boolean",
                "description": "Whether the campaign has been archived or not"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ],
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ],
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign was created"
              },
              "scheduled_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign was scheduled for future sending"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign was last updated by a user or the system"
              },
              "send_time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
              }
            },
            "required": [
              "name",
              "status",
              "archived",
              "audiences",
              "send_options",
              "tracking_options",
              "send_strategy",
              "created_at",
              "scheduled_at",
              "updated_at",
              "send_time"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCampaignResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "campaign-messages": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CampaignMessageEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetCampaignResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign-messages": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignMessageEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "EmailContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Buy our product!",
            "description": "The subject of the message"
          },
          "preview_text": {
            "type": "string",
            "example": "My preview text",
            "description": "Preview text associated with the message"
          },
          "from_email": {
            "type": "string",
            "example": "store@my-company.com",
            "description": "The email the message should be sent from"
          },
          "from_label": {
            "type": "string",
            "example": "My Company",
            "description": "The label associated with the from_email"
          },
          "reply_to_email": {
            "type": "string",
            "example": "reply-to@my-company.com",
            "description": "Optional Reply-To email address"
          },
          "cc_email": {
            "type": "string",
            "example": "cc@my-company.com",
            "description": "Optional CC email address"
          },
          "bcc_email": {
            "type": "string",
            "example": "bcc@my-company.com",
            "description": "Optional BCC email address"
          }
        }
      },
      "SMSContentSubObject": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "example": "My preview sms",
            "description": "The message body"
          },
          "media_url": {
            "type": "string",
            "description": "URL for included media"
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-11-08T00:00:00",
            "description": "The datetime that the message is to be sent"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether that datetime is to be a local datetime for the recipient"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "RenderOptionsSubObject": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_org_prefix": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_info_link": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        }
      },
      "CampaignMessageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "type": "string",
            "description": "The message ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "The label or name on the message"
              },
              "channel": {
                "type": "string",
                "description": "The channel the message is to be sent on"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObject"
                  }
                ],
                "description": "Additional attributes relating to the content of the message"
              },
              "send_times": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SendTimeSubObject"
                },
                "description": "The list of appropriate Send Time Sub-objects associated with the message"
              },
              "render_options": {
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "description": "Additional options for rendering the message"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the message was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The datetime when the message was last updated"
              }
            },
            "required": [
              "label",
              "channel",
              "content"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCampaignMessageResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CampaignEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "template": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "GetCampaignMessageCampaignRelationshipListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetCampaignMessageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/CampaignEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "template": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TemplateEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "GetCampaignMessageTemplateRelationshipListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetCampaignTagRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetCampaignMessagesRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignMessageEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetCampaignMessageResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignMessageResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "campaign": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "template": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TemplateEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CampaignResponseObjectResource"
                },
                {
                  "$ref": "#/components/schemas/TemplateResponseObjectResource"
                }
              ]
            }
          }
        }
      },
      "CampaignSendJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the campaign to send"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "The status of the send job"
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCampaignSendJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobResponseObjectResource"
          }
        }
      },
      "CampaignRecipientEstimationJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
          },
          "id": {
            "type": "string",
            "example": "01GMRWDSA0ARTAKE1SFX8JGXAY",
            "description": "The ID of the campaign used for estimating recipients"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "The status of the recipient estimation job"
              }
            },
            "required": [
              "status"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCampaignRecipientEstimationJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobResponseObjectResource"
          }
        }
      },
      "CampaignRecipientEstimationResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the campaign for which to get the estimated number of recipients"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "estimated_recipient_count": {
                "type": "integer",
                "description": "The estimated number of unique recipients the campaign will send to"
              }
            },
            "required": [
              "estimated_recipient_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCampaignRecipientEstimationResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationResponseObjectResource"
          }
        }
      },
      "GetTemplateResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "CatalogItemCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogItemCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogItemCreateJobResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
            }
          }
        }
      },
      "CatalogItemUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogItemUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogItemUpdateJobResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogItemResponseObjectResource"
            }
          }
        }
      },
      "CatalogItemDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogItemDeleteJobResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogItemEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogItemDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogItemDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogItemEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CatalogVariantCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogVariantCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogVariantCreateJobResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        }
      },
      "CatalogVariantUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogVariantUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogVariantUpdateJobResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogVariantResponseObjectResource"
            }
          }
        }
      },
      "CatalogVariantDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogVariantDeleteJobResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "variants": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogVariantEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogVariantDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogVariantDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "variants": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogVariantEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CatalogCategoryCreateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogCategoryCreateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogCategoryCreateJobResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryCreateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
            }
          }
        }
      },
      "CatalogCategoryUpdateJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogCategoryUpdateJobResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryUpdateJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogCategoryResponseObjectResource"
            }
          }
        }
      },
      "CatalogCategoryDeleteJobResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "string",
                "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
              },
              "status": {
                "type": "string",
                "enum": [
                  "cancelled",
                  "complete",
                  "processing",
                  "queued"
                ],
                "description": "Status of the asynchronous job.",
                "example": "processing"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "total_count": {
                "type": "integer",
                "example": 10,
                "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
              },
              "completed_count": {
                "type": "integer",
                "example": 9,
                "description": "The total number of operations that have been completed by the job."
              },
              "failed_count": {
                "type": "integer",
                "example": 1,
                "description": "The total number of operations that have failed as part of the job."
              },
              "completed_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              },
              "errors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/APIJobErrorPayload"
                },
                "description": "Array of errors encountered during the processing of the job."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
              }
            },
            "required": [
              "job_id",
              "status",
              "created_at",
              "total_count"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetCatalogCategoryDeleteJobResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "categories": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CatalogCategoryEnum"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CatalogCategoryDeleteJobResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "categories": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "GetTagResponseCollectionCompoundDocument": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tag-group": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagGroupEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "lists": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/ListEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "segments": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/SegmentEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "campaigns": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/CampaignEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        },
                        "flows": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/FlowEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupResponseObjectResource"
            }
          }
        }
      },
      "GetTagResponseCompoundDocument": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tag-group": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/TagGroupEnum"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "lists": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/ListEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "segments": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/SegmentEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "campaigns": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/CampaignEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      },
                      "flows": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/FlowEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupResponseObjectResource"
            }
          }
        }
      },
      "TagGroupResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean",
                "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
              },
              "default": {
                "type": "boolean",
                "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
              }
            },
            "required": [
              "name",
              "exclusive",
              "default"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetTagGroupResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TagGroupResponseObjectResource"
                },
                {
                  "properties": {
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "object",
                          "required": [
                            "data"
                          ],
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "id"
                                ],
                                "properties": {
                                  "type": {
                                    "$ref": "#/components/schemas/TagEnum"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "links": {
                              "$ref": "#/components/schemas/RelationshipLinks"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagGroupResponseObjectResource"
              },
              {
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "object",
                        "required": [
                          "data"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "id"
                              ],
                              "properties": {
                                "type": {
                                  "$ref": "#/components/schemas/TagEnum"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "links": {
                            "$ref": "#/components/schemas/RelationshipLinks"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "GetTagFlowRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetTagCampaignRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetTagListRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetTagSegmentRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetTagTagGroupRelationshipsResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
              }
            }
          }
        }
      },
      "GetTagGroupTagRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TagEnum"
                },
                "id": {
                  "type": "string",
                  "example": [
                    "abcd1234-ef56-gh78-ij90-abcdef123456",
                    "klmn1234-op56-qr78-st90-klmnop123456"
                  ]
                }
              }
            }
          }
        }
      },
      "StreetAddress": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string",
            "example": "125 Summer Street"
          },
          "address2": {
            "type": "string",
            "example": "5th Floor"
          },
          "city": {
            "type": "string",
            "example": "Boston"
          },
          "region": {
            "type": "string",
            "example": "MA",
            "description": "State, province, or region."
          },
          "country": {
            "type": "string",
            "example": "US",
            "description": "Two-letter [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)"
          },
          "zip": {
            "type": "string",
            "example": "04323"
          }
        },
        "required": [
          "address1",
          "address2",
          "city",
          "region",
          "country",
          "zip"
        ]
      },
      "ContactInformation": {
        "type": "object",
        "properties": {
          "default_sender_name": {
            "type": "string",
            "example": "Klaviyo Demo",
            "description": "This field is used to auto-populate the default sender name on flow and campaign emails."
          },
          "default_sender_email": {
            "type": "string",
            "example": "contact@klaviyo-demo.com",
            "description": "This field is used to auto-populate the default sender email address on flow and campaign emails."
          },
          "website_url": {
            "type": "string",
            "example": "https://www.klaviyo.com"
          },
          "organization_name": {
            "type": "string",
            "example": "Klaviyo Demo"
          },
          "street_address": {
            "$ref": "#/components/schemas/StreetAddress",
            "description": "Street address for your organization."
          }
        },
        "required": [
          "default_sender_name",
          "default_sender_email",
          "website_url",
          "organization_name",
          "street_address"
        ]
      },
      "AccountResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AccountEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "contact_information": {
                "$ref": "#/components/schemas/ContactInformation",
                "description": "Contact information for the account. This is used in email footers by default to comply with the CAN-SPAM act."
              },
              "industry": {
                "type": "string",
                "example": "Software / SaaS",
                "description": "The kind of business and/or types of goods that the business sells. This is leveraged in Klaviyo analytics and guidance."
              },
              "timezone": {
                "type": "string",
                "example": "US/Eastern",
                "description": "The account's timezone is used when displaying dates and times. This is an IANA timezone. See [the full list here ](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)."
              },
              "preferred_currency": {
                "type": "string",
                "example": "USD",
                "description": "The preferred currency for the account. This is the currency used for currency-based metrics in dashboards, analytics, coupons, and templates."
              },
              "public_api_key": {
                "type": "string",
                "example": "AbC123",
                "description": "The Public API Key can be used for client-side API calls. [More info here](https://developers.klaviyo.com/en/docs/retrieve_api_credentials)."
              }
            },
            "required": [
              "contact_information",
              "industry",
              "timezone",
              "preferred_currency",
              "public_api_key"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetAccountResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetAccountResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountResponseObjectResource"
          }
        }
      },
      "ImageResponseObjectResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "type": "string",
            "example": "7",
            "description": "The ID of the image"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "hidden": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "image_url",
              "format",
              "size",
              "hidden"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/ObjectLinks"
          }
        }
      },
      "GetImageResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageResponseObjectResource"
            }
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          }
        }
      },
      "GetImageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageResponseObjectResource"
          }
        }
      },
      "CouponCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "10OFF",
                "description": "This is the id that is stored in an integration such as Shopify or Magento."
              },
              "description": {
                "type": "string",
                "example": "10% off for purchases over $50",
                "description": "A description of the coupon."
              }
            },
            "required": [
              "external_id"
            ]
          }
        }
      },
      "CouponCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCreateQueryResourceObject"
          }
        }
      },
      "CouponCodeCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "unique_code": {
                "type": "string",
                "example": "ASD325FHK324UJDOI2M3JNES99",
                "description": "This is a unique string that will be or is assigned to each customer/profile and is associated with a coupon."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01:T00:00:00Z",
                "description": "The datetime when this coupon code will expire. Can be used as an optional filter when getting coupon codes."
              }
            },
            "required": [
              "unique_code",
              "expires_at"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "coupon": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CouponEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "10OFF"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CouponCodeCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
          }
        }
      },
      "CatalogItemCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1",
                "description": "The ID of the catalog item in an external system."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "example": "$custom",
                "default": "$custom"
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true,
                "description": "Boolean value indicating whether the catalog item is published."
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogItemResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemEnum"
              },
              "id": {
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1",
                    "description": "The ID of the catalog item in an external system."
                  },
                  "title": {
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample)",
                    "description": "The title of the catalog item."
                  },
                  "description": {
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "description": "A description of the catalog item."
                  },
                  "price": {
                    "type": "number",
                    "example": 42.0,
                    "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
                  },
                  "url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of the catalog item on your website."
                  },
                  "image_full_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "description": "URL pointing to the location of a full image of the catalog item."
                  },
                  "image_thumbnail_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of an image thumbnail of the catalog item"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "description": "List of URLs pointing to the locations of images of the catalog item."
                  },
                  "custom_metadata": {
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
                  },
                  "published": {
                    "type": "boolean",
                    "example": true,
                    "description": "Boolean value indicating whether the catalog item is published."
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogVariantCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The ID of the catalog item variant in an external system."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "example": "$custom",
                "default": "$custom"
              },
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "example": 25.0
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "item": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogItemEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogVariantResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantEnum"
              },
              "id": {
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                    "description": "The ID of the catalog item variant in an external system."
                  },
                  "title": {
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample) Variant Medium",
                    "description": "The title of the catalog item variant."
                  },
                  "description": {
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "description": "A description of the catalog item variant."
                  },
                  "sku": {
                    "type": "string",
                    "example": "OBS-MD",
                    "description": "The SKU of the catalog item variant."
                  },
                  "inventory_policy": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                    "example": 2
                  },
                  "inventory_quantity": {
                    "type": "number",
                    "example": 25.0,
                    "description": "The quantity of the catalog item variant currently in stock."
                  },
                  "price": {
                    "type": "number",
                    "example": 42.0,
                    "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
                  },
                  "url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of the catalog item variant on your website."
                  },
                  "image_full_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "description": "URL pointing to the location of a full image of the catalog item variant."
                  },
                  "image_thumbnail_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "description": "List of URLs pointing to the locations of images of the catalog item variant."
                  },
                  "custom_metadata": {
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
                  },
                  "published": {
                    "type": "boolean",
                    "example": true,
                    "description": "Boolean value indicating whether the catalog item variant is published."
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CatalogItemEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string",
                "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The ID of the catalog category in an external system."
              },
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently only \"$custom\" is supported.",
                "example": "$custom",
                "default": "$custom"
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default",
                "description": "The type of catalog. Currently only \"$default\" is supported."
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogCategoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryEnum"
              },
              "id": {
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                    "description": "The ID of the catalog category in an external system."
                  },
                  "name": {
                    "type": "string",
                    "example": "Sample Data Category Apparel",
                    "description": "The name of the catalog category."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CouponCodeCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "coupon-codes": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CouponCodeCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of coupon codes to create."
              }
            },
            "required": [
              "coupon-codes"
            ]
          }
        }
      },
      "CouponCodeCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeCreateJobCreateQueryResourceObject"
          }
        }
      },
      "CatalogCategoryItemOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogItemEnum"
                },
                "id": {
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                }
              }
            }
          }
        }
      },
      "CatalogItemCategoryOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CatalogCategoryEnum"
                },
                "id": {
                  "type": "string",
                  "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                }
              }
            }
          }
        }
      },
      "ProfileIdentifierDTOResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ServerBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ],
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s)."
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "example": {
                  "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "email": "sarah.mason@klaviyo-demo.com",
                  "phone_number": "+15005550006",
                  "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                }
              }
            },
            "required": [
              "channels"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ServerBISSubscriptionCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServerBISSubscriptionCreateQueryResourceObject"
          }
        }
      },
      "_MetricCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricEnum"
          },
          "attributes": {
            "properties": {
              "name": {
                "type": "string",
                "example": "Viewed Product",
                "description": "Name of the event. Must be less than 128 characters."
              },
              "service": {
                "type": "string",
                "description": "This is for advanced usage. For api requests, this should use the default, which is set to api."
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ProfileMetaPatchProperties": {
        "type": "object",
        "properties": {
          "append": {
            "type": "object",
            "example": {
              "skus": "92538"
            },
            "description": "Append a simple value or values to this property array"
          },
          "unappend": {
            "type": "object",
            "example": {
              "skus": "40571"
            },
            "description": "Remove a simple value or values from this property array"
          },
          "unset": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "example": "skus",
            "description": "Remove a key or keys (and their values) completely from properties"
          }
        }
      },
      "OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "$ref": "#/components/schemas/ProfileMetaPatchProperties",
            "example": {
              "append": {
                "skus": [
                  "92538",
                  "40571"
                ]
              }
            },
            "description": "Specify one or more patch operations to apply to existing property data"
          }
        }
      },
      "OnsiteProfileCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/OnsiteProfileMeta"
          }
        }
      },
      "EventCreateQueryV2ResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels."
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future."
              },
              "value": {
                "type": "number",
                "example": 9.99,
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase."
              },
              "unique_id": {
                "type": "string",
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second."
              },
              "metric": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/_MetricCreateQueryResourceObject"
                  }
                }
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "properties",
              "metric",
              "profile"
            ]
          }
        }
      },
      "EventCreateQueryV2": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryV2ResourceObject"
          }
        }
      },
      "MetricAggregateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MetricAggregateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "type": "string",
                "example": "0rG4eQ",
                "description": "The metric ID used in the aggregation."
              },
              "page_cursor": {
                "type": "string",
                "description": "Optional pagination cursor to iterate over large result sets"
              },
              "measurements": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": "count",
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`"
              },
              "interval": {
                "type": "string",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ],
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "example": "day",
                "default": "day"
              },
              "page_size": {
                "type": "integer",
                "example": 500,
                "default": 500,
                "description": "Alter the maximum number of returned rows in a single page of aggregation results"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "example": "$message",
                "description": "Optional attribute(s) used for partitioning by the aggregation function"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              },
              "filter": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ],
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field."
              },
              "timezone": {
                "type": "string",
                "example": "America/New_York",
                "default": "UTC",
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive."
              },
              "sort": {
                "type": "string",
                "enum": [
                  "$attributed_channel",
                  "-$attributed_channel",
                  "$attributed_flow",
                  "-$attributed_flow",
                  "$attributed_message",
                  "-$attributed_message",
                  "$attributed_variation",
                  "-$attributed_variation",
                  "$campaign_channel",
                  "-$campaign_channel",
                  "$flow",
                  "-$flow",
                  "$flow_channel",
                  "-$flow_channel",
                  "$message",
                  "-$message",
                  "$message_send_cohort",
                  "-$message_send_cohort",
                  "$variation",
                  "-$variation",
                  "$variation_send_cohort",
                  "-$variation_send_cohort",
                  "Bounce Type",
                  "-Bounce Type",
                  "Campaign Name",
                  "-Campaign Name",
                  "Client Canonical",
                  "-Client Canonical",
                  "Client Name",
                  "-Client Name",
                  "Client Type",
                  "-Client Type",
                  "Email Domain",
                  "-Email Domain",
                  "Failure Source",
                  "-Failure Source",
                  "Failure Type",
                  "-Failure Type",
                  "From Number",
                  "-From Number",
                  "From Phone Region",
                  "-From Phone Region",
                  "List",
                  "-List",
                  "Message Name",
                  "-Message Name",
                  "Message Type",
                  "-Message Type",
                  "Method",
                  "-Method",
                  "Subject",
                  "-Subject",
                  "To Number",
                  "-To Number",
                  "To Phone Region",
                  "-To Phone Region",
                  "URL",
                  "-URL",
                  "count",
                  "-count",
                  "form_id",
                  "-form_id",
                  "sum_value",
                  "-sum_value",
                  "unique",
                  "-unique"
                ],
                "description": "Provide a sort key (e.g. -$message)"
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "filter"
            ]
          }
        }
      },
      "MetricAggregateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryResourceObject"
          }
        }
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dimensions associated with this set of measurements"
          },
          "measurements": {
            "type": "object",
            "description": "Dictionary of measurement_key, values"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "PostMetricAggregateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/MetricAggregateEnum"
              },
              "id": {
                "type": "string",
                "description": "Ephemeral ID associated with the aggregation query"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "dates": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": "The dates of the query range"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MetricAggregateRowDTO"
                    },
                    "description": "Aggregation result data"
                  }
                },
                "required": [
                  "dates",
                  "data"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "ListCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryResourceObject"
          }
        }
      },
      "PostListCreateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ListEnum"
              },
              "id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Newsletter",
                    "description": "A helpful name to label the list"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "ListMembersAddQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ProfileCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          }
        }
      },
      "ProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryResourceObject"
          }
        }
      },
      "PostProfileResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "description": "Individual's email address"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+15005550006",
                    "description": "Individual's phone number in E.164 format"
                  },
                  "external_id": {
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                    "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sarah",
                    "description": "Individual's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Mason",
                    "description": "Individual's last name"
                  },
                  "organization": {
                    "type": "string",
                    "example": "Klaviyo",
                    "description": "Name of the company or organization within the company for whom the individual works"
                  },
                  "title": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Individual's job title"
                  },
                  "image": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "description": "URL pointing to the location of a profile image"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "last_event_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                  },
                  "subscriptions": {
                    "$ref": "#/components/schemas/Subscriptions"
                  },
                  "predictive_analytics": {
                    "$ref": "#/components/schemas/PredictiveAnalytics"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "SMSContentSubObjectCreate": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "example": "My preview sms",
            "description": "The message body"
          }
        }
      },
      "CampaignMessageCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "attributes": {
            "properties": {
              "channel": {
                "type": "string",
                "example": "email",
                "description": "The channel the message is to be sent on (email or sms, for example)"
              },
              "label": {
                "type": "string",
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ],
                "description": "Additional attributes relating to the content of the message"
              },
              "render_options": {
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "description": "Additional options for rendering the message"
              }
            },
            "required": [
              "channel"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "CampaignCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy."
              },
              "send_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ],
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ],
                "description": "The tracking options associated with the campaign"
              },
              "campaign-messages": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CampaignMessageCreateQueryResourceObject"
                    }
                  }
                },
                "description": "The message(s) associated with the campaign"
              }
            },
            "required": [
              "name",
              "audiences",
              "send_strategy",
              "campaign-messages"
            ]
          }
        }
      },
      "CampaignCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryResourceObject"
          }
        }
      },
      "PostCampaignResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "type": "string",
                "description": "The campaign ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The campaign name"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the campaign"
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the campaign has been archived or not"
                  },
                  "audiences": {
                    "$ref": "#/components/schemas/AudiencesSubObject",
                    "description": "The audiences to be included and/or excluded from the campaign"
                  },
                  "send_options": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                      }
                    ],
                    "description": "Options to use when sending a campaign"
                  },
                  "tracking_options": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                      }
                    ],
                    "description": "The tracking options associated with the campaign"
                  },
                  "send_strategy": {
                    "$ref": "#/components/schemas/SendStrategySubObject",
                    "description": "The send strategy the campaign will send with"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign was created"
                  },
                  "scheduled_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign was scheduled for future sending"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign was last updated by a user or the system"
                  },
                  "send_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign-messages": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CampaignCloneQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The campaign ID to be cloned"
              },
              "new_name": {
                "type": "string",
                "example": "My cloned campaign's new name",
                "description": "The name for the new cloned campaign"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryResourceObject"
          }
        }
      },
      "CampaignMessageAssignTemplateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The message ID to be assigned to"
              }
            },
            "required": [
              "id"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "template": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TemplateEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "RipRmi"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryResourceObject"
          }
        }
      },
      "PostCampaignMessageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignMessageEnum"
              },
              "id": {
                "type": "string",
                "description": "The message ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The label or name on the message"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The channel the message is to be sent on"
                  },
                  "content": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailContentSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSContentSubObject"
                      }
                    ],
                    "description": "Additional attributes relating to the content of the message"
                  },
                  "send_times": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "description": "The list of appropriate Send Time Sub-objects associated with the message"
                  },
                  "render_options": {
                    "$ref": "#/components/schemas/RenderOptionsSubObject",
                    "description": "Additional options for rendering the message"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was last updated"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CampaignEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "template": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TemplateEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CampaignSendJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryResourceObject"
          }
        }
      },
      "PostCampaignSendJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignSendJobEnum"
              },
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The status of the send job"
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CampaignRecipientEstimationJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the campaign to perform recipient estimation"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignRecipientEstimationJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignRecipientEstimationJobCreateQueryResourceObject"
          }
        }
      },
      "PostCampaignRecipientEstimationJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignRecipientEstimationJobEnum"
              },
              "id": {
                "type": "string",
                "example": "01GMRWDSA0ARTAKE1SFX8JGXAY",
                "description": "The ID of the campaign used for estimating recipients"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "The status of the recipient estimation job"
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "TemplateCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "Restricted to CODE"
              },
              "html": {
                "type": "string",
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        ",
                "description": "The HTML contents of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext version of the template"
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        }
      },
      "TemplateCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryResourceObject"
          }
        }
      },
      "PostTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the template"
                  },
                  "editor_type": {
                    "type": "string",
                    "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor"
                  },
                  "html": {
                    "type": "string",
                    "description": "The rendered HTML of the template"
                  },
                  "text": {
                    "type": "string",
                    "description": "The template plain_text"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "TemplateRenderQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "context": {
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                },
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/4408802648731) for more details."
              }
            },
            "required": [
              "id",
              "context"
            ]
          }
        }
      },
      "TemplateRenderQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryResourceObject"
          }
        }
      },
      "TemplateCloneQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template to be cloned"
              },
              "name": {
                "type": "string",
                "example": "Clone of Monthly Newsletter Template",
                "description": "The name of the template"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "TemplateCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryResourceObject"
          }
        }
      },
      "CatalogItemCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog items to create."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogItemCreateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkCreateJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogItemUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog items to update."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogItemUpdateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkUpdateJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogItemDeleteQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogItemDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogItemDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog items to delete."
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogItemDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemBulkDeleteJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogVariantCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog variants to create."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogVariantCreateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkCreateJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogVariantUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample) Variant Medium",
                "description": "The title of the catalog item variant."
              },
              "description": {
                "type": "string",
                "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                "description": "A description of the catalog item variant."
              },
              "sku": {
                "type": "string",
                "example": "OBS-MD",
                "description": "The SKU of the catalog item variant."
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                "example": 2
              },
              "inventory_quantity": {
                "type": "number",
                "example": 25.0,
                "description": "The quantity of the catalog item variant currently in stock."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item variant on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item variant."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item variant."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item variant is published."
              }
            }
          }
        }
      },
      "CatalogVariantUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog variants to update."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogVariantUpdateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkUpdateJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogVariantDeleteQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
            "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogVariantDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogVariantDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog variants to delete."
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogVariantDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantBulkDeleteJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogCategoryCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryCreateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog categories to create."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogCategoryCreateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkCreateJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog categories to update."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogCategoryUpdateJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkUpdateJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogCategoryDeleteQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CatalogCategoryDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "Array of catalog categories to delete."
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryResourceObject"
          }
        }
      },
      "PostCatalogCategoryDeleteJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryBulkDeleteJobEnum"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "Unique identifier for retrieving the job. Generated by Klaviyo."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "cancelled",
                      "complete",
                      "processing",
                      "queued"
                    ],
                    "description": "Status of the asynchronous job.",
                    "example": "processing"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "total_count": {
                    "type": "integer",
                    "example": 10,
                    "description": "The total number of operations to be processed by the job. See `completed_count` for the job's current progress."
                  },
                  "completed_count": {
                    "type": "integer",
                    "example": 9,
                    "description": "The total number of operations that have been completed by the job."
                  },
                  "failed_count": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of operations that have failed as part of the job."
                  },
                  "completed_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/APIJobErrorPayload"
                    },
                    "description": "Array of errors encountered during the processing of the job."
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                },
                "required": [
                  "job_id",
                  "status",
                  "created_at",
                  "total_count"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogCategoryEnum"
                            },
                            "id": {
                              "type": "string",
                              "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "TagCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "tag-group": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/TagGroupEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TagCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryResourceObject"
          }
        }
      },
      "PostTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagEnum"
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tag-group": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TagGroupEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "lists": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "campaigns": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "flows": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "TagGroupCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryResourceObject"
          }
        }
      },
      "PostTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "TagFlowOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/FlowEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TagCampaignOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/CampaignEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TagListOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ListEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TagSegmentOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/SegmentEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ProfileSuppressionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email of the profile to suppress."
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionCreateQueryResourceObject"
                    }
                  }
                },
                "description": "The profile(s) to create suppressions for."
              }
            },
            "required": [
              "profiles"
            ]
          }
        }
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryResourceObject"
          }
        }
      },
      "Suppression": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "matt-kemp@klaviyo-demo.com",
            "description": "The email of the profile to suppress / unsuppress."
          }
        },
        "required": [
          "email"
        ]
      },
      "UnsuppressionCreateJobCreateQueryDeprecatedResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileUnsuppressionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be removed."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "UnsuppressionCreateJobCreateQueryDeprecated": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryDeprecatedResourceObject"
          }
        }
      },
      "ProfileSuppressionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email of the profile to unsuppress."
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SuppressionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSuppressionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSuppressionDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "The profile(s) to remove suppressions for."
              }
            },
            "required": [
              "profiles"
            ]
          }
        }
      },
      "SuppressionDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionDeleteJobCreateQueryResourceObject"
          }
        }
      },
      "SubscriptionChannels": {
        "type": "object",
        "properties": {
          "email": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARKETING"
              ],
              "description": "The communication types supported by email subscriptions."
            },
            "example": [
              "MARKETING"
            ],
            "description": "The communication types to subscribe to on the \"EMAIL\" Channel. Currently supports \"MARKETING\"."
          },
          "sms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MARKETING"
              ],
              "description": "The communication types supported by SMS subscriptions."
            },
            "example": [
              "MARKETING"
            ],
            "description": "The communication types to subscribe to on the \"SMS\" Channel. Currently supports \"MARKETING\"."
          }
        }
      },
      "ProfileSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "The ID of the profile to subscribe. If provided, this will be used to perform the lookup."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted."
              },
              "subscriptions": {
                "$ref": "#/components/schemas/SubscriptionChannels",
                "description": "When provided, this will provide consent for the indicated message types on the specified channels. If omitted, we will subscribe the profile to all message types on the channels corresponding to the provided identifiers."
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionCreateJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "type": "string",
                "example": "Marketing Event",
                "description": "A custom method detail or source to store on the consent records."
              },
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionCreateQueryResourceObject"
                    }
                  }
                },
                "description": "The profile(s) to subscribe"
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryResourceObject"
          }
        }
      },
      "UnsubscriptionCreateJobCreateQueryDeprecatedResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileUnsubscriptionBulkCreateJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Optional, the list to remove the profiles from"
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "[\"matt-kemp@klaviyo-demo.com\", \"sarah.mason@klaviyo-demo.com\"",
                "description": "The emails to unsubscribe if any."
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "[\"+15005550006\",\"+15005550007\"]",
                "description": "The phone numbers to unsubscribe if any."
              }
            }
          }
        }
      },
      "UnsubscriptionCreateJobCreateQueryDeprecated": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryDeprecatedResourceObject"
          }
        }
      },
      "ProfileSubscriptionDeleteQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "matt-kemp@klaviyo-demo.com",
                "description": "The email address to unsubscribe."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "The phone number to unsubscribe."
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "SubscriptionDeleteJobCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileSubscriptionBulkDeleteJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSubscriptionDeleteQueryResourceObject"
                    }
                  }
                },
                "description": "The profile(s) to unsubscribe"
              }
            },
            "required": [
              "profiles"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SubscriptionDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionDeleteJobCreateQueryResourceObject"
          }
        }
      },
      "DataPrivacyProfileQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "DataPrivacyCreateDeletionJobQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DataPrivacyDeletionJobEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DataPrivacyProfileQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "profile"
            ]
          }
        }
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryResourceObject"
          }
        }
      },
      "_DeviceMetadata": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "example": "1234567890",
            "description": "Relatively stable ID for the device. Will update on app uninstall and reinstall"
          },
          "klaviyo_sdk": {
            "type": "string",
            "enum": [
              "android",
              "swift"
            ],
            "example": "swift",
            "description": "The name of the SDK used to create the push token."
          },
          "sdk_version": {
            "type": "string",
            "example": "1.0.0",
            "description": "The version of the SDK used to create the push token"
          },
          "device_model": {
            "type": "string",
            "example": "iPhone12,1",
            "description": "The model of the device"
          },
          "os_name": {
            "type": "string",
            "enum": [
              "android",
              "ios",
              "ipados",
              "macos",
              "tvos"
            ],
            "example": "ios",
            "description": "The name of the operating system on the device."
          },
          "os_version": {
            "type": "string",
            "example": "14.0",
            "description": "The version of the operating system on the device"
          },
          "manufacturer": {
            "type": "string",
            "example": "Apple",
            "description": "The manufacturer of the device"
          },
          "app_name": {
            "type": "string",
            "example": "Klaviyo",
            "description": "The name of the app that created the push token"
          },
          "app_version": {
            "type": "string",
            "example": "1.0.0",
            "description": "The version of the app that created the push token"
          },
          "app_build": {
            "type": "string",
            "example": 1,
            "description": "The build of the app that created the push token"
          },
          "app_id": {
            "type": "string",
            "example": "com.klaviyo.app",
            "description": "The ID of the app that created the push token"
          },
          "environment": {
            "type": "string",
            "enum": [
              "debug",
              "release"
            ],
            "example": "release",
            "description": "The environment in which the push token was created"
          }
        }
      },
      "ProfileMeta": {
        "type": "object",
        "properties": {
          "patch_properties": {
            "$ref": "#/components/schemas/ProfileMetaPatchProperties",
            "example": {
              "append": {
                "skus": [
                  "92538",
                  "40571"
                ]
              }
            },
            "description": "Specify one or more patch operations to apply to existing property data"
          }
        }
      },
      "ProfileUpsertQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Id that can be used to identify a profile when other identifiers are not available"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              },
              "meta": {
                "$ref": "#/components/schemas/ProfileMeta"
              }
            }
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "PushTokenCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "1234567890",
                "description": "A push token from APNS or FCM."
              },
              "platform": {
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ],
                "description": "The platform on which the push token was created."
              },
              "enablement_status": {
                "type": "string",
                "enum": [
                  "AUTHORIZED",
                  "DENIED",
                  "NOT_DETERMINED",
                  "PROVISIONAL",
                  "UNAUTHORIZED"
                ],
                "example": "AUTHORIZED",
                "default": "AUTHORIZED",
                "description": "This is the enablement status for the individual push token."
              },
              "vendor": {
                "type": "string",
                "enum": [
                  "apns",
                  "fcm"
                ],
                "description": "The vendor of the push token.",
                "example": "APNs"
              },
              "background": {
                "type": "string",
                "enum": [
                  "AVAILABLE",
                  "DENIED",
                  "RESTRICTED"
                ],
                "example": "AVAILABLE",
                "default": "AVAILABLE",
                "description": "The background state of the push token."
              },
              "device_metadata": {
                "$ref": "#/components/schemas/_DeviceMetadata",
                "description": "Metadata about the device that created the push token"
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "description": "The profile associated with the push token to create/update"
              }
            },
            "required": [
              "token",
              "platform",
              "vendor",
              "profile"
            ]
          }
        }
      },
      "PushTokenCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenCreateQueryResourceObject"
          }
        }
      },
      "ImageCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added."
              },
              "import_from_url": {
                "type": "string",
                "example": "https://www.example.com/example.jpg",
                "description": "An existing image url to import the image from. Alternatively, you may specify a base-64 encoded data-uri (`data:image/...`). Supported image formats: jpeg,png,gif. Maximum image size: 5MB."
              },
              "hidden": {
                "type": "boolean",
                "description": "If true, this image is not shown in the asset library."
              }
            },
            "required": [
              "import_from_url"
            ]
          }
        }
      },
      "ImageCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImageCreateQueryResourceObject"
          }
        }
      },
      "PostImageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ImageEnum"
              },
              "id": {
                "type": "string",
                "example": "7",
                "description": "The ID of the image"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "hidden": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "OnsiteSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "custom_source": {
                "type": "string",
                "example": "Homepage footer signup form",
                "description": "A custom method detail or source to store on the consent records for this subscription."
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "list": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/ListEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "Y6nRLr"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OnsiteSubscriptionCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryResourceObject"
          }
        }
      },
      "PushTokenUnregisterQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PushTokenUnregisterEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "1234567890",
                "description": "A push token from APNS or FCM."
              },
              "platform": {
                "type": "string",
                "enum": [
                  "android",
                  "ios"
                ],
                "description": "The platform on which the push token was created."
              },
              "vendor": {
                "type": "string",
                "enum": [
                  "apns",
                  "fcm"
                ],
                "description": "The vendor of the push token.",
                "example": "apns"
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileUpsertQueryResourceObject"
                  }
                },
                "description": "The profile associated with the push token to create/update"
              }
            },
            "required": [
              "token",
              "platform",
              "vendor",
              "profile"
            ]
          }
        }
      },
      "PushTokenUnregisterQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PushTokenUnregisterQueryResourceObject"
          }
        }
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
          }
        }
      },
      "_BaseEventCreateQueryResourceObject": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventEnum"
          },
          "attributes": {
            "properties": {
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels."
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "When this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future."
              },
              "value": {
                "type": "number",
                "example": 9.99,
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase."
              },
              "unique_id": {
                "type": "string",
                "description": "A unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second."
              },
              "metric": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/_MetricCreateQueryResourceObject"
                  }
                }
              }
            },
            "required": [
              "properties",
              "metric"
            ]
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "EventsBulkCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventBulkCreateEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OnsiteProfileCreateQueryResourceObject"
                  }
                }
              },
              "events": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/_BaseEventCreateQueryResourceObject"
                    }
                  }
                }
              }
            },
            "required": [
              "profile",
              "events"
            ]
          }
        }
      },
      "EventsBulkCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventsBulkCreateQueryResourceObject"
          }
        }
      },
      "ClientBISSubscriptionCreateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BackInStockSubscriptionEnum"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "EMAIL",
                    "PUSH",
                    "SMS"
                  ],
                  "description": "The different channel types that a profile could subscribe to BIS notifications for"
                },
                "example": [
                  "EMAIL",
                  "SMS"
                ],
                "description": "The channel(s) through which the profile would like to receive the back in stock notification. This can be leveraged within a back in stock flow to notify the subscriber through their preferred channel(s)."
              },
              "profile": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProfileIdentifierDTOResourceObject"
                  }
                },
                "example": {
                  "id": "01GDDKASAP8TKDDA2GRZDSVP4H",
                  "email": "sarah.mason@klaviyo-demo.com",
                  "phone_number": "+15005550006",
                  "external_id": "63f64a2b-c6bf-40c7-b81f-bed08162edbe"
                }
              }
            },
            "required": [
              "channels",
              "profile"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variant": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/CatalogVariantEnum"
                      },
                      "id": {
                        "type": "string",
                        "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ClientBISSubscriptionCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClientBISSubscriptionCreateQueryResourceObject"
          }
        }
      },
      "CouponUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF",
            "description": "The internal id of a Coupon is equivalent to its external id stored within an integration."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "example": "10% off for purchases over $50",
                "description": "A description of the coupon."
              }
            }
          }
        }
      },
      "CouponUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponUpdateQueryResourceObject"
          }
        }
      },
      "CouponCodeUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CouponCodeEnum"
          },
          "id": {
            "type": "string",
            "example": "10OFF-ASD325FHK324UJDOI2M3JNES99",
            "description": "The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "ASSIGNED_TO_PROFILE",
                  "DELETING",
                  "PROCESSING",
                  "UNASSIGNED",
                  "VERSION_NOT_ACTIVE"
                ],
                "description": "The API status of our coupon codes."
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01:T00:00:00Z",
                "description": "The datetime when this coupon code will expire. Can be used as an optional filter when getting coupon codes."
              }
            }
          }
        }
      },
      "CouponCodeUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponCodeUpdateQueryResourceObject"
          }
        }
      },
      "CatalogItemUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogItemEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
            "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Ocean Blue Shirt (Sample)",
                "description": "The title of the catalog item."
              },
              "price": {
                "type": "number",
                "example": 42.0,
                "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
              },
              "description": {
                "type": "string",
                "example": "A description of the catalog item.",
                "description": "A description of the catalog item."
              },
              "url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of the catalog item on your website."
              },
              "image_full_url": {
                "type": "string",
                "example": "https://via.placeholder.com/300",
                "description": "URL pointing to the location of a full image of the catalog item."
              },
              "image_thumbnail_url": {
                "type": "string",
                "example": "https://via.placeholder.com/150",
                "description": "URL pointing to the location of an image thumbnail of the catalog item"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://via.placeholder.com/150"
                ],
                "description": "List of URLs pointing to the locations of images of the catalog item."
              },
              "custom_metadata": {
                "type": "object",
                "example": {
                  "Top Pick": true
                },
                "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
              },
              "published": {
                "type": "boolean",
                "example": true,
                "description": "Boolean value indicating whether the catalog item is published."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogCategoryEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryResourceObject"
          }
        }
      },
      "PatchCatalogItemResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogItemEnum"
              },
              "id": {
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1",
                "description": "The catalog item ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1",
                    "description": "The ID of the catalog item in an external system."
                  },
                  "title": {
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample)",
                    "description": "The title of the catalog item."
                  },
                  "description": {
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "description": "A description of the catalog item."
                  },
                  "price": {
                    "type": "number",
                    "example": 42.0,
                    "description": "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant)."
                  },
                  "url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of the catalog item on your website."
                  },
                  "image_full_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "description": "URL pointing to the location of a full image of the catalog item."
                  },
                  "image_thumbnail_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of an image thumbnail of the catalog item"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "description": "List of URLs pointing to the locations of images of the catalog item."
                  },
                  "custom_metadata": {
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "description": "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb."
                  },
                  "published": {
                    "type": "boolean",
                    "example": true,
                    "description": "Boolean value indicating whether the catalog item is published."
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "variants": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogVariantEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryResourceObject"
          }
        }
      },
      "PatchCatalogVariantResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogVariantEnum"
              },
              "id": {
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                "description": "The catalog variant ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "example": "SAMPLE-DATA-ITEM-1-VARIANT-MEDIUM",
                    "description": "The ID of the catalog item variant in an external system."
                  },
                  "title": {
                    "type": "string",
                    "example": "Ocean Blue Shirt (Sample) Variant Medium",
                    "description": "The title of the catalog item variant."
                  },
                  "description": {
                    "type": "string",
                    "example": "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.",
                    "description": "A description of the catalog item variant."
                  },
                  "sku": {
                    "type": "string",
                    "example": "OBS-MD",
                    "description": "The SKU of the catalog item variant."
                  },
                  "inventory_policy": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:\n`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.\n`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.",
                    "example": 2
                  },
                  "inventory_quantity": {
                    "type": "number",
                    "example": 25.0,
                    "description": "The quantity of the catalog item variant currently in stock."
                  },
                  "price": {
                    "type": "number",
                    "example": 42.0,
                    "description": "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item)."
                  },
                  "url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of the catalog item variant on your website."
                  },
                  "image_full_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/300",
                    "description": "URL pointing to the location of a full image of the catalog item variant."
                  },
                  "image_thumbnail_url": {
                    "type": "string",
                    "example": "https://via.placeholder.com/150",
                    "description": "URL pointing to the location of an image thumbnail of the catalog item variant."
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://via.placeholder.com/150"
                    ],
                    "description": "List of URLs pointing to the locations of images of the catalog item variant."
                  },
                  "custom_metadata": {
                    "type": "object",
                    "example": {
                      "Top Pick": true
                    },
                    "description": "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb."
                  },
                  "published": {
                    "type": "boolean",
                    "example": true,
                    "description": "Boolean value indicating whether the catalog item variant is published."
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item  variant was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog item variant was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "item": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CatalogItemEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CatalogCategoryEnum"
          },
          "id": {
            "type": "string",
            "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
            "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Sample Data Category Apparel",
                "description": "The name of the catalog category."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "$ref": "#/components/schemas/CatalogItemEnum"
                        },
                        "id": {
                          "type": "string",
                          "example": "$custom:::$default:::SAMPLE-DATA-ITEM-1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryResourceObject"
          }
        }
      },
      "PatchCatalogCategoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CatalogCategoryEnum"
              },
              "id": {
                "type": "string",
                "example": "$custom:::$default:::SAMPLE-DATA-CATEGORY-APPAREL",
                "description": "The catalog category ID is a compound ID (string), with format: `{integration}:::{catalog}:::{external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "example": "SAMPLE-DATA-CATEGORY-APPAREL",
                    "description": "The ID of the catalog category in an external system."
                  },
                  "name": {
                    "type": "string",
                    "example": "Sample Data Category Apparel",
                    "description": "The name of the catalog category."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the catalog category was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CatalogItemEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "ListPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ListEnum"
          },
          "id": {
            "type": "string",
            "example": "Y6nRLr",
            "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Newsletter",
                "description": "A helpful name to label the list"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryResourceObject"
          }
        }
      },
      "PatchListPartialUpdateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ListEnum"
              },
              "id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "Primary key that uniquely identifies this list. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Newsletter",
                    "description": "A helpful name to label the list"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the list was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "SegmentPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SegmentEnum"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryResourceObject"
          }
        }
      },
      "PatchSegmentPartialUpdateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SegmentEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Repeat Purchasers",
                    "description": "A helpful name to label the segment"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "profiles": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ProfileEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "ProfilePartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProfileEnum"
          },
          "id": {
            "type": "string",
            "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
            "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "sarah.mason@klaviyo-demo.com",
                "description": "Individual's email address"
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Individual's phone number in E.164 format"
              },
              "external_id": {
                "type": "string",
                "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string",
                "example": "Sarah",
                "description": "Individual's first name"
              },
              "last_name": {
                "type": "string",
                "example": "Mason",
                "description": "Individual's last name"
              },
              "organization": {
                "type": "string",
                "example": "Klaviyo",
                "description": "Name of the company or organization within the company for whom the individual works"
              },
              "title": {
                "type": "string",
                "example": "Engineer",
                "description": "Individual's job title"
              },
              "image": {
                "type": "string",
                "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                "description": "URL pointing to the location of a profile image"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object",
                "example": {
                  "pseudonym": "Dr. Octopus"
                },
                "description": "An object containing key/value pairs for any custom properties assigned to this profile"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ProfileMeta"
          }
        }
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryResourceObject"
          }
        }
      },
      "PatchProfileResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ProfileEnum"
              },
              "id": {
                "type": "string",
                "example": "01GDDKASAP8TKDDA2GRZDSVP4H",
                "description": "Primary key that uniquely identifies this profile. Generated by Klaviyo."
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sarah.mason@klaviyo-demo.com",
                    "description": "Individual's email address"
                  },
                  "phone_number": {
                    "type": "string",
                    "example": "+15005550006",
                    "description": "Individual's phone number in E.164 format"
                  },
                  "external_id": {
                    "type": "string",
                    "example": "63f64a2b-c6bf-40c7-b81f-bed08162edbe",
                    "description": "A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system."
                  },
                  "first_name": {
                    "type": "string",
                    "example": "Sarah",
                    "description": "Individual's first name"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Mason",
                    "description": "Individual's last name"
                  },
                  "organization": {
                    "type": "string",
                    "example": "Klaviyo",
                    "description": "Name of the company or organization within the company for whom the individual works"
                  },
                  "title": {
                    "type": "string",
                    "example": "Engineer",
                    "description": "Individual's job title"
                  },
                  "image": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/3760854/pexels-photo-3760854.jpeg",
                    "description": "URL pointing to the location of a profile image"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "last_event_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "location": {
                    "$ref": "#/components/schemas/ProfileLocation"
                  },
                  "properties": {
                    "type": "object",
                    "example": {
                      "pseudonym": "Dr. Octopus"
                    },
                    "description": "An object containing key/value pairs for any custom properties assigned to this profile"
                  },
                  "subscriptions": {
                    "$ref": "#/components/schemas/Subscriptions"
                  },
                  "predictive_analytics": {
                    "$ref": "#/components/schemas/PredictiveAnalytics"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/ListEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "segments": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/SegmentEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "FlowUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FlowEnum"
          },
          "id": {
            "type": "string",
            "description": "ID of the Flow to update. Ex: XVTP5Q"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Status you want to update the flow to. ['draft', 'manual', or 'live']"
              }
            },
            "required": [
              "status"
            ]
          }
        }
      },
      "FlowUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryResourceObject"
          }
        }
      },
      "PatchFlowResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/FlowEnum"
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00"
                  },
                  "trigger_type": {
                    "type": "string",
                    "enum": [
                      "Added to List",
                      "Date Based",
                      "Metric",
                      "Price Drop",
                      "Unconfigured"
                    ],
                    "description": "Corresponds to the object which triggered the flow."
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "flow-actions": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/FlowActionEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignEnum"
          },
          "id": {
            "type": "string",
            "description": "The campaign ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                  }
                ],
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                  }
                ],
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryResourceObject"
          }
        }
      },
      "PatchCampaignResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignEnum"
              },
              "id": {
                "type": "string",
                "description": "The campaign ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The campaign name"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the campaign"
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the campaign has been archived or not"
                  },
                  "audiences": {
                    "$ref": "#/components/schemas/AudiencesSubObject",
                    "description": "The audiences to be included and/or excluded from the campaign"
                  },
                  "send_options": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailSendOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSSendOptionsSubObject"
                      }
                    ],
                    "description": "Options to use when sending a campaign"
                  },
                  "tracking_options": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailTrackingOptionsSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSTrackingOptionsSubObject"
                      }
                    ],
                    "description": "The tracking options associated with the campaign"
                  },
                  "send_strategy": {
                    "$ref": "#/components/schemas/SendStrategySubObject",
                    "description": "The send strategy the campaign will send with"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign was created"
                  },
                  "scheduled_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign was scheduled for future sending"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign was last updated by a user or the system"
                  },
                  "send_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "audiences",
                  "send_options",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign-messages": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/CampaignMessageEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignMessageEnum"
          },
          "id": {
            "type": "string",
            "description": "The message ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailContentSubObject"
                  },
                  {
                    "$ref": "#/components/schemas/SMSContentSubObjectCreate"
                  }
                ],
                "description": "Additional attributes relating to the content of the message"
              },
              "render_options": {
                "$ref": "#/components/schemas/RenderOptionsSubObject",
                "description": "Additional options for rendering the message"
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryResourceObject"
          }
        }
      },
      "PatchCampaignMessageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/CampaignMessageEnum"
              },
              "id": {
                "type": "string",
                "description": "The message ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The label or name on the message"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The channel the message is to be sent on"
                  },
                  "content": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/EmailContentSubObject"
                      },
                      {
                        "$ref": "#/components/schemas/SMSContentSubObject"
                      }
                    ],
                    "description": "Additional attributes relating to the content of the message"
                  },
                  "send_times": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "description": "The list of appropriate Send Time Sub-objects associated with the message"
                  },
                  "render_options": {
                    "$ref": "#/components/schemas/RenderOptionsSubObject",
                    "description": "Additional options for rendering the message"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was last updated"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "campaign": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/CampaignEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  },
                  "template": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/TemplateEnum"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "CampaignSendJobPartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignSendJobEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of the currently sending campaign to cancel or revert"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "example": "cancel",
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'"
              }
            },
            "required": [
              "action"
            ]
          }
        }
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryResourceObject"
          }
        }
      },
      "TemplateUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TemplateEnum"
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "html": {
                "type": "string",
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          ",
                "description": "The HTML of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext of the template"
              }
            }
          }
        }
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryResourceObject"
          }
        }
      },
      "PatchTemplateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TemplateEnum"
              },
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the template"
                  },
                  "editor_type": {
                    "type": "string",
                    "description": "`editor_type` has a fixed set of values:\n* SYSTEM_DRAGGABLE: indicates a drag-and-drop editor template\n* SIMPLE: A rich text editor template\n* CODE: A custom HTML template\n* USER_DRAGGABLE: A hybrid template, using custom HTML in the drag-and-drop editor"
                  },
                  "html": {
                    "type": "string",
                    "description": "The rendered HTML of the template"
                  },
                  "text": {
                    "type": "string",
                    "description": "The template plain_text"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The date the template was updated in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
                  }
                },
                "required": [
                  "name",
                  "editor_type",
                  "html"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "TagUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagEnum"
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryResourceObject"
          }
        }
      },
      "TagGroupUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TagGroupEnum"
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryResourceObject"
          }
        }
      },
      "PatchTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "ImagePartialUpdateQueryResourceObject": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageEnum"
          },
          "id": {
            "type": "string",
            "example": "7",
            "description": "The ID of the image"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A name for the image."
              },
              "hidden": {
                "type": "boolean",
                "description": "If true, this image is not shown in the asset library."
              }
            }
          }
        }
      },
      "ImagePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ImagePartialUpdateQueryResourceObject"
          }
        }
      },
      "PatchImageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ImageEnum"
              },
              "id": {
                "type": "string",
                "example": "7",
                "description": "The ID of the image"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "hidden": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "image_url",
                  "format",
                  "size",
                  "hidden"
                ]
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "ListMembersDeleteQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/ProfileEnum"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "DeleteTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "$ref": "#/components/schemas/TagGroupEnum"
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "$ref": "#/components/schemas/TagEnum"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "links": {
                        "$ref": "#/components/schemas/RelationshipLinks"
                      }
                    }
                  }
                }
              },
              "links": {
                "$ref": "#/components/schemas/ObjectLinks"
              }
            }
          }
        }
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "related": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self",
          "related"
        ]
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          },
          "first": {
            "type": "string",
            "format": "uri"
          },
          "last": {
            "type": "string",
            "format": "uri"
          },
          "prev": {
            "type": "string",
            "format": "uri"
          },
          "next": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "ObjectLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "self"
        ]
      },
      "CouponEnum": {
        "type": "string",
        "enum": [
          "coupon"
        ]
      },
      "CouponCodeEnum": {
        "type": "string",
        "enum": [
          "coupon-code"
        ]
      },
      "CatalogItemEnum": {
        "type": "string",
        "enum": [
          "catalog-item"
        ]
      },
      "CatalogVariantEnum": {
        "type": "string",
        "enum": [
          "catalog-variant"
        ]
      },
      "CatalogCategoryEnum": {
        "type": "string",
        "enum": [
          "catalog-category"
        ]
      },
      "CouponCodeBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "coupon-code-bulk-create-job"
        ]
      },
      "EventEnum": {
        "type": "string",
        "enum": [
          "event"
        ]
      },
      "MetricEnum": {
        "type": "string",
        "enum": [
          "metric"
        ]
      },
      "ProfileEnum": {
        "type": "string",
        "enum": [
          "profile"
        ]
      },
      "ListEnum": {
        "type": "string",
        "enum": [
          "list"
        ]
      },
      "TagEnum": {
        "type": "string",
        "enum": [
          "tag"
        ]
      },
      "SegmentEnum": {
        "type": "string",
        "enum": [
          "segment"
        ]
      },
      "FlowEnum": {
        "type": "string",
        "enum": [
          "flow"
        ]
      },
      "FlowActionEnum": {
        "type": "string",
        "enum": [
          "flow-action"
        ]
      },
      "FlowMessageEnum": {
        "type": "string",
        "enum": [
          "flow-message"
        ]
      },
      "TemplateEnum": {
        "type": "string",
        "enum": [
          "template"
        ]
      },
      "CampaignEnum": {
        "type": "string",
        "enum": [
          "campaign"
        ]
      },
      "CampaignMessageEnum": {
        "type": "string",
        "enum": [
          "campaign-message"
        ]
      },
      "CampaignSendJobEnum": {
        "type": "string",
        "enum": [
          "campaign-send-job"
        ]
      },
      "CampaignRecipientEstimationJobEnum": {
        "type": "string",
        "enum": [
          "campaign-recipient-estimation-job"
        ]
      },
      "CampaignRecipientEstimationEnum": {
        "type": "string",
        "enum": [
          "campaign-recipient-estimation"
        ]
      },
      "CatalogItemBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-create-job"
        ]
      },
      "CatalogItemBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-update-job"
        ]
      },
      "CatalogItemBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-item-bulk-delete-job"
        ]
      },
      "CatalogVariantBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-create-job"
        ]
      },
      "CatalogVariantBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-update-job"
        ]
      },
      "CatalogVariantBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-variant-bulk-delete-job"
        ]
      },
      "CatalogCategoryBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-create-job"
        ]
      },
      "CatalogCategoryBulkUpdateJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-update-job"
        ]
      },
      "CatalogCategoryBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "catalog-category-bulk-delete-job"
        ]
      },
      "TagGroupEnum": {
        "type": "string",
        "enum": [
          "tag-group"
        ]
      },
      "AccountEnum": {
        "type": "string",
        "enum": [
          "account"
        ]
      },
      "ImageEnum": {
        "type": "string",
        "enum": [
          "image"
        ]
      },
      "BackInStockSubscriptionEnum": {
        "type": "string",
        "enum": [
          "back-in-stock-subscription"
        ]
      },
      "MetricAggregateEnum": {
        "type": "string",
        "enum": [
          "metric-aggregate"
        ]
      },
      "ProfileSuppressionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-create-job"
        ]
      },
      "ProfileUnsuppressionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-unsuppression-bulk-create-job"
        ]
      },
      "ProfileSuppressionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-suppression-bulk-delete-job"
        ]
      },
      "ProfileSubscriptionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-create-job"
        ]
      },
      "ProfileUnsubscriptionBulkCreateJobEnum": {
        "type": "string",
        "enum": [
          "profile-unsubscription-bulk-create-job"
        ]
      },
      "ProfileSubscriptionBulkDeleteJobEnum": {
        "type": "string",
        "enum": [
          "profile-subscription-bulk-delete-job"
        ]
      },
      "DataPrivacyDeletionJobEnum": {
        "type": "string",
        "enum": [
          "data-privacy-deletion-job"
        ]
      },
      "PushTokenEnum": {
        "type": "string",
        "enum": [
          "push-token"
        ]
      },
      "SubscriptionEnum": {
        "type": "string",
        "enum": [
          "subscription"
        ]
      },
      "PushTokenUnregisterEnum": {
        "type": "string",
        "enum": [
          "push-token-unregister"
        ]
      },
      "EventBulkCreateEnum": {
        "type": "string",
        "enum": [
          "event-bulk-create"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Client Error"
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Server Error"
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2023-09-15/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "accounts"
    },
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Coupons",
      "description": "coupons"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Images",
      "description": "images"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Client",
      "description": "client"
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
